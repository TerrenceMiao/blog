<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Terrence Miao&#39;s Adventures</title>
  
  <subtitle>A journey of a thousand miles begins with a single step</subtitle>
  <link href="https://terrencemiao.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://terrencemiao.github.io/blog/"/>
  <updated>2023-07-29T05:21:13.949Z</updated>
  <id>https://terrencemiao.github.io/blog/</id>
  
  <author>
    <name>Terrence Miao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Micro Frontends</title>
    <link href="https://terrencemiao.github.io/blog/2023/07/29/Micro-Frontends/"/>
    <id>https://terrencemiao.github.io/blog/2023/07/29/Micro-Frontends/</id>
    <published>2023-07-29T05:16:56.000Z</published>
    <updated>2023-07-29T05:21:13.949Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/blog/img/Micro%20Frontends.png" alt="Micro Frontends" title="Micro Frontends"></p><p><strong>Righ model, right tools - the new way of building and collaborating on frontend apps is the core element of Micro Frontends.</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/blog/img/Micro%20Frontends.png&quot; alt=&quot;Micro Frontends&quot; title=&quot;Micro Frontends&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Righ model, right tools - the ne</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Remove Image Background</title>
    <link href="https://terrencemiao.github.io/blog/2022/10/12/Remove-Image-Background/"/>
    <id>https://terrencemiao.github.io/blog/2022/10/12/Remove-Image-Background/</id>
    <published>2022-10-12T11:59:54.000Z</published>
    <updated>2023-07-28T16:18:19.284Z</updated>
    
    <content type="html"><![CDATA[<p>Remove backgrounds 100% automatically in 5 seconds with one click. Thanks to remove.bg <em><a href="https://www.remove.bg/">https://www.remove.bg/</a></em> clever AI.</p><p><img src="/blog/img/Messi%2030.png" alt="Messi" title="Messi"></p><p><img src="/blog/img/%E5%B0%8F%E6%B3%89%E4%BB%8A%E6%97%A5%E5%AD%90.png" alt="小泉今日子" title="小泉今日子"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Remove backgrounds 100% automatically in 5 seconds with one click. Thanks to remove.bg &lt;em&gt;&lt;a href=&quot;https://www.remove.bg/&quot;&gt;https://www.r</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Geekbench head to head - Mac vs iPad vs Android</title>
    <link href="https://terrencemiao.github.io/blog/2022/10/10/Geekbench-head-to-head-Mac-vs-iPad-vs-Android/"/>
    <id>https://terrencemiao.github.io/blog/2022/10/10/Geekbench-head-to-head-Mac-vs-iPad-vs-Android/</id>
    <published>2022-10-10T01:48:30.000Z</published>
    <updated>2023-07-28T16:18:19.286Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Geekbench head to head - Mac vs iPad vs Android:</strong></p><ul><li>10 years old Mac mini Late 2012 (2.6GHz quad-core Intel Core i7 Turbo Boost up to 3.6GHz)</li><li>4 years old MacBook Pro 15-inch Mid 2018 (2.6GHz 6-core Intel Core i7, Turbo Boost up to 4.3GHz)</li><li>4 years old iPad Pro 11” 2018 3rd gen (A12X Bionic 7 nm, 4-core Vortex at 2.5GHz , 4-core Tempest at 1.6GHz)</li><li>1 year old MacBook Pro 16-inch 2021 (Apple Silicon M1 Pro, 10-core CPU at 3.2GHz)</li><li>没满岁的 Android (Snapdragon 8 Gen1, 1 core Cortex-X2 at 3GHz, 3-core Cortex-A710 at 2.5GHz, and 4-core Cortex-A510 at 1.8GHz)</li></ul><p><img src="/blog/img/Geekbench%20head%20to%20head%20-%20Mac%20vs%20iPad%20vs%20Android.png" alt="Geekbench head to head - Mac vs iPad vs Android" title="Geekbench head to head - Mac vs iPad vs Android"></p><p><strong>Conclusion:</strong></p><ol><li>Intel 已经是江河日下，被时代淘汰</li><li>Apple Processors 实在太强。 四年前的处理器还可吊打当前最新的 Snapdragon Processors</li><li>同是 2018 年产品，iPad Pro 把 Intel CPU based 的 MacBook Pro 按在地上碾压</li></ol><p>ARM vs x86 谁是未来，一目了然。</p><p><strong>NOTE</strong></p><p>The Apple M1 chip is built for Macs, and the A15 for phones. They use completely different architectures. The A15 prioritizes battery over performance. The M1 has more firepower for graphics.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Geekbench head to head - Mac vs iPad vs Android:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10 years old Mac mini Late 2012 (2.6GHz quad-core Intel Co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>How to use Web Inspector and debug Safari on iPhone/iPad</title>
    <link href="https://terrencemiao.github.io/blog/2022/09/07/How-to-use-Web-Inspector-and-debug-Safari-on-iPhone-iPad/"/>
    <id>https://terrencemiao.github.io/blog/2022/09/07/How-to-use-Web-Inspector-and-debug-Safari-on-iPhone-iPad/</id>
    <published>2022-09-07T03:32:33.000Z</published>
    <updated>2023-07-28T16:18:19.368Z</updated>
    
    <content type="html"><![CDATA[<p>Prerequisites:</p><ul><li>iPhone &#x2F; iPad &#x2F; iPod and the Macbook on the same version of Safari</li><li>a genuine Apple lightning or USB cable</li></ul><p>Step by step:</p><ul><li>On iPad, iPhone or iPod touch, go to menu Settings &gt; Safari &gt; Advanced and toggle on Web Inspector. Enable JavaScript if it isn’t already on</li><li>On Macbook, launch Safari and go to menu Preferences &gt; Advanced then toggle on “Show Develop menu in menu bar”</li><li>Connect iOS device to Macbook with the lightning or USB cable</li><li>Now on iOS device, open Safari and go to the website you want to debug</li><li>On Macbook, open Safari and go to “Develop” menu. You now see your iOS device that has connected with Macbook (if no page opened on iOS device, you see a message saying “No Inspectable Applications”)</li></ul><p>![Safari Develop menu](&#x2F;img&#x2F;Safari Develop.png “Safari Develop menu”)</p><ul><li>Click on the website in Safari Develop &gt; iOS device menu, Web Inspector window opened, then you can debug as you used to debug in Safari</li></ul><p>![Web Inspector](&#x2F;img&#x2F;Web Inspector.png “Web Inspector”)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iPhone &amp;#x2F; iPad &amp;#x2F; iPod and the Macbook on the same version of Safari&lt;/li&gt;
&lt;li&gt;a genuine Apple lightni</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GitHub Actions</title>
    <link href="https://terrencemiao.github.io/blog/2022/09/02/GitHub-Actions/"/>
    <id>https://terrencemiao.github.io/blog/2022/09/02/GitHub-Actions/</id>
    <published>2022-09-02T05:33:47.000Z</published>
    <updated>2023-07-28T16:18:19.381Z</updated>
    
    <content type="html"><![CDATA[<p>Have you tried GitHub Actions?</p><ul><li>GitHub Actions</li></ul><p><img src="/blog/img/GitHub%20Actions.png" alt="GitHub Actions" title="GitHub Actions"></p><ul><li>GitHub Actions Workflow</li></ul><p><img src="/blog/img/GitHub%20Actions%20Workflow.png" alt="GitHub Actions Workflow" title="GitHub Actions Workflow"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Have you tried GitHub Actions?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Actions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/blog/img/GitHub%20Actions.png&quot; alt=&quot;GitHub Actions&quot; t</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Powerful Zsh</title>
    <link href="https://terrencemiao.github.io/blog/2022/08/02/Powerful-Zsh/"/>
    <id>https://terrencemiao.github.io/blog/2022/08/02/Powerful-Zsh/</id>
    <published>2022-08-02T09:42:06.000Z</published>
    <updated>2023-07-28T16:18:19.348Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/blog/img/Powerful%20Zsh.png" alt="Powerful Zsh" title="Powerful Zsh"></p><p>First you have <code>Zsh</code>, next install <code>Oh My Zsh</code> <a href="https://ohmyz.sh/">https://ohmyz.sh/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><p>Add <code>Powerlevel10k</code> <a href="https://github.com/romkatv/powerlevel10k">https://github.com/romkatv/powerlevel10k</a> and configure it</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k</span><br><span class="line"></span><br><span class="line">p10k configure</span><br></pre></td></tr></table></figure><p>Set <code>ZSH_THEME</code> to <strong>powerlevel10k</strong> in <code>.zshrc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</span><br></pre></td></tr></table></figure><p>Add <code>zsh-autosuggestions</code> <a href="https://github.com/zsh-users/zsh-autosuggestions">https://github.com/zsh-users/zsh-autosuggestions</a> and enable in <code>.zshrc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">plugins=(</span><br><span class="line">  zsh-autosuggestions</span><br><span class="line">)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Install <code>Fig</code> <a href="https://fig.io/">https://fig.io/</a>, an IDE-style autocomplete but for terminal, and configure in <code>.zshrc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"># Fig pre block. Keep at the top of this file.</span><br><span class="line">[[ -f &quot;$HOME/.fig/shell/zshrc.pre.zsh&quot; ]] &amp;&amp; . &quot;$HOME/.fig/shell/zshrc.pre.zsh&quot;</span><br><span class="line">...</span><br><span class="line"># Fig post block. Keep at the bottom of this file.</span><br><span class="line">[[ -f &quot;$HOME/.fig/shell/zshrc.post.zsh&quot; ]] &amp;&amp; . &quot;$HOME/.fig/shell/zshrc.post.zsh&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li>How To Make Your Boring Mac Terminal So Much Better, <em><a href="https://www.youtube.com/watch?v=CF1tMjvHDRA">https://www.youtube.com/watch?v=CF1tMjvHDRA</a></em></li><li>How To Setup Your Mac Terminal, <em><a href="https://www.josean.com/posts/terminal-setup">https://www.josean.com/posts/terminal-setup</a></em></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/blog/img/Powerful%20Zsh.png&quot; alt=&quot;Powerful Zsh&quot; title=&quot;Powerful Zsh&quot;&gt;&lt;/p&gt;
&lt;p&gt;First you have &lt;code&gt;Zsh&lt;/code&gt;, next install &lt;co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Convert JSON to CSV by using jq</title>
    <link href="https://terrencemiao.github.io/blog/2022/05/02/Convert-JSON-to-CSV-by-using-jq/"/>
    <id>https://terrencemiao.github.io/blog/2022/05/02/Convert-JSON-to-CSV-by-using-jq/</id>
    <published>2022-05-02T06:20:52.000Z</published>
    <updated>2023-07-28T16:18:19.318Z</updated>
    
    <content type="html"><![CDATA[<p>Step by step convert exported JSON data from AWS DynamoDB table into CSV, by using <code>jq</code>.</p><p>Export all the data from AWS DynamoDB table at first:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 aws --profile production dynamodb scan --table-name tiles &gt; tiles.json</span><br></pre></td></tr></table></figure><p>The exported JSON data looks like:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Items&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;last_modified_date&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;2021-12-09T01:15:25.335516&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;valid_from&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;2021-12-09T01:00&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;created_date&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;2021-12-09T01:15:25.334965&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;status&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;PUBLISHED&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;valid_to&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;2022-01-31T23:00&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;id&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;b2c60f43-a81c-4363-a68a-dfe7682182d7&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;description&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;Hit the road Jack!&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;title&quot;: &#123;</span><br><span class="line">                &quot;S&quot;: &quot;Novated Lease&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">...</span><br><span class="line">    ],</span><br><span class="line">    &quot;Count&quot;: 223,</span><br><span class="line">    &quot;ScannedCount&quot;: 223,</span><br><span class="line">    &quot;ConsumedCapacity&quot;: null</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Extract &#x2F; transform JSON data:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">𝜆 cat tiles.json | jq &#x27;[.Items[] | &#123; id: .id.S, title: .title.S, description: .description.S, status: .status.S, valid_from: .valid_from.S, valid_to: .valid_to.S &#125;]&#x27; &gt; tiles-extracted.json</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;id&quot;: &quot;b2c60f43-a81c-4363-a68a-dfe7682182d7&quot;,</span><br><span class="line">    &quot;title&quot;: &quot;Novated Lease&quot;,</span><br><span class="line">    &quot;description&quot;: &quot;Hit the road Jack!&quot;,</span><br><span class="line">    &quot;status&quot;: &quot;PUBLISHED&quot;,</span><br><span class="line">    &quot;valid_from&quot;: &quot;2021-12-09T01:00&quot;,</span><br><span class="line">    &quot;valid_to&quot;: &quot;2022-01-31T23:00&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>Convert JSON data into CSV:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 cat tiles-extracted.json | jq -r &#x27;(.[0] | keys_unsorted) as $keys | $keys, map([.[ $keys[] ]])[] | @csv&#x27; &gt; tiles.csv</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li>How to convert arbitrary simple JSON to CSV using jq, <a href="https://stackoverflow.com/questions/32960857/how-to-convert-arbitrary-simple-json-to-csv-using-jq">https://stackoverflow.com/questions/32960857/how-to-convert-arbitrary-simple-json-to-csv-using-jq</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Step by step convert exported JSON data from AWS DynamoDB table into CSV, by using &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Export all the data from AWS D</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Customise VS Code settings and keybindings with Geddski macros</title>
    <link href="https://terrencemiao.github.io/blog/2021/07/30/Customise-VS-Code-settings-and-keybindings-with-Geddski-macros/"/>
    <id>https://terrencemiao.github.io/blog/2021/07/30/Customise-VS-Code-settings-and-keybindings-with-Geddski-macros/</id>
    <published>2021-07-30T10:28:19.000Z</published>
    <updated>2023-07-28T16:18:19.342Z</updated>
    
    <content type="html"><![CDATA[<p>In IntelliJ IDEA, you can comment a line, the cursor is moved to the next line automatically. This is a very easy way to comment several lines. However, in VS Code, default behaviour is that the cursor stays on the same line.</p><p>To copy the behavior of IntelliJ, go with:</p><ul><li><p>Install <code>macros</code> author by <strong>geddski</strong> in VS Code.</p></li><li><p>Edit <code>settings.json</code> and add:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;macros&quot;: &#123;</span><br><span class="line">    &quot;commentDown&quot;: [</span><br><span class="line">        &quot;editor.action.commentLine&quot;,</span><br><span class="line">        &quot;cursorDown&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>Edit <code>keybindings.json</code> and add:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;key&quot;: &quot;cmd+/&quot;,</span><br><span class="line">    &quot;command&quot;: &quot;macros.commentDown&quot;,</span><br><span class="line">    &quot;when&quot;: &quot;editorTextFocus &amp;&amp; !editorReadonly&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In IntelliJ IDEA, you can comment a line, the cursor is moved to the next line automatically. This is a very easy way to comment several </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Export and Import AWS DynamoDB data</title>
    <link href="https://terrencemiao.github.io/blog/2021/07/06/Export-and-Import-AWS-DynamoDB-data/"/>
    <id>https://terrencemiao.github.io/blog/2021/07/06/Export-and-Import-AWS-DynamoDB-data/</id>
    <published>2021-07-06T05:07:34.000Z</published>
    <updated>2023-07-28T16:18:19.279Z</updated>
    
    <content type="html"><![CDATA[<p>A simple, straightforward way export and import AWS DynamoDB table’s data with AWS CLI and a few scripts.</p><p>At first, export all the data from AWS DynamoDB table:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 aws --profile production dynamodb scan --table-name tile-event &gt; tile-event-export.json</span><br></pre></td></tr></table></figure><p>Convert a list of items&#x2F;records (DynamoDB JSON) into individual <strong>PutRequest</strong> JSON with <code>jq</code>.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 cat tile-event-export.json | jq &#x27;&#123;&quot;Items&quot;: [.Items[] | &#123;PutRequest: &#123;Item: .&#125;&#125;]&#125;&#x27; &gt; tile-event-import.json</span><br></pre></td></tr></table></figure><p>Transform the data if necessary:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 sed &#x27;s/tile-images-prod/tile-images-pdev/g&#x27; tile-event-import.json &gt; tile-event-import-transformed.json</span><br></pre></td></tr></table></figure><p>Split all requests into <strong>25</strong> requests per file, with <code>jq</code> and <code>awk</code> (Note: There are some restriction with AWS DynamoDB batch-write-item request - The BatchWriteItem operation can contain up to <strong>25</strong> individual PutItem and DeleteItem requests and can write up to 16 MB of data. The maximum size of an individual item is 400 KB.)</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">𝜆 cat tile-event-processed.awk</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/awk -f</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">NR%</span><span class="language-bash">25==1 &#123;</span></span><br><span class="line">  x=&quot;tile-event-import-processed-&quot;++i&quot;.json&quot;;</span><br><span class="line">  print &quot;&#123;&quot; &gt; x</span><br><span class="line">  print &quot;  \&quot;tile-event\&quot;: [&quot; &gt; x</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  printf &quot;    %s&quot;, $0 &gt; x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">NR%</span><span class="language-bash">25!=0 &#123;</span></span><br><span class="line">  print &quot;,&quot; &gt; x</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">NR%</span><span class="language-bash">25==0 &#123;</span></span><br><span class="line">  print &quot;&quot; &gt; x</span><br><span class="line">  print &quot;  ]&quot; &gt; x</span><br><span class="line">  print &quot;&#125;&quot; &gt; x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">𝜆 jq -c &#x27;.Items[]&#x27; tile-event-import-transformed.json | ./tile-event-processed.awk</span><br></pre></td></tr></table></figure><p>Import all <strong>22</strong> processed JSON files into DynamoDB table:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span> f <span class="keyword">in</span> tile-event-import-processed-&#123;1..22&#125;.json; <span class="keyword">do</span> \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="variable">$f</span>; \</span></span><br><span class="line"><span class="language-bash">    aws --profile development dynamodb batch-write-item --request-items file://<span class="variable">$f</span>; \</span></span><br><span class="line"><span class="language-bash">  <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;A simple, straightforward way export and import AWS DynamoDB table’s data with AWS CLI and a few scripts.&lt;/p&gt;
&lt;p&gt;At first, export all the</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Get and read logs from AWS CloudWatch with saw</title>
    <link href="https://terrencemiao.github.io/blog/2021/06/04/Get-and-read-logs-from-AWS-CloudWatch-with-saw/"/>
    <id>https://terrencemiao.github.io/blog/2021/06/04/Get-and-read-logs-from-AWS-CloudWatch-with-saw/</id>
    <published>2021-06-04T03:49:02.000Z</published>
    <updated>2023-07-28T16:18:19.387Z</updated>
    
    <content type="html"><![CDATA[<p>For all the people painfully read logs on AWS CloudWatch console, <a href="https://github.com/TylerBrock/saw">saw</a> is your friend.</p><p>Get CloudWatch log groups start with <code>paradise-api</code>:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">𝜆 saw groups --profile ap-prod --prefix paradise-api</span><br><span class="line">paradise-api-CloudFormationLogs-mwwmzgYOtbcB</span><br></pre></td></tr></table></figure><p>Get last 2 hours logs for <code>paradise-api</code> from CloudWatch, with <a href="https://github.com/TylerBrock/saw">saw</a>:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 saw get --profile ap-prod --start -2h paradise-api-CloudFormationLogs-mwwmzgYOtbcB --prefix docker | jq .log | sed &#x27;s/\\\n&quot;$//; s/^&quot;//&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;For all the people painfully read logs on AWS CloudWatch console, &lt;a href=&quot;https://github.com/TylerBrock/saw&quot;&gt;saw&lt;/a&gt; is your friend.&lt;/p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>AWS EC2 CloudFormation templates in subnets</title>
    <link href="https://terrencemiao.github.io/blog/2021/05/11/AWS-EC2-CloudFormation-templates-in-subnets/"/>
    <id>https://terrencemiao.github.io/blog/2021/05/11/AWS-EC2-CloudFormation-templates-in-subnets/</id>
    <published>2021-05-11T13:02:15.000Z</published>
    <updated>2023-07-28T16:18:19.324Z</updated>
    
    <content type="html"><![CDATA[<p>AWS EC2 instance CloudFormation templates in Public Tier and App Tier:</p><script src="https://gist.github.com/TerrenceMiao/58396c567574ed14c39dfc02ce78367f.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;AWS EC2 instance CloudFormation templates in Public Tier and App Tier:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/TerrenceMiao/58396c567574</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Read environment variables of a process in Linux</title>
    <link href="https://terrencemiao.github.io/blog/2021/04/30/Read-environment-varibles-of-a-process-in-Linux/"/>
    <id>https://terrencemiao.github.io/blog/2021/04/30/Read-environment-varibles-of-a-process-in-Linux/</id>
    <published>2021-04-30T12:44:39.000Z</published>
    <updated>2023-07-28T16:18:19.313Z</updated>
    
    <content type="html"><![CDATA[<p>When try to get the content of any &#x2F;proc&#x2F;<em>PID</em>&#x2F;environ file in more readable format, you can:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/proc/[pid]/environ</span><br><span class="line">      This file contains the environment for the process.  The entries</span><br><span class="line">      are separated by null bytes (&#x27;\0&#x27;), and there may be a null byte</span><br><span class="line">      at the end.</span><br></pre></td></tr></table></figure><p>A simple way is to apply <code>xargs -0 -L1 -a</code> on it:</p><ul><li><code>-0</code> - read null-delimited lines,</li><li><code>-L1</code> - read one line per execution of command</li><li><code>-a</code> - file read lines from file</li></ul><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps -aef</span></span><br><span class="line">10101     3629  3589  0 Apr27 ?        00:00:00 /bin/bash bin/start</span><br><span class="line">10101     3670  3629  0 Apr27 ?        00:00:00 /bin/bash bin/start-tomcat</span><br><span class="line">10101     3671  3670  0 Apr27 ?        00:07:36 /usr/lib/jvm/java-11-amazon-corretto.x86_64/bin/java -Djava.util.logging.config.file=/usr/local/tomcat/conf/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /proc/3629/environ</span></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binHOSTNAME=27c44e8a5c7cJAVA_HOME=/usr/lib/jvm/java-11-amazon-corretto.x86_64HOME=/usr/local/tomcat</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">xargs -0 -L1 -a /proc/3629/environ</span></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">HOSTNAME=27c44e8a5c7c</span><br><span class="line">JAVA_HOME=/usr/lib/jvm/java-11-amazon-corretto.x86_64</span><br><span class="line">HOME=/usr/local/tomcat</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;When try to get the content of any &amp;#x2F;proc&amp;#x2F;&lt;em&gt;PID&lt;/em&gt;&amp;#x2F;environ file in more readable format, you can:&lt;/p&gt;
&lt;figure class=&quot;hi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>AWS KMS decrypt for base64 encoded input</title>
    <link href="https://terrencemiao.github.io/blog/2021/04/30/AWS-KMS-decrypt-for-base64-encoded-input/"/>
    <id>https://terrencemiao.github.io/blog/2021/04/30/AWS-KMS-decrypt-for-base64-encoded-input/</id>
    <published>2021-04-30T09:22:55.000Z</published>
    <updated>2023-07-28T16:18:19.372Z</updated>
    
    <content type="html"><![CDATA[<p>With AWS CLI version 2:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">𝜆 aws --version</span><br><span class="line">aws-cli/2.1.17 Python/3.7.4 Darwin/20.3.0 exe/x86_64 prompt/off</span><br></pre></td></tr></table></figure><p>Encrypt with AWS KMS key:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">𝜆 aws kms encrypt --profile personal \</span><br><span class="line">  --key-id e2695b79-cbe0-4c16-aa5e-b7dbf52df1f9 \</span><br><span class="line">  --plaintext &quot;string-to-encrypt&quot; \</span><br><span class="line">  --output text \</span><br><span class="line">  --query CiphertextBlob \</span><br><span class="line">  --cli-binary-format raw-in-base64-out</span><br><span class="line">AQICAHjbJrIPgME ... lILuBSUdA==</span><br></pre></td></tr></table></figure><p>Decrypt with AWS KMS key:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">𝜆 echo &quot;AQICAHjbJrIPgME ... lILuBSUdA==&quot; | base64 -D | \</span><br><span class="line">  aws kms decrypt --profile personal \</span><br><span class="line">  --ciphertext-blob fileb:///dev/stdin \</span><br><span class="line">  --output text \</span><br><span class="line">  --query Plaintext | base64 -D</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li>cli_binary_format, <em><a href="https://docs.aws.amazon.com/credref/latest/refdocs/setting-global-cli_binary_format.html">https://docs.aws.amazon.com/credref/latest/refdocs/setting-global-cli_binary_format.html</a></em></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;With AWS CLI version 2:&lt;/p&gt;
&lt;figure class=&quot;highlight console&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>A Modern Architecture Application</title>
    <link href="https://terrencemiao.github.io/blog/2021/03/02/A-Modern-Architecture-Application/"/>
    <id>https://terrencemiao.github.io/blog/2021/03/02/A-Modern-Architecture-Application/</id>
    <published>2021-03-02T05:55:13.000Z</published>
    <updated>2023-07-28T16:18:19.350Z</updated>
    
    <content type="html"><![CDATA[<p>RAD (Rapid Application Development) of a Serverless application “Notification Service” on modern technologies, e.g. <code>AWS CDK</code> &amp; <code>SAM</code>, <code>AWS Step Functions</code>, <code>TypeScript</code>, <code>VS Code</code>, Open API Top Down Design and Test Driven Development, in order to rapidly build a prototype, or a POC, verify and test some technologies and approaches.</p><p>Request Handler &#x3D;&gt; Step Functions (orchestration for Lambda functions, represents a single centralized executable business process, outsources low level operations like <strong>retry</strong> &#x2F; <strong>exception catch and handle</strong>. Another choice is SNS) &#x3D;&gt; Service Providers</p><p>Have experienced of <code>Terraform</code>, <code>Serverless</code>, <code>AWS SAM</code> … now this time based on code over configuration principle, what you get is flexibility, predictability and more control. You focus on code you tell the tools what steps it has to complete directly. At the end of day, it is a simple matter of separation of concerns and single responsibility principle.</p><p>• <code>VS Code</code> for API Spec editing</p><p>• <code>Postman</code> API, Environment and Mock server, for QA team, then switch to real service in DEV&#x2F;TEST environment</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 npm run openapi</span><br></pre></td></tr></table></figure><p>• <code>openapi-generator</code> generates model classes; <code>typescript-json-validator</code> generates JSON Schema and validator</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">𝜆 openapi-generator generate -g typescript-node -i Notification\ API\ openapi.json -o Notification\ API\ generated</span><br><span class="line">𝜆 npx typescript-json-validator notificationRequest.ts NotificationRequest</span><br></pre></td></tr></table></figure><p>• Onboard on Kong &#x2F; API Manager, <em><a href="https://konghq.com/kong/">https://konghq.com/kong/</a></em></p><p>• <code>CDK</code>, is based on CloudFormation but abstract layer on the top of it. It can generates CloudFormation template file <code>template.yaml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 cdk synth --no-staging &gt; template.yaml</span><br></pre></td></tr></table></figure><p>• Demo of local run and debug lambda, with background TSC watch process</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">𝜆 npm run watch</span><br><span class="line"></span><br><span class="line">𝜆 sam local invoke RequestNotification9F9F3C31 -e samples/api-gateway-notification-event.json</span><br><span class="line">𝜆 sam local invoke RequestNotification9F9F3C31 -e samples/api-gateway-notification-event.json -d 5858</span><br></pre></td></tr></table></figure><p>Data validation to make data integrity unbreachable will take a lot time.</p><p><code>ajv</code> framework and performance benchmark, <em><a href="https://github.com/ebdrup/json-schema-benchmark">https://github.com/ebdrup/json-schema-benchmark</a></em></p><p>• Code lint with <code>eslint</code> and <code>prettier</code> and automatically correction</p><p>• Code commit rule enforcement</p><p>• Change code and deploy AWS stack by <code>CDK</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 cdk deploy --require-approval never --profile dev-cicd</span><br></pre></td></tr></table></figure><p>• Behavior Driven Test Framework Jest, <em><a href="https://github.com/facebook/jest">https://github.com/facebook/jest</a></em>, 2x &#x2F; 3x faster than Karma, with code coverage, easy mocking</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 npm t</span><br></pre></td></tr></table></figure><p>• Automatically generate application changelog and release notes</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 npm run release:minor</span><br></pre></td></tr></table></figure><p>• Automatically generate application document</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 npm run docs</span><br></pre></td></tr></table></figure><p>• AWS resources created by <code>CDK</code></p><p>• Not Mono Repo app, which multiple projects all under one giant Repo</p><p>• ONE <code>AWS Layers</code> put all dependent NPM libs and shared code into; size of Lambda functions, readability</p><p>• <code>AWS EventBridge</code> tro trigger and send event to Request Handler, for scheduling task</p><p>• Health Check, with Service Monitoring Dashboard, verify dependencies at the endpoints, keep Lambda warming up</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 curl https://c81234xdae8w1a9.execute-api.ap-southeast-2.amazonaws.com/health</span><br></pre></td></tr></table></figure><p>Cloud computing and Serverless architecture let developers in fast lane for Application Development. Right now, there are so many low hanging fruit to pick up.</p><p>As developers, we should not always think about our comfort zone, we need to think about people who take over your work, think about BAU team to support the application. The codebase is not about you, but about the value that your code brings to others, and the organization that you work for.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;RAD (Rapid Application Development) of a Serverless application “Notification Service” on modern technologies, e.g. &lt;code&gt;AWS CDK&lt;/code&gt; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Why Repairable Is Important</title>
    <link href="https://terrencemiao.github.io/blog/2020/11/30/Why-Repairable-Is-Important/"/>
    <id>https://terrencemiao.github.io/blog/2020/11/30/Why-Repairable-Is-Important/</id>
    <published>2020-11-30T00:38:56.000Z</published>
    <updated>2023-07-28T16:18:19.294Z</updated>
    
    <content type="html"><![CDATA[<p>Fix our destructive and throwaway economy, save our planet by making products both repairable, durable, environmentally friendly, and by defending our Right to Repair.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/qSmFI6J7eRo" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>This is my second video created and composed by Apple Final Cut Pro X - Why Repairable Is Important <a href="https://www.youtube.com/watch?v=qSmFI6J7eRo">https://www.youtube.com/watch?v=qSmFI6J7eRo</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Fix our destructive and throwaway economy, save our planet by making products both repairable, durable, environmentally friendly, and by </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Bring back MagSafe</title>
    <link href="https://terrencemiao.github.io/blog/2020/11/25/Bring-back-MagSafe/"/>
    <id>https://terrencemiao.github.io/blog/2020/11/25/Bring-back-MagSafe/</id>
    <published>2020-11-25T00:08:16.000Z</published>
    <updated>2023-07-28T16:18:19.378Z</updated>
    
    <content type="html"><![CDATA[<p>My first published video, created by Apple Final Cut Pro, on YouTube for official channel title <strong>Bring back MagSafe</strong> regard to solution that bring one of the most innovative design from Apple, back to MacBook Pro, iPad … and Android phones <a href="https://www.youtube.com/watch?v=yvkJR4Y0FK0">https://www.youtube.com/watch?v=yvkJR4Y0FK0</a></p><iframe width="560" height="315" src="https://www.youtube.com/embed/yvkJR4Y0FK0" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><ul><li><p>WSKEN SHARK X4 TYPE-C TO TYPE-C PD 100W QUICK CHARGE MAGNETIC CABLE: <a href="http://wsken.my/WSKEN-Shark-X4-Type-C-To-Type-C-PD-100W-Quick-Charge-Magnetic-Cable">http://wsken.my/WSKEN-Shark-X4-Type-C-To-Type-C-PD-100W-Quick-Charge-Magnetic-Cable</a></p></li><li><p>WSKEN SHARK X5 TYPE-C 5A QUICK CHARGE MAGNETIC CABLE: <a href="http://wsken.my/WSKEN-Shark-X5-Type-C-5A-Quick-Charge-Magnetic-Cable">http://wsken.my/WSKEN-Shark-X5-Type-C-5A-Quick-Charge-Magnetic-Cable</a></p></li><li><p>WSKEN Official Store on AliExpress: <a href="https://www.aliexpress.com/store/3018058">https://www.aliexpress.com/store/3018058</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;My first published video, created by Apple Final Cut Pro, on YouTube for official channel title &lt;strong&gt;Bring back MagSafe&lt;/strong&gt; regar</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Risk Management for CI/CD processes</title>
    <link href="https://terrencemiao.github.io/blog/2020/10/26/Risk-Management-for-CI-CD-processes/"/>
    <id>https://terrencemiao.github.io/blog/2020/10/26/Risk-Management-for-CI-CD-processes/</id>
    <published>2020-10-26T05:55:13.000Z</published>
    <updated>2023-07-28T16:18:19.351Z</updated>
    
    <content type="html"><![CDATA[<p>Consider a full development and deployment cycle, and the potential risks involved during the different stages in CDP (CI &#x2F; Continuous Integration, CD &#x2F; Continuous Delivery, CDP &#x2F; Continuous Deployment):</p><ul><li>Code</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>Individual Developer</td></tr><tr><td></td><td>Pair Programming Mentor</td></tr><tr><td></td><td>DBA</td></tr><tr><td></td><td>Security Team</td></tr><tr><td>Failure Points</td><td>Logic flaws</td></tr><tr><td></td><td>Security flaws</td></tr><tr><td></td><td>Code standards issues</td></tr><tr><td>Safeguards</td><td>Test Driven Development</td></tr><tr><td></td><td>Red&#x2F;Green&#x2F;Refactor</td></tr><tr><td></td><td>Linting tools</td></tr><tr><td></td><td>Testing Docker containers</td></tr><tr><td></td><td>Pair programming</td></tr><tr><td></td><td>Query analysis</td></tr><tr><td></td><td>Static code analysis</td></tr></tbody></table><ul><li>Commit</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>Security Team Member for sign-off</td></tr><tr><td></td><td>Engineering Team Lead for sign-off</td></tr><tr><td>Failure Points</td><td>Force pushes</td></tr><tr><td></td><td>Merge conflicts</td></tr><tr><td>Safeguards</td><td>Master branch protections</td></tr><tr><td></td><td>3 member sign-off before master merge</td></tr><tr><td></td><td>Commit hooks</td></tr></tbody></table><ul><li>Test</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>Individual Developer</td></tr><tr><td></td><td>QA Team</td></tr><tr><td>Failure Points</td><td>Broken tests</td></tr><tr><td></td><td>Stale tests</td></tr><tr><td></td><td>False positive tests</td></tr><tr><td>Safeguards</td><td>Weekly failure testing triage meeting to catch broken tests</td></tr><tr><td></td><td>Daily cron runs of test suite against mock prod environment</td></tr></tbody></table><ul><li>Deployment</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>SysOps Team</td></tr><tr><td></td><td>Individual Developers</td></tr><tr><td></td><td>Support Team</td></tr><tr><td></td><td>Customers</td></tr><tr><td>Failure Points</td><td>Broken deployments</td></tr><tr><td></td><td>Dropped customer traffic</td></tr><tr><td>Safeguards</td><td>Blue&#x2F;Green deployment</td></tr><tr><td></td><td>Traffic re-routing</td></tr><tr><td></td><td>Pre deployment spare instance warmup</td></tr><tr><td></td><td>Communicate out to support in order to verify proper staffing levels</td></tr></tbody></table><ul><li>Runtime</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>Security Team</td></tr><tr><td></td><td>SysOps Team</td></tr><tr><td></td><td>Engineering Teams</td></tr><tr><td></td><td>Support Team</td></tr><tr><td></td><td>Customers</td></tr><tr><td>Failure Points</td><td>High resource usage</td></tr><tr><td></td><td>Slow queries</td></tr><tr><td></td><td>Malicious actors</td></tr><tr><td></td><td>MProvider downtime</td></tr><tr><td>Safeguards</td><td>Communicate out to support for new feature awareness and appropriate categories for issues regarding the component</td></tr><tr><td></td><td>System resource alarms for various metrics and slow DB log alerts</td></tr><tr><td></td><td>Instant maintenance page switchover capabilities</td></tr><tr><td></td><td>Status page on redundant providers</td></tr><tr><td></td><td>Application firewalls</td></tr><tr><td></td><td>Database replicas</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Consider a full development and deployment cycle, and the potential risks involved during the different stages in CDP (CI &amp;#x2F; Continuo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>AWS CloudWatch Metrics Example</title>
    <link href="https://terrencemiao.github.io/blog/2020/10/13/AWS-CloudWatch-Metrics-example/"/>
    <id>https://terrencemiao.github.io/blog/2020/10/13/AWS-CloudWatch-Metrics-example/</id>
    <published>2020-10-13T12:29:39.000Z</published>
    <updated>2023-07-28T16:18:19.392Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AWS-CloudWatch-Metrics"><a href="#AWS-CloudWatch-Metrics" class="headerlink" title="AWS CloudWatch Metrics"></a>AWS CloudWatch Metrics</h2><p>The interface of Metrics in AWS CloudWatch console:</p><p><img src="/blog/img/AWS%20CloudWatch%20-%20Metrics.png" alt="AWS CloudWatch - Metrics" title="AWS CloudWatch - Metrics"></p><p>The URL:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://ap-southeast-2.console.aws.amazon.com/cloudwatch/home?region=ap-southeast-2#metricsV2:graph=~(metrics~(~(~&#x27;AWS*2fRoute53Resolver~&#x27;InboundQueryVolume)~(~&#x27;.~&#x27;OutboundQueryVolume))~view~&#x27;timeSeries~stacked~false~region~&#x27;ap-southeast-2~stat~&#x27;Sum~period~86400~start~&#x27;-P28D~end~&#x27;P0D);query=~&#x27;*7bAWS*2fRoute53Resolver*7d</span><br></pre></td></tr></table></figure><p>Metrics source:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;metrics&quot;: [</span><br><span class="line">        [ &quot;AWS/Route53Resolver&quot;, &quot;InboundQueryVolume&quot; ],</span><br><span class="line">        [ &quot;.&quot;, &quot;OutboundQueryVolume&quot; ]</span><br><span class="line">    ],</span><br><span class="line">    &quot;view&quot;: &quot;timeSeries&quot;,</span><br><span class="line">    &quot;stacked&quot;: false,</span><br><span class="line">    &quot;region&quot;: &quot;ap-southeast-2&quot;,</span><br><span class="line">    &quot;stat&quot;: &quot;Sum&quot;,</span><br><span class="line">    &quot;period&quot;: 86400,</span><br><span class="line">    &quot;title&quot;: &quot;Test&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AWS-CloudWatch-Metrics&quot;&gt;&lt;a href=&quot;#AWS-CloudWatch-Metrics&quot; class=&quot;headerlink&quot; title=&quot;AWS CloudWatch Metrics&quot;&gt;&lt;/a&gt;AWS CloudWatch Metri</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Creating AWS Lambda with AWS SAM</title>
    <link href="https://terrencemiao.github.io/blog/2020/02/14/Creating-AWS-Lambda-with-AWS-SAM/"/>
    <id>https://terrencemiao.github.io/blog/2020/02/14/Creating-AWS-Lambda-with-AWS-SAM/</id>
    <published>2020-02-14T01:12:06.000Z</published>
    <updated>2023-07-28T16:18:19.308Z</updated>
    
    <content type="html"><![CDATA[<p>This is a simple Lambda with REST API and SNS enabled. Firstly, have a look the Nodejs script:</p><script src="https://gist.github.com/TerrenceMiao/7d60e5c79f9b93c362bb9a5ff40f67c3.js"></script><p>AWS SAM template yaml file:</p><script src="https://gist.github.com/TerrenceMiao/3512439f22c427e70db8cadc5cc83846.js"></script><p>Generate AWS CloudFormation yaml file and package &#x2F; zip &#x2F; create an artefact (need to create AWS S3 bucket <code>hello-world-tub</code> in advance):</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">𝜆 sam package --profile personal --template-file template.yml --output-template-file cloudFormation.yml --s3-bucket hello-sam-tub</span><br><span class="line">Uploading to 7431f83ac979bfccc26980049807e595  1461 / 1461.0  (100.00%)</span><br><span class="line"></span><br><span class="line">Successfully packaged artifacts and wrote output template to file cloudFormation.yml.</span><br><span class="line">Execute the following command to deploy the packaged template</span><br><span class="line">sam deploy --template-file /Users/terrence/Projects/hello-sam/cloudFormation.yml --stack-name &lt;YOUR STACK NAME&gt;</span><br></pre></td></tr></table></figure><p>Can also create artefact file with <code>zip</code> command, and upload zip file into AWS S3 bucket:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝜆 zip hello-sam.zip README.md index.js template.yml</span><br></pre></td></tr></table></figure><p>What AWS CloudFormation yaml file looks like:</p><script src="https://gist.github.com/TerrenceMiao/a0ffabc5e118b78dfb21b5cee814e44c.js"></script><p>Deploy application’s AWS CloudFormation stack with AWS SAM command:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">𝜆 sam deploy --profile personal --template-file cloudFormation.yml --stack-name hello-sam --capabilities CAPABILITY_IAM</span><br><span class="line"></span><br><span class="line">Deploying with following values</span><br><span class="line">===============================</span><br><span class="line">Stack name                 : hello-sam</span><br><span class="line">Region                     : None</span><br><span class="line">Confirm changeset          : False</span><br><span class="line">Deployment s3 bucket       : None</span><br><span class="line">Capabilities               : [&quot;CAPABILITY_IAM&quot;]</span><br><span class="line">Parameter overrides        : &#123;&#125;</span><br><span class="line"></span><br><span class="line">Initiating deployment</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">Waiting for changeset to be created..</span><br><span class="line"></span><br><span class="line">CloudFormation stack changeset</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Operation                                                                                     LogicalResourceId                                                                             ResourceType</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">+ Add                                                                                         HelloWorldFunctionHelloWorldApiPermissionProd                                                 AWS::Lambda::Permission</span><br><span class="line">+ Add                                                                                         HelloWorldFunctionRole                                                                        AWS::IAM::Role</span><br><span class="line">+ Add                                                                                         HelloWorldFunction                                                                            AWS::Lambda::Function</span><br><span class="line">+ Add                                                                                         HelloWorldTopic                                                                               AWS::SNS::Topic</span><br><span class="line">+ Add                                                                                         ServerlessRestApiDeployment79454cea13                                                         AWS::ApiGateway::Deployment</span><br><span class="line">+ Add                                                                                         ServerlessRestApiProdStage                                                                    AWS::ApiGateway::Stage</span><br><span class="line">+ Add                                                                                         ServerlessRestApi                                                                             AWS::ApiGateway::RestApi</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Changeset created successfully. arn:aws:cloudformation:ap-southeast-2:123456789012:changeSet/samcli-deploy1581737165/48e53ff2-1b50-45d8-bbfd-97652f20d967</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2020-02-15 14:26:10 - Waiting for stack create/update to complete</span><br><span class="line"></span><br><span class="line">CloudFormation events from changeset</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">ResourceStatus                                                        ResourceType                                                          LogicalResourceId                                                     ResourceStatusReason</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::SNS::Topic                                                       HelloWorldTopic                                                       Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::SNS::Topic                                                       HelloWorldTopic                                                       -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::IAM::Role                                                        HelloWorldFunctionRole                                                Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::IAM::Role                                                        HelloWorldFunctionRole                                                -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::Lambda::Function                                                 HelloWorldFunction                                                    Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::Lambda::Function                                                 HelloWorldFunction                                                    -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::ApiGateway::RestApi                                              ServerlessRestApi                                                     Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::ApiGateway::RestApi                                              ServerlessRestApi                                                     -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::Lambda::Permission                                               HelloWorldFunctionHelloWorldApiPermissionProd                         Resource creation Initiated</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::ApiGateway::Deployment                                           ServerlessRestApiDeployment79454cea13                                 Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::ApiGateway::Deployment                                           ServerlessRestApiDeployment79454cea13                                 -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::ApiGateway::Stage                                                ServerlessRestApiProdStage                                            Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::ApiGateway::Stage                                                ServerlessRestApiProdStage                                            -</span><br><span class="line">CREATE_COMPLETE                                                       AWS::Lambda::Permission                                               HelloWorldFunctionHelloWorldApiPermissionProd                         -</span><br><span class="line">CREATE_COMPLETE                                                       AWS::CloudFormation::Stack                                            hello-sam                                                             -</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Successfully created/updated stack - hello-sam in None</span><br></pre></td></tr></table></figure><p>NOTE: The <code>--capabilities CAPABILITY_IAM</code> option is necessary to authorise your stack to create IAM roles, which SAM applications do by default.</p><p>After application deployed, user subscribes notification will receive email titled - <strong>AWS Notification - Subscription Confirmation</strong> After confirmation, user will receive an email every time API is invoked.</p><p>Now log on AWS Console, have a look the resources this Lambda application used in CloudFormation, S3 Bucket, Lambda, IAM, SNS, CloudWatch, API Gateway.</p><p>After this Lambda application successfully deployed into AWS, you will receive an email asking whether you want to subscribe the SNS topic. You can also unsubscribe the SNS topic. You can manually test Lambda function in AWS Console.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li>Creating AWS Lambda Applications With SAM by <strong>Daniel Weibel</strong>, <em><a href="https://itnext.io/creating-aws-lambda-applications-with-sam-dd13258c16dd">https://itnext.io/creating-aws-lambda-applications-with-sam-dd13258c16dd</a></em></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This is a simple Lambda with REST API and SNS enabled. Firstly, have a look the Nodejs script:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/T</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2019: Year in Review</title>
    <link href="https://terrencemiao.github.io/blog/2019/12/29/2019-Year-in-Review/"/>
    <id>https://terrencemiao.github.io/blog/2019/12/29/2019-Year-in-Review/</id>
    <published>2019-12-29T04:24:05.000Z</published>
    <updated>2023-07-28T16:18:19.366Z</updated>
    
    <content type="html"><![CDATA[<p>2019 年是过去十年中最差的一年，但或许会是未来十年中最好的一年。</p><p><img src="/blog/img/Year%202019%20-%2001.jpg" alt="Year 2019 - 01" title="Year 2019 - 01"></p><p>图 1：这不是传说，这是 reality.</p><p>1 月 24 日，有自媒体发出证监会人事变动的“虚假”消息，引起关注。中国证监会有关人士指出，自媒体不是法外之地，对于不负责任的虚假信息传播，应当依法依规处理。</p><p>1 月 26 日，中国官方宣布负责股市监管的中国证监会主席换人。三年前在中国股市遭遇“灾难性重创”的背景下接班的刘士余结束任期，其职务由中国另一国有银行工商银行董事长易会满接任。</p><p> “谣言”就是“<strong>遥遥领先的预言</strong>”。</p><p>老刘的这张配图，是在 salute 中国证监会，还是中国股民？</p><p>“问君能有几多愁，恰似满仓中石油。如若当初没割肉，而今想来愁更愁。” 这是 8 月 26 日新闻头条。中石油股价收于 6.02 元，刷新历史新低。中石油股价最高时 48 元，上市 12 年，蒸发了 7 万亿，从市值一哥到“套牢第一股”。7 万亿相当于跌掉 1 个苹果，或 2 个俄罗斯股市的总市值。</p><p>“我有无数次骑上大牛，结果半路被吓跑了。 然后看着人家一飞冲天，想大哭都没有眼泪。 我真想把自己的贱手给砍掉。”</p><p>“我有无数次踩上大屎，结果硬挺在那几年。 然后等着分红一毛无有，想上访都没有胆子。 我真想把自己的脚也给砍掉。”</p><p>让中国股民怀念的牛市，都像是怀念的初恋一样，那消散已久的牛味仿佛做了一场春梦般的美妙。</p><p><img src="/blog/img/Year%202019%20-%2002.jpg" alt="Year 2019 - 02" title="Year 2019 - 02"></p><p>图 2：Hayne’s Report.</p><p>2 月 The Royal Commission into Misconduct in the Banking, Superannuation and Financial Services Industry Final Report, lead by Keith Hayne published. 导致土澳经济支柱产业四大银行中三个的 CEO 先后在今年中被迫辞职。</p><p><img src="/blog/img/Year%202019%20-%2003.jpg" alt="Year 2019 - 03" title="Year 2019 - 03"></p><p>图 3：超乎想像的宇宙。</p><p>4 月，人类有史以来获得的首张黑洞照片。位于处女座中的 M87 的超大质量黑洞距离我们大约 5500 万光年。其质量之大约合 66 亿个太阳。</p><p><img src="/blog/img/Year%202019%20-%2004.jpg" alt="Year 2019 - 04" title="Year 2019 - 04"></p><p>图 4：I believe in miracles.</p><p>大选前一个月，各项民意调查都 tip Labor win the election. Sportsbets back Labor win at odds of $1.16, Coalition $5.80. Labor 竞选团队在全国各地拉票讲演时也是踌躇满志，势在必赢。星期六竞选日早上，“主流” TV &amp; newspapers 还预测 Labor’s landslide win。但选举最终在 Coalition 戏剧性的大逆转中结束。</p><p>民意调查机构不得不承认自己吹嘘的 Machine Learning &#x2F; AI 只是骗人的小把戏。Sportsbet 赔了 $5.2m on its costly error。“主流”媒体也不得不扇自己的脸，radical political idiosyncrasy and elitism bias 根本做不了三个代表。</p><p>Monash University professor Andrew Markus said Australians usually nominated <strong>jobs</strong>, the <strong>economy</strong> and <strong>financial security</strong> as their top concerns and may have recoiled from Labor’s sweeping plans for tax revenue increases.</p><p>“If there’s a danger that your agenda challenges those economic factors, you’re on pretty rocky ground.”</p><p>Now quiet Australians are heard loud and clear.</p><p>The swing to the Liberals suggested voters were sceptical of policies to raise $56 billion from changes to dividend rules, $32 billion from negative gearing and $30 billion over a decade from superannuation.</p><p>“What one person receives without working for, another person must work for without receiving.” Here is the wisdom from Adrian Rogers.</p><p>Wasn’t it Labor shadow treasurer Mr. Chris Bowen who said “if you do t like us taking away your franking credits then don’t vote for Labor” before the election?</p><p>Well, Mr. Bowen, thank you for your invitation!</p><p><img src="/blog/img/Year%202019%20-%2005.jpg" alt="Year 2019 - 05" title="Year 2019 - 05"></p><p>图 5：Eluid Kipchoge.</p><p>10 月 12 日，34 岁的肯尼亚人，马拉松世界纪录保持者 Eluid Kipchoge，在“世界音乐之都”奥地利首都维也纳，向全程马拉松 Breaking 2 “破二”的宏伟目标发起个人职业生涯的第二度冲击。这是人类跨越马拉松新里程碑的历史性一刻。马拉松突破人类 2 小时大关。</p><p><strong>1 小时 59 分 40 秒</strong> In perspective, 想象一下，Eluid Kipchoge just runs every 100 meters in 17s, for two hours. 17 frigging seconds!</p><p><img src="/blog/img/Year%202019%20-%2006.jpg" alt="Year 2019 - 06" title="Year 2019 - 06"></p><p>图 6：Reserve Bank Australia cuts interest rates to historic low.</p><p>Central bank is literally behind the curve. More ominously, it’s an indication that asset bubbles are poised to burst, just like the Fed’s first interest rate cut warned directly ahead of both the tech bust and GFC.</p><p>现在的一个经济幽灵就是”债务”。下一个经济危机很有可能就是债务危机。</p><p>政府债，企业债，个人债，大量的负债，超过了借款者自身偿还能力而引发的债务危机，金融海啸。先财务困境，再经济由不稳定转至崩溃，中产变成破产，从而造成社会的大动荡。</p><p><img src="/blog/img/Year%202019%20-%2007.jpg" alt="Year 2019 - 07" title="Year 2019 - 07"></p><p>图 7：Dow 28000.</p><p>In November, another historical moment, Dow closes above 28,000. From 27,000 to 28,000, get there just in 90 trading days.</p><p>全球的股市可以说气势如虹。美国股市的市值和 GDP 比值已经超过了 150%，超越了 2000 年互联网泡沫和 2007 年房地产泡沫顶峰时期的估值。</p><p>房地产市场同样是高歌猛进。美国的房地已经超过了 2007 年顶峰 20% 的水平了。不管从什么指标衡量，一批指标都显示当前资本市场的估值都已经超过了 2007 年，这是个巨大的泡沫。</p><p>有人预测明年 2020 年将是次贷危机以来最难的一年。但因为似乎好像每经过一年都是过去 10 年中最难的一年，全球经济再也没有回到过快速增长的快车道上，所以明年才是刚开始，未来十年才是最艰难的。</p><p>目前债务杠杆超过了 250%。全球各国央行以零利率和负利率维持。在这种情形下，必然导致股市和房地产市场泡沫。</p><p>一旦这两个泡沫破灭，实体经济也必然会受到影响。从 400 多年的经济史中可以得出的结论就是市场规律可以推迟，但从未缺席。</p><p><img src="https://lh3.googleusercontent.com/pKuf-FR-xupJa_XNu82ZZ2CrJ0f686G9e9c-AfS4Y6iXFFVGn8FoFGF0vPojRNRvw6bjveJWzvYsyNUVLDqnwvgrXM9AROTtl-3s1r4IfPG8lrfx59jTGyAbNAAq2yjGLmTjEsccISrpzEIaRNFUJiVDUkqojGPEELUbHPcXB58roLBds3gc89vP-Y2AcbocjZB-btxEIYAUS3SKMcX7G-DLHvumHqM4V8yCNKKM0AT5-lkiU-W7nTwrronm6GkqP2SMiddlHcJQsyc2-vc-jeRl8XYd3shPitAjT4ipzTtq0p4fYA7e9Q6HkEe9pIVbcMGmUt9vxZq0YayACCZW6I7QeqPHYi-wpoznFaWDEq4VnGk56vQnb7n3zsc4k0jSnpYonYz97KEz03j2zJhkvbDnTXks6ZcnnbP7TqmmL0ySkKM3gjWBz9IScNZU-dz2E3GCpeNvuZW1NgxvkF-It4918_Mm8Sl2TIYmdsrFdJ6MO_Rzk2PcLaoiGuJtS6lVxJhSb_h5yRNbBk8ev_mmypoangxgHdZKbHC3ytduJbkExXNwW4T6vsWFqdNLNNiDfsVBraOlYPXT0rwCeky-_PlcITAKyPA_jxchRY9cxrwg2dSGERJNYRkWlhgXHD5kzU2q9IkQ4p68u-Y5Opo35ttlrc0F_7C-O87yXv-RLsgRz4fDHOoW1pE=w1440-h2151-no" alt="Year 2019 - Home grown farm" title="Year 2019 - Home grown farm"></p><p>图 8：Home grown farm.</p><p><strong>以农补工</strong>。经济不景气，投资回报低，肉类，生蔬和水果价格居高临下的环境中依靠 home grown，家中盆栽的杏，苹果和橄榄弥补减少的收入，扶持增大的开销。</p><p><img src="https://lh3.googleusercontent.com/PzzPXr-IUsEiCUhrAY0KcBzmss2d9lpcxL5ozlDY8O_ykzKUWnSnKYjXmKpdA1bF-VrT_S7Rdy3H136jzlu93vofXPrqVW0oqifSe0yylPV-qc9xRqtFUl_NW6ptvRAcVxZzWH5f0wYsgK4rnM5SnHGL-6O1y6j1ANAYtKc7yP_fATCiPrn5tuNFeMtInzU1pv80vJtA0xph6sQKp1TG9M0wNuAYgzsJ8l2lw5_8mbXPt8lwrxZWSnZyXDMddXTQyMy3917AHQQafuMUOne6kPreIVU2GuWWE1wsnadFDEyscehlGSUMhrSv1IqknOEk73yHxV6R2QwvEHCnPF-LDI9Pdw3loDUd5QFCgFCEnVLJgEMCIffYK8fq-ZJM6Unl3zIg9I0PI5vGQaWiirgmIz5susnZzjWNkBvrpyVfdolSkU-rhavrxeKYNWUCYISZcXHP6Ibbk4hpQnIcQpZzPGKeXA6lOiM0hKyP1qXGY69mkIdsh70KawopdiW6K5iLMJHNK0QJZ9TjC41aYsnGRGJ7pTTcm4WKpEGM-hZt9lGt9mqV1K8TilqeEm_HV2lnY3jsHcUUHqjcuW1kLui7VZ8nTYI59HAExZZ8myZpwhJRvVSXaaC4KHf2TlYooZoaOamEIV7lc21tvt2qXaY7g4sOQdC068q6ssgx8HdondROyjvEq4fs-AY=w1283-h1400-no" alt="Year 2019 - Year in sports" title="Year 2019 - Year in sports"></p><p>图 9：Year in sports - Personal Best.</p><p>创记录的一年。跑动距离（包括跑步和网球）达到 1300+ 公里，相当于从北京跑到上海。Climbing 14,652m，相当于攀登了 1.7 个珠穆朗玛峰的高度。</p><p>不因岁月裹步不前，不因磨难放弃梦想，不因极限停止前进。A journey of a thousand miles begins with a single step. Keep running!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2019 年是过去十年中最差的一年，但或许会是未来十年中最好的一年。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/img/Year%202019%20-%2001.jpg&quot; alt=&quot;Year 2019 - 01&quot; title=&quot;Year 2019 - 01&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
