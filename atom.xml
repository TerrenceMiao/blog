<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Terrence Miao&#39;s Adventures</title>
  <subtitle>A journey of a thousand miles begins with a single step</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://terrencemiao.github.io/blog/"/>
  <updated>2017-03-12T11:42:40.000Z</updated>
  <id>https://terrencemiao.github.io/blog/</id>
  
  <author>
    <name>Terrence Miao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Influence Without Authority</title>
    <link href="https://terrencemiao.github.io/blog/2017/03/12/Influence-Without-Authority/"/>
    <id>https://terrencemiao.github.io/blog/2017/03/12/Influence-Without-Authority/</id>
    <published>2017-03-12T11:31:23.000Z</published>
    <updated>2017-03-12T11:42:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>The Psychology of Persuasion.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The Psychology of Persuasion.&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Spring Data - powerful and succinct abstraction</title>
    <link href="https://terrencemiao.github.io/blog/2017/03/04/Spring-Data-powerful-and-succinct-abstraction/"/>
    <id>https://terrencemiao.github.io/blog/2017/03/04/Spring-Data-powerful-and-succinct-abstraction/</id>
    <published>2017-03-03T23:05:30.000Z</published>
    <updated>2017-03-08T11:55:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Database-tier-definition"><a href="#Database-tier-definition" class="headerlink" title="Database tier definition "></a>Database tier definition </h2><p>Database tables, indexes and foreign keys defined in Liquibase configuration:</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line"><span class="attr">databaseChangeLog:</span></div><div class="line"><span class="attr">  - changeSet:</span></div><div class="line"><span class="attr">      id:</span> <span class="number">1</span></div><div class="line"><span class="attr">      author:</span> Terrence Miao</div><div class="line"><span class="attr">      changes:</span></div><div class="line"><span class="attr">        - createTable:</span></div><div class="line"><span class="attr">            tableName:</span> draft_order</div><div class="line"><span class="attr">            columns:</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> id</div><div class="line"><span class="attr">                  type:</span> int</div><div class="line"><span class="attr">                  autoIncrement:</span> <span class="literal">true</span></div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    primaryKey:</span> <span class="literal">true</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> c_number</div><div class="line"><span class="attr">                  type:</span> varchar(<span class="number">32</span>)</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> source_time_in_ms</div><div class="line"><span class="attr">                  type:</span> bigint</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> source_item_id</div><div class="line"><span class="attr">                  type:</span> varchar(<span class="number">255</span>)</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> shipment</div><div class="line"><span class="attr">                  type:</span> json</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> shipment_id</div><div class="line"><span class="attr">                  type:</span> varchar(<span class="number">255</span>)</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> quantity</div><div class="line"><span class="attr">                  type:</span> int</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> source_system</div><div class="line"><span class="attr">                  type:</span> varchar(<span class="number">255</span>)</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> status</div><div class="line"><span class="attr">                  type:</span> varchar(<span class="number">32</span>)</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">        - createIndex:</span></div><div class="line"><span class="attr">            columns:</span></div><div class="line"><span class="attr">            - column:</span></div><div class="line"><span class="attr">                name:</span> source_item_id</div><div class="line"><span class="attr">            indexName:</span> idx_source_item_id</div><div class="line"><span class="attr">            tableName:</span> draft_order</div><div class="line"><span class="attr">            unique:</span> <span class="literal">false</span></div><div class="line"><span class="attr">        - createIndex:</span></div><div class="line"><span class="attr">            columns:</span></div><div class="line"><span class="attr">            - column:</span></div><div class="line"><span class="attr">                name:</span> c_number</div><div class="line"><span class="attr">            - column:</span></div><div class="line"><span class="attr">                name:</span> source_item_id</div><div class="line"><span class="attr">            indexName:</span> idx_c_number_source_item_id</div><div class="line"><span class="attr">            tableName:</span> draft_order</div><div class="line"><span class="attr">            unique:</span> <span class="literal">true</span></div><div class="line"><span class="attr">        - createTable:</span></div><div class="line"><span class="attr">            tableName:</span> draft_order_combined</div><div class="line"><span class="attr">            columns:</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> id</div><div class="line"><span class="attr">                  type:</span> int</div><div class="line"><span class="attr">                  autoIncrement:</span> <span class="literal">true</span></div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    primaryKey:</span> <span class="literal">true</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> combined_id</div><div class="line"><span class="attr">                  type:</span> varchar(<span class="number">64</span>)</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> draft_order_id</div><div class="line"><span class="attr">                  type:</span> int</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">        - addForeignKeyConstraint:</span></div><div class="line"><span class="attr">            baseColumnNames:</span> draft_order_id</div><div class="line"><span class="attr">            baseTableName:</span> draft_order_combined</div><div class="line"><span class="attr">            constraintName:</span> fk_draft_order_combined_draft_order</div><div class="line"><span class="attr">            onDelete:</span> CASCADE</div><div class="line"><span class="attr">            onUpdate:</span> RESTRICT</div><div class="line"><span class="attr">            referencedColumnNames:</span> id</div><div class="line"><span class="attr">            referencedTableName:</span> draft_order</div><div class="line"><span class="attr">  - changeSet:</span></div><div class="line"><span class="attr">      id:</span> <span class="number">2</span></div><div class="line"><span class="attr">      author:</span> Terrence Miao</div><div class="line"><span class="attr">      changes:</span></div><div class="line"><span class="attr">        - addColumn:</span></div><div class="line"><span class="attr">            columns:</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line">                  <span class="comment"># For MySQL 5.7.x above, the first TIMESTAMP column in the table gets current timestamp as the default value, likely. So </span></div><div class="line">                  <span class="comment"># if an INSERT or UPDATE without supplying a value, the column will get the current timestamp.  Any subsequent TIMESTAMP </span></div><div class="line">                  <span class="comment"># columns should have a default value explicitly defined. If you have two TIMESTAMP columns and if you don't specify a </span></div><div class="line">                  <span class="comment"># default value for the second column, you will get this error while trying to create the table: </span></div><div class="line">                  <span class="comment">#   ERROR 1067 (42000): Invalid default value for 'COLUMN_NAME'</span></div><div class="line"><span class="attr">                  name:</span> date_created</div><div class="line"><span class="attr">                  type:</span> timestamp(<span class="number">3</span>)</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">              - column:</span></div><div class="line"><span class="attr">                  name:</span> date_updated</div><div class="line"><span class="attr">                  type:</span> timestamp(<span class="number">3</span>)</div><div class="line">		  defaultValueComputed: LOCALTIMESTAMP(<span class="number">3</span>)</div><div class="line"><span class="attr">                  constraints:</span></div><div class="line"><span class="attr">                    nullable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">            tableName:</span> draft_order</div></pre></td></tr></table></figure>
<h2 id="DAO-definition"><a href="#DAO-definition" class="headerlink" title="DAO definition"></a>DAO definition</h2><ul>
<li>Draft Order</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Entity</span></div><div class="line"><span class="meta">@Table</span>(name = <span class="string">"draft_order"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DraftOrder</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Id</span></div><div class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.AUTO)</div><div class="line">    <span class="keyword">private</span> Integer id;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"c_number"</span>)</div><div class="line">    <span class="keyword">private</span> String cNumber;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"source_time_in_ms"</span>)</div><div class="line">    <span class="keyword">private</span> Long sourceTimeInMs;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"source_item_id"</span>)</div><div class="line">    <span class="keyword">private</span> String sourceItemId;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"shipment"</span>, columnDefinition = <span class="string">"json"</span>)</div><div class="line">    <span class="keyword">private</span> String shipment;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"shipment_id"</span>)</div><div class="line">    <span class="keyword">private</span> String shipmentId;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"quantity"</span>)</div><div class="line">    <span class="keyword">private</span> Integer quantity;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"source_system"</span>)</div><div class="line">    <span class="keyword">private</span> String sourceSystem;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"status"</span>)</div><div class="line">    <span class="keyword">private</span> String status;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Draft Order Combined </li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Entity</span></div><div class="line"><span class="meta">@Table</span>(name = <span class="string">"draft_order_combined"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DraftOrderCombined</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Id</span></div><div class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.AUTO)</div><div class="line">    <span class="keyword">private</span> Integer id;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"combined_id"</span>)</div><div class="line">    <span class="keyword">private</span> String combinedId;</div><div class="line"></div><div class="line">    <span class="meta">@OneToOne</span>(cascade = CascadeType.ALL)</div><div class="line">    <span class="meta">@JoinColumn</span>(name = <span class="string">"draft_order_id"</span>)</div><div class="line">    <span class="keyword">private</span> DraftOrder draftOrder;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>An middle Aggregation Object</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CombinedIdSourceTimeInMs</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Long counter;</div><div class="line">    <span class="keyword">private</span> String combinedId;</div><div class="line">    <span class="keyword">private</span> Long sourceTimeInMs;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CombinedIdSourceTimeInMs</span><span class="params">(Long counter, String combinedId, Long sourceTimeInMs)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.counter = counter;</div><div class="line">        <span class="keyword">this</span>.combinedId = combinedId;</div><div class="line">        <span class="keyword">this</span>.sourceTimeInMs = sourceTimeInMs;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CRUD-Repository-definition"><a href="#CRUD-Repository-definition" class="headerlink" title="CRUD Repository definition"></a>CRUD Repository definition</h2><ul>
<li>DraftOrderRepository</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DraftOrderRepository</span> <span class="keyword">extends</span> <span class="title">CrudRepository</span>&lt;<span class="title">DraftOrder</span>, <span class="title">Integer</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="function">List&lt;DraftOrder&gt; <span class="title">findByCNumberAndStatusOrderBySourceTimeInMsDesc</span><span class="params">(String cNumber, String status, Pageable pageable)</span></span>;</div><div class="line"></div><div class="line">    <span class="function">List&lt;DraftOrder&gt; <span class="title">findByCNumberAndSourceItemIdIn</span><span class="params">(String cNumber, List&lt;String&gt; sourceItemIds)</span></span>;</div><div class="line"></div><div class="line">    <span class="function">DraftOrder <span class="title">findByCNumberAndSourceItemId</span><span class="params">(String cNumber, String sourceItemId)</span></span>;</div><div class="line">    </div><div class="line">    <span class="function">List&lt;DraftOrder&gt; <span class="title">findByShipmentIdInAndStatusAndSourceSystem</span><span class="params">(List&lt;String&gt; shipmentIds, String status, String sourceSystem)</span></span>;</div><div class="line"></div><div class="line">    <span class="function">List&lt;DraftOrder&gt; <span class="title">findByCNumberAndId</span><span class="params">(String cNumber, Integer id)</span></span>;</div><div class="line"></div><div class="line">    <span class="function">Long <span class="title">countByCNumberAndStatus</span><span class="params">(String cNumber, String status)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>DraftOrderCombinedRepository</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DraftOrderCombinedRepository</span> <span class="keyword">extends</span> <span class="title">CrudRepository</span>&lt;<span class="title">DraftOrderCombined</span>, <span class="title">Integer</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    String FIND_QUERY =</div><div class="line">            <span class="string">"SELECT new org.paradise.data.dao.CombinedIdSourceTimeInMs"</span></div><div class="line">                    + <span class="string">"(count(doc) as counter, doc.combinedId as combinedId, min(doc.draftOrder.sourceTimeInMs) as sourceTimeInMs) "</span></div><div class="line">                    + <span class="string">" FROM DraftOrderCombined doc WHERE doc.draftOrder.cNumber = :cNumber AND doc.draftOrder.status = :status "</span></div><div class="line">                    + <span class="string">" GROUP BY combinedId "</span></div><div class="line">                    + <span class="string">" ORDER BY sourceTimeInMs DESC"</span>;</div><div class="line"></div><div class="line">    String COUNT_QUERY = <span class="string">"SELECT count(1) FROM "</span></div><div class="line">            + <span class="string">"(SELECT count(1) FROM DraftOrderCombined doc WHERE doc.draftOrder.cNumber = :cNumber AND doc.draftOrder.status = :status"</span></div><div class="line">            + <span class="string">"  GROUP BY doc.combinedId)"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Query</span>(value = FIND_QUERY, countQuery = COUNT_QUERY)</div><div class="line">    <span class="function">List&lt;CombinedIdSourceTimeInMs&gt; <span class="title">countPerCombinedIdAndSourceTimeInMs</span><span class="params">(@Param(<span class="string">"cNumber"</span>)</span> String cNumber,</span></div><div class="line">                                                                       @<span class="title">Param</span><span class="params">(<span class="string">"status"</span>)</span> String status, Pageable pageable);</div><div class="line"></div><div class="line">    <span class="function">List&lt;DraftOrderCombined&gt; <span class="title">findByCombinedIdOrderByDraftOrderDaoSourceTimeInMsDesc</span><span class="params">(String combinedId)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul>
<li>Spring Data JPA Reference Documentation, <a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/" target="_blank" rel="external">https://docs.spring.io/spring-data/jpa/docs/current/reference/html/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Database-tier-definition&quot;&gt;&lt;a href=&quot;#Database-tier-definition&quot; class=&quot;headerlink&quot; title=&quot;Database tier definition &quot;&gt;&lt;/a&gt;Database tier
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQL script generates random data and insert into MySQL database</title>
    <link href="https://terrencemiao.github.io/blog/2017/03/03/SQL-script-generates-random-data-and-insert-into-MySQL-database/"/>
    <id>https://terrencemiao.github.io/blog/2017/03/03/SQL-script-generates-random-data-and-insert-into-MySQL-database/</id>
    <published>2017-03-03T12:02:17.000Z</published>
    <updated>2017-03-03T12:04:34.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> InsertRandomRecords;</div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE InsertRandomRecords(IN NumRows INT)</div><div class="line">    BEGIN</div><div class="line">        DECLARE i INT;</div><div class="line">        SET i = 1;</div><div class="line">        START TRANSACTION;</div><div class="line">        WHILE i &lt;= NumRows DO</div><div class="line">            INSERT INTO draftorders.draft_order (c_number, source_time_in_ms, source_item_id, shipment, shipment_id, quantity, source_system, status)</div><div class="line">            VALUES ('C01234567890', RAND()*1000000000, CONCAT('randomSourceRef-', UUID_SHORT()),</div><div class="line">                    '&#123;"to": &#123;"name": "T T", "lines": ["Lvl 100", "123 smith st"], "phone": "0356567567", "state": "VIC", "suburb": "Greensborough", "postcode": "3088", "business_name": "In debt"&#125;, "from": &#123;"name": "Carl Block", "lines": ["1341 Dandenong Road"], "state": "VIC", "suburb": "Geelong", "postcode": "3220"&#125;, "items": [&#123;"width": "10", "height": "10", "length": "10", "weight": "10", "product_id": "3D85", "item_reference": "blocked", "authority_to_leave": true, "allow_partial_delivery": true, "contains_dangerous_goods": true&#125;], "shipment_reference": "My second shipment ref", "customer_reference_1": "cr1234", "customer_reference_2": "cr5678"&#125;',</div><div class="line">                    UUID(), 1, 'EBAY', ELT(1 + FLOOR(RAND()*3), 'DRAFT', 'READY_TO_SHIP', 'SHIPPED'));</div><div class="line">            SET i = i + 1;</div><div class="line">        END WHILE;</div><div class="line">        COMMIT;</div><div class="line">    END$$</div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure>
<p>To generate 1,000,000 draft orders:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CALL</span> InsertRandomRecords(<span class="number">1000000</span>);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Set up and run AWS Lambda &#39;hello&#39; function with serverless</title>
    <link href="https://terrencemiao.github.io/blog/2017/02/26/Set-up-and-run-AWS-Lambda-hello-function-with-serverless/"/>
    <id>https://terrencemiao.github.io/blog/2017/02/26/Set-up-and-run-AWS-Lambda-hello-function-with-serverless/</id>
    <published>2017-02-26T08:00:26.000Z</published>
    <updated>2017-03-03T12:09:28.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="serverless"><a href="#serverless" class="headerlink" title="serverless"></a>serverless</h3><p>With latest Node.js 6.x.x installed, then install serverless globally:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install serverless -g</div></pre></td></tr></table></figure>
<h3 id="AWS-Lambda"><a href="#AWS-Lambda" class="headerlink" title="AWS Lambda"></a>AWS Lambda</h3><p>Create a AWS Lambda skeleton project with serverless:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ mkdir serverless-example &amp;&amp; <span class="built_in">cd</span> <span class="variable">$_</span></div><div class="line"></div><div class="line">$ sls create -t aws-nodejs</div><div class="line">Serverless: Generating boilerplate...</div><div class="line"> _______                             __</div><div class="line">|   _   .-----.----.--.--.-----.----|  .-----.-----.-----.</div><div class="line">|   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|</div><div class="line">|____   |_____|__|  \___/|_____|__| |__|_____|_____|_____|</div><div class="line">|   |   |             The Serverless Application Framework</div><div class="line">|       |                           serverless.com, v1.7.0</div><div class="line"> -------<span class="string">'</span></div><div class="line"></div><div class="line">Serverless: Successfully generated boilerplate for template: "aws-nodejs"</div><div class="line">Serverless: NOTE: Please update the "service" property in serverless.yml with your service name</div></pre></td></tr></table></figure>
<ul>
<li><strong>Policies set up for Lambda function</strong></li>
</ul>
<p>For AWS user “ec2-user”, now need to have some policies with permissions to let “serverless” create role, Lambda function and deployment it …</p>
<p><img src="https://raw.githubusercontent.com/TerrenceMiao/AWS/master/serverless-example/Lambda%20Policies.png" alt="Polices set up for Lambda function"></p>
<ul>
<li><strong>Roles for Lambda function</strong></li>
</ul>
<p>Lambda function role created after Lambda function added and deployed into AWS.</p>
<p><img src="https://raw.githubusercontent.com/TerrenceMiao/AWS/master/serverless-example/Lambda%20Roles.png" alt="Roles for Lambda function"></p>
<h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><p>Make sure AWS environment has been set up, including access key, user, group, policies …</p>
<p>Pack and deploy Lambda example into AWS:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ sls deploy -r ap-southeast-2 <span class="_">-s</span> dev</div><div class="line">Serverless: Packaging service...</div><div class="line">Serverless: Uploading CloudFormation file to S3...</div><div class="line">Serverless: Uploading service .zip file to S3 (583 B)...</div><div class="line">Serverless: Updating Stack...</div><div class="line">Serverless: Checking Stack update progress...</div><div class="line">..................</div><div class="line">Serverless: Stack update finished...</div><div class="line">Service Informations</div><div class="line">service: serverless-example</div><div class="line">stage: dev</div><div class="line">region: ap-southeast-2</div><div class="line">api keys:</div><div class="line">  None</div><div class="line">endpoints:</div><div class="line">  None</div><div class="line"><span class="built_in">functions</span>:</div><div class="line">  serverless-example-dev-hello</div></pre></td></tr></table></figure>
<ul>
<li><strong>Lambda “hello” function</strong></li>
</ul>
<p>A “hello” Lambda function has been created in Lambda after it’s deployed into AWS by “serverless”.</p>
<p><img src="https://raw.githubusercontent.com/TerrenceMiao/AWS/master/serverless-example/Lambda%20Hello%20function.png" alt="Lambda &quot;hello&quot; function"></p>
<ul>
<li><strong>Events generated during Lambda function deployment</strong></li>
</ul>
<p>Deployment events generated during Lambda “hello” function deployed into AWS.</p>
<p><img src="https://raw.githubusercontent.com/TerrenceMiao/AWS/master/serverless-example/Lambda%20CloudFormation.png" alt="Events generated during Lambda function deployment"></p>
<ul>
<li><strong>Add Lambda Trigger on AWS API Gateway</strong></li>
</ul>
<p>Manually create a Lambda Trigger. This time we use AWS API Gateway to trigger / invoke Lambda “hello” function.</p>
<p><img src="https://raw.githubusercontent.com/TerrenceMiao/AWS/master/serverless-example/Lambda%20Trigger%20on%20API%20Gateway.png" alt="Lambda Trigger created on AWS API Gateway"></p>
<ul>
<li><strong>Exposed Lambda API Gateway</strong></li>
</ul>
<p>After Lambda Trigger created, an exposed RESTful interface for Lambda “hello” function.</p>
<p><img src="https://raw.githubusercontent.com/TerrenceMiao/AWS/master/serverless-example/Lambda%20API%20Gateway.png" alt="Lambda API Gateway"></p>
<h3 id="Say-“hello”"><a href="#Say-“hello”" class="headerlink" title="Say “hello”"></a>Say “hello”</h3><p>Set up AWS API Gateway trigger for Lambda “hello” function. Go to url, e.g.:</p>
<p>Function “hello” log:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"message"</span>: <span class="string">"Go Serverless v1.0! Your function executed successfully!"</span>,</div><div class="line">  <span class="attr">"input"</span>: &#123;</div><div class="line">    <span class="attr">"resource"</span>: <span class="string">"/serverless-example-dev-hello"</span>,</div><div class="line">    <span class="attr">"path"</span>: <span class="string">"/serverless-example-dev-hello"</span>,</div><div class="line">    <span class="attr">"httpMethod"</span>: <span class="string">"GET"</span>,</div><div class="line">    <span class="attr">"headers"</span>: &#123;</div><div class="line">      <span class="attr">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>,</div><div class="line">      <span class="attr">"Accept-Encoding"</span>: <span class="string">"gzip, deflate, sdch, br"</span>,</div><div class="line">      <span class="attr">"Accept-Language"</span>: <span class="string">"en-AU,en-GB;q=0.8,en-US;q=0.6,en;q=0.4"</span>,</div><div class="line">      <span class="attr">"CloudFront-Forwarded-Proto"</span>: <span class="string">"https"</span>,</div><div class="line">      <span class="attr">"CloudFront-Is-Desktop-Viewer"</span>: <span class="string">"true"</span>,</div><div class="line">      <span class="attr">"CloudFront-Is-Mobile-Viewer"</span>: <span class="string">"false"</span>,</div><div class="line">      <span class="attr">"CloudFront-Is-SmartTV-Viewer"</span>: <span class="string">"false"</span>,</div><div class="line">      <span class="attr">"CloudFront-Is-Tablet-Viewer"</span>: <span class="string">"false"</span>,</div><div class="line">      <span class="attr">"CloudFront-Viewer-Country"</span>: <span class="string">"AU"</span>,</div><div class="line">      <span class="attr">"Host"</span>: <span class="string">"b5dyhej16l.execute-api.ap-southeast-2.amazonaws.com"</span>,</div><div class="line">      <span class="attr">"Referer"</span>: <span class="string">"https://ap-southeast-2.console.aws.amazon.com/lambda/home?region=ap-southeast-2"</span>,</div><div class="line">      <span class="attr">"upgrade-insecure-requests"</span>: <span class="string">"1"</span>,</div><div class="line">      <span class="attr">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36"</span>,</div><div class="line">      <span class="attr">"Via"</span>: <span class="string">"2.0 6884828476070d32978b45d03c1cc437.cloudfront.net (CloudFront)"</span>,</div><div class="line">      <span class="attr">"X-Amz-Cf-Id"</span>: <span class="string">"mvToMffe1AsUJNcMJKUh-Rx26oBJsRBe2n9I1df3xqIAIENPR_ku3A=="</span>,</div><div class="line">      <span class="attr">"X-Amzn-Trace-Id"</span>: <span class="string">"Root=1-58aae2ff-0b0c5e4059cc97576211ba4a"</span>,</div><div class="line">      <span class="attr">"X-Forwarded-For"</span>: <span class="string">"101.181.175.227, 54.239.202.65"</span>,</div><div class="line">      <span class="attr">"X-Forwarded-Port"</span>: <span class="string">"443"</span>,</div><div class="line">      <span class="attr">"X-Forwarded-Proto"</span>: <span class="string">"https"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"queryStringParameters"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"pathParameters"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"stageVariables"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"requestContext"</span>: &#123;</div><div class="line">      <span class="attr">"accountId"</span>: <span class="string">"624388274630"</span>,</div><div class="line">      <span class="attr">"resourceId"</span>: <span class="string">"5jbqsp"</span>,</div><div class="line">      <span class="attr">"stage"</span>: <span class="string">"prod"</span>,</div><div class="line">      <span class="attr">"requestId"</span>: <span class="string">"51ba2876-f769-11e6-b507-4b10c8a6886a"</span>,</div><div class="line">      <span class="attr">"identity"</span>: &#123;</div><div class="line">        <span class="attr">"cognitoIdentityPoolId"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"accountId"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"cognitoIdentityId"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"caller"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"apiKey"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"sourceIp"</span>: <span class="string">"101.181.175.227"</span>,</div><div class="line">        <span class="attr">"accessKey"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"cognitoAuthenticationType"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"cognitoAuthenticationProvider"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"userArn"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"userAgent"</span>: <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36"</span>,</div><div class="line">        <span class="attr">"user"</span>: <span class="literal">null</span></div><div class="line">      &#125;,</div><div class="line">      <span class="attr">"resourcePath"</span>: <span class="string">"/serverless-example-dev-hello"</span>,</div><div class="line">      <span class="attr">"httpMethod"</span>: <span class="string">"GET"</span>,</div><div class="line">      <span class="attr">"apiId"</span>: <span class="string">"b5dyhej16l"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"body"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"isBase64Encoded"</span>: <span class="literal">false</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul>
<li>serverless framework, <a href="https://serverless.com/" target="_blank" rel="external">https://serverless.com/</a></li>
<li>Example source code and artefact, <a href="https://github.com/TerrenceMiao/AWS/tree/master/serverless-example" target="_blank" rel="external">https://github.com/TerrenceMiao/AWS/tree/master/serverless-example</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;serverless&quot;&gt;&lt;a href=&quot;#serverless&quot; class=&quot;headerlink&quot; title=&quot;serverless&quot;&gt;&lt;/a&gt;serverless&lt;/h3&gt;&lt;p&gt;With latest Node.js 6.x.x installed, t
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>The State Quadrants - Functional vs. Object Oriented</title>
    <link href="https://terrencemiao.github.io/blog/2017/02/18/The-State-Quadrants-Functional-vs-Object-Oriented/"/>
    <id>https://terrencemiao.github.io/blog/2017/02/18/The-State-Quadrants-Functional-vs-Object-Oriented/</id>
    <published>2017-02-18T12:19:56.000Z</published>
    <updated>2017-02-18T12:25:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/GzTcUK5qFtyGvu541IZpeRYf8Nqwlvs-XHBflIuWJpzNEg9QB8Xy-64aY0ImWqtYZbbIqSfrrMpUEXRzVjaFqLKuLYAzs47AxGCDammqPTEzJqYiXt_fKJSUDzvbkrwS8Mv70mrXJpH8Fyr1LFPZJCgX5VzPUwrE7-knfrxF3eBI-nRC4V9NB7_XtbZ7tPNrBoi_SqaDb9y7EJbrnKdc3_uDM6kfJnSovWiSHx_NgZBC7QF3mu5K_o9vcznNU3zZ14LQLjCk7yH09kkJHTol3h6R0yYsjT_YSXU0PJfNd_iuF0lGUv1wIlHsau01gWFCTpgPL6p01W3ff3Ft1pSxGWAAwcMw35_27OUKmn-zLvm4vdFhE5A1EKFQEOpnJqv1hd70lOBSuPw-75t2LI68KlixAx2ASDX0AR7PxNp9aWzMM-0rapQwMTAD5ZF7mmupZIQvIHbUdXSJWCKoLnuCyKnKN0ZANQtnhpnw-OBuxvLto1rP0ehjJ4EgGxI1y8ODAS6k7DiwVWZ-Y_5w1I9vTpUc627fhzp_vgX68GL9NRz7SSP4gxjrqPbQPdh8O5x-QCYI-_VCuh2Lx53fdGCeq6pI7_hqnOqk5BIuRgMFZ52H1Xu35PuGrw=w389-h276-no" alt="The State Quadrants"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/GzTcUK5qFtyGvu541IZpeRYf8Nqwlvs-XHBflIuWJpzNEg9QB8Xy-64aY0ImWqtYZbbIqSfrrMpUEXRzVjaFqLKuLYAzs
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Factorial function implementation in Java 8</title>
    <link href="https://terrencemiao.github.io/blog/2017/02/18/Factorial-function-implementation-in-Java-8/"/>
    <id>https://terrencemiao.github.io/blog/2017/02/18/Factorial-function-implementation-in-Java-8/</id>
    <published>2017-02-18T11:15:33.000Z</published>
    <updated>2017-02-18T12:12:40.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> org.paradise.function;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"><span class="keyword">import</span> java.util.function.Function;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by terrence on 12/12/2016.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FactorialFunction</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Integer, Long&gt; FACTORIAL_MAP = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Function&lt;Integer, Long&gt; FACTORIAL = (x) -&gt;</div><div class="line">            FACTORIAL_MAP.computeIfAbsent(x,</div><div class="line">                    n -&gt; n * FactorialFunction.FACTORIAL.apply(n - <span class="number">1</span>));</div><div class="line"></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        FACTORIAL_MAP.put(<span class="number">1</span>, <span class="number">1L</span>); <span class="comment">// FACTORIAL(1)</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FactorialFunction</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Unit-test"><a href="#Unit-test" class="headerlink" title="Unit test"></a>Unit test</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> org.paradise.function;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.junit.Test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertEquals;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by terrence on 12/12/2016.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactorialFunctionTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFactorialFunction</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">1</span>), FactorialFunction.FACTORIAL.apply(<span class="number">1</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">2</span>), FactorialFunction.FACTORIAL.apply(<span class="number">2</span>));</div><div class="line"></div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">3628800</span>), FactorialFunction.FACTORIAL.apply(<span class="number">10</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Implementation&quot;&gt;&lt;a href=&quot;#Implementation&quot; class=&quot;headerlink&quot; title=&quot;Implementation&quot;&gt;&lt;/a&gt;Implementation&lt;/h3&gt;&lt;figure class=&quot;highlight 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Fibonacci function implementation in Java 8</title>
    <link href="https://terrencemiao.github.io/blog/2017/02/18/Fibonacci-function-implementation-in-Java-8/"/>
    <id>https://terrencemiao.github.io/blog/2017/02/18/Fibonacci-function-implementation-in-Java-8/</id>
    <published>2017-02-18T11:09:56.000Z</published>
    <updated>2017-02-18T12:14:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> org.paradise.function;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"><span class="keyword">import</span> java.util.function.Function;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by terrence on 12/12/2016.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FibonacciFunction</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Integer, Long&gt; FIBONACCI_MAP = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Function&lt;Integer, Long&gt; FIBONACCI = (x) -&gt;</div><div class="line">            FIBONACCI_MAP.computeIfAbsent(x,</div><div class="line">                    n -&gt; FibonacciFunction.FIBONACCI.apply(n - <span class="number">2</span>) + FibonacciFunction.FIBONACCI.apply(n - <span class="number">1</span>));</div><div class="line"></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        FIBONACCI_MAP.put(<span class="number">0</span>, <span class="number">0L</span>); <span class="comment">// FIBONACCI(0)</span></div><div class="line">        FIBONACCI_MAP.put(<span class="number">1</span>, <span class="number">1L</span>); <span class="comment">// FIBONACCI(1)</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FibonacciFunction</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Unit-test"><a href="#Unit-test" class="headerlink" title="Unit test"></a>Unit test</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> org.paradise.function;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.junit.Test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertEquals;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by terrence on 12/12/2016.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FibonacciFunctionTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFibonacciFunction</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">0</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">0</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">1</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">1</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">1</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">2</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">2</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">3</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">3</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">4</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">5</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">5</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">8</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">6</span>));</div><div class="line"></div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">13</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">7</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">21</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">8</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">34</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">9</span>));</div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">55</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">10</span>));</div><div class="line"></div><div class="line">        assertEquals(<span class="string">"Incorrect result"</span>, Long.valueOf(<span class="number">12586269025L</span>), FibonacciFunction.FIBONACCI.apply(<span class="number">50</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Implementation&quot;&gt;&lt;a href=&quot;#Implementation&quot; class=&quot;headerlink&quot; title=&quot;Implementation&quot;&gt;&lt;/a&gt;Implementation&lt;/h3&gt;&lt;figure class=&quot;highlight 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Remote debugging Java applications run on Tomcat</title>
    <link href="https://terrencemiao.github.io/blog/2017/02/11/Remote-debugging-Java-applications-run-on-Tomcat/"/>
    <id>https://terrencemiao.github.io/blog/2017/02/11/Remote-debugging-Java-applications-run-on-Tomcat/</id>
    <published>2017-02-11T02:52:26.000Z</published>
    <updated>2017-02-11T03:04:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>Enable JVM option to attach a remote debugger:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">export</span> JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,<span class="built_in">suspend</span>=y,address=5005</div></pre></td></tr></table></figure>
<p>“suspend” set to “y” is to let remote debugger start loading the application. </p>
<p>Now, start running Tomcat. JVM debugging port is bound on port 5005i on the machine runs on Tomcat. </p>
<p>Next, set up SSH tunnel mirror remotei host (ip-10-213-79-77.ap-southeast-2.compute.internal) 5005 port to localhost on port 5005. For example:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -L 5005:ip-10-213-79-77.ap-southeast-2.compute.internal:5005 <span class="_">-l</span> ec2-user ip-10-213-79-77.ap-southeast-2.compute.internal</div></pre></td></tr></table></figure>
<p>You can start remote debugging in IDE like IntelliJ and debug the code since.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Enable JVM option to attach a remote debugger:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Web Components are coming</title>
    <link href="https://terrencemiao.github.io/blog/2017/02/01/Web-Components-are-coming/"/>
    <id>https://terrencemiao.github.io/blog/2017/02/01/Web-Components-are-coming/</id>
    <published>2017-02-01T12:56:19.000Z</published>
    <updated>2017-02-01T13:02:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>AngularJS is going to continue to succeed for some time. But change is inevitable.</p>
<p><em>Web Components are coming.</em> </p>
<p>WebComponents create the ability to do all the sorts of markup-driven programming like AngularJS, ReactJS, but less ecosystem dependent. Because DOM is integration point for all the kinds of JavaScript frameworks. Web Components make it MUCH easier to interoperate between components. </p>
<p>The future isn’t here yet, but it will change fundamental assumptions about how a JavaScript framework should act and what it should be responsible for. Those shifts in assumptions frequently cause frameworks will drop out of the ecosystem quickly than expected.</p>
<p><img src="https://lh3.googleusercontent.com/proxy/HUuJ77cm67p-cQAHIqXUDI1s3WngVunCpraVyWv_7pldMa2-bFF7LDKWbG-PX-Tj25-c7zl9v_SZc3ZXw7J5TZWPngCPostqMA=s110-p-rw" alt="Web Components"></p>
<p>URL: <a href="https://www.webcomponents.org/" target="_blank" rel="external">https://www.webcomponents.org/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;AngularJS is going to continue to succeed for some time. But change is inevitable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Web Components are coming.&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;Web
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Perfection</title>
    <link href="https://terrencemiao.github.io/blog/2017/02/01/Perfection/"/>
    <id>https://terrencemiao.github.io/blog/2017/02/01/Perfection/</id>
    <published>2017-02-01T12:35:24.000Z</published>
    <updated>2017-02-01T12:50:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>Il semble que la perfection soit atteinte non quand il n’y a plus rien à ajouter, mais quand il n’y a plus rien à retrancher.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- Antoine de saint Exupery</div></pre></td></tr></table></figure>
<p><em>It seems that perfection is attained not when there is nothing more to add, but when there is nothing more to remove.</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Il semble que la perfection soit atteinte non quand il n’y a plus rien à ajouter, mais quand il n’y a plus rien à retrancher.&lt;/p&gt;
&lt;figure
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Setup Docker Private Registry in Nexus Repository OSS 3.x.x</title>
    <link href="https://terrencemiao.github.io/blog/2017/01/28/Setup-Docker-Private-Registry-in-Nexus-Repository-OSS-3-x-x/"/>
    <id>https://terrencemiao.github.io/blog/2017/01/28/Setup-Docker-Private-Registry-in-Nexus-Repository-OSS-3-x-x/</id>
    <published>2017-01-28T03:37:50.000Z</published>
    <updated>2017-01-28T04:18:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>Make sure Nexus Repository has been setup with Self Signed certificate, certificate for host/server e.g. “silencer.bigpond”.</p>
<p>The following instructions have been successfully tested in Nexus version <em>3.2.0-01</em>.</p>
<h2 id="Create-Docker-Hub-repository-in-Nexus"><a href="#Create-Docker-Hub-repository-in-Nexus" class="headerlink" title="Create Docker Hub repository in Nexus"></a>Create Docker Hub repository in Nexus</h2><p><img src="https://raw.githubusercontent.com/TerrenceMiao/nexus/master/images/docker-hub%20repository.png" alt="Docker Hub repository"></p>
<h2 id="Create-Docker-Internal-repository-in-Nexus"><a href="#Create-Docker-Internal-repository-in-Nexus" class="headerlink" title="Create Docker Internal repository in Nexus"></a>Create Docker Internal repository in Nexus</h2><p><img src="https://raw.githubusercontent.com/TerrenceMiao/nexus/master/images/docker-internal%20repository.png" alt="Docker Internal repository"></p>
<h2 id="Create-Docker-Group-repository-in-Nexus"><a href="#Create-Docker-Group-repository-in-Nexus" class="headerlink" title="Create Docker Group repository in Nexus"></a>Create Docker Group repository in Nexus</h2><p><img src="https://raw.githubusercontent.com/TerrenceMiao/nexus/master/images/docker-group%20repository.png" alt="Docker Group repository"></p>
<h2 id="Run-Docker-with-Docker-Native"><a href="#Run-Docker-with-Docker-Native" class="headerlink" title="Run Docker with Docker Native"></a>Run Docker with Docker Native</h2><h4 id="Add-Docker-Private-Registry-in-Insecure-Registries"><a href="#Add-Docker-Private-Registry-in-Insecure-Registries" class="headerlink" title="Add Docker Private Registry in Insecure Registries"></a>Add Docker Private Registry in Insecure Registries</h4><p><img src="https://raw.githubusercontent.com/TerrenceMiao/nexus/master/images/docker%20native%20-%20Insecure%20registries.png" alt="Docker Native Insecure registries"></p>
<p>Now this approach supports <em>docker pull</em> and <em>docker push</em>.</p>
<p>Work around with “<em>x509: certificate signed by unknown authority</em>“ error by adding “–disable-content-trust” option on <em>docker push</em> command line if Docker doesn’t accept Self-Signed certificate.</p>
<h4 id="Add-Docker-Private-Registry-server’s-certificate-into-Docker-Virtual-Machine-CA-list"><a href="#Add-Docker-Private-Registry-server’s-certificate-into-Docker-Virtual-Machine-CA-list" class="headerlink" title="Add Docker Private Registry server’s certificate into Docker Virtual Machine CA list"></a>Add Docker Private Registry server’s certificate into Docker Virtual Machine CA list</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">𝜆 keytool -printcert -rfc -sslserver silencer.bigpond:8444 &gt; silencer.bigpond.pem</div><div class="line">-----BEGIN CERTIFICATE-----</div><div class="line">MIIDkDCCAnigAwIBAgIEAqo9kTANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJBVTEUMBIGA1UE</div><div class="line">CBMLVW5zcGVjaWZpZWQxFDASBgNVBAcTC1Vuc3BlY2lmaWVkMREwDwYDVQQKEwhTb25hdHlwZTES</div><div class="line">MBAGA1UEAwwJKi5iaWdwb25kMB4XDTE2MDYxMjExMzY1M1oXDTMwMDIxOTExMzY1M1owYDELMAkG</div><div class="line">A1UEBhMCQVUxFDASBgNVBAgTC1Vuc3BlY2lmaWVkMRQwEgYDVQQHEwtVbnNwZWNpZmllZDERMA8G</div><div class="line">A1UEChMIU29uYXR5cGUxEjAQBgNVBAMMCSouYmlncG9uZDCCASIwDQYJKoZIhvcNAQEBBQADggEP</div><div class="line">ADCCAQoCggEBAJNO5mDpBDQQ8n4t0P2z8ChWzIFQ3Pf+5U8x6P17O3WtKTfsbuRYobHYmas5tVdV</div><div class="line">dnLIqpb4JV9DWIoS+CNG6cRLy3GIWWT7CbjsrpDlOTArslvk3KuzQ0dsZNflRfdd+ughI2LczehE</div><div class="line">fhzPJzA+ZU8Am1CadM+VUa+T6MilFQMXpWfjND6BNnV+qr/MX1QQfSjiWt7oWBex0BB0VPv9ooBZ</div><div class="line">UqO+8jk5fUY8wEIa/kqLUqIKGxIUx9BMQBwBJwDKZmK93DXSPvAFYbKQjj6/nbV9R1VWmR7fhkLG</div><div class="line">+Ixlx5ld2dxv4+xvXmS8s4NanBtKZWUfEYVPp7gUF9HZoW9A1jcCAwEAAaNSMFAwDAYDVR0TBAUw</div><div class="line">AwEB/zAhBgNVHREEGjAYghBzaWxlbmNlci5iaWdwb25khwQKAAAJMB0GA1UdDgQWBBQV3WTuC+GI</div><div class="line">8lHtH0uL+kYqTG+vczANBgkqhkiG9w0BAQsFAAOCAQEAUwL+qnKVT0ENZEZnDjB+cjPfvkeWOD05</div><div class="line">PrGUOn4YB4vllq2S6Cgfm0OaZ+vMt3KMXPf9pIgZ797jdPhOP/s5IVJItldky+u/Hk9gNtUwEjpg</div><div class="line">l0MjhSm/PqxR5XoJdkYlvUdtq+PTrU5RU3v3GImeOmlI4mM5PaZ6OT8HC5VMX5s9RawBr/5EbJHR</div><div class="line">M7EN8r3g4Y/2109YoHoiWAhnN6TC3RhmCoQqGOiPsS732KHUz3KqXVbq9VTRdA3dXqFj1cUSet1T</div><div class="line">XTPisaiehffvbqYm2vrJ5WYgqCwb8TadDg66TToj080qvA8cXAF7qlA8pOImrbVOs7tdANSAs+AO</div><div class="line">cqCkiA==</div><div class="line">-----END CERTIFICATE-----</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">𝜆 screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty</div></pre></td></tr></table></figure>
<p>Inside Docker Virtual Machine, follow these steps:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo cat silencer.bigpond.pem &gt;&gt; /etc/ssl/certs/ca-certificates.crt</div><div class="line">$ sudo /etc/init.d/docker restart</div><div class="line">$ tail <span class="_">-f</span> /var/lib/boot2docker/docker.log</div></pre></td></tr></table></figure>
<h2 id="With-Docker-Toolbox"><a href="#With-Docker-Toolbox" class="headerlink" title="With Docker Toolbox"></a>With Docker Toolbox</h2><h4 id="Add-Docker-Private-Registry-server’s-certificate-into-Docker-Virtual-Machine-CA-list-1"><a href="#Add-Docker-Private-Registry-server’s-certificate-into-Docker-Virtual-Machine-CA-list-1" class="headerlink" title="Add Docker Private Registry server’s certificate into Docker Virtual Machine CA list"></a>Add Docker Private Registry server’s certificate into Docker Virtual Machine CA list</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">𝜆 keytool -printcert -rfc -sslserver silencer.bigpond:8444 &gt; silencer.bigpond.pem</div><div class="line">𝜆 docker-machine ssh default</div></pre></td></tr></table></figure>
<p>Inside Docker Virtual Machine, follow these steps:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo cat silencer.bigpond.pem &gt;&gt; /etc/ssl/certs/ca-certificates.crt</div><div class="line">$ sudo /etc/init.d/docker restart</div><div class="line">$ tail <span class="_">-f</span> /var/lib/boot2docker/docker.log</div></pre></td></tr></table></figure></p>
<p>Press Ctrl + D and Ctrl + D to exist SCREEN program. Type “screen -r” to re-entry SCREEN program.</p>
<h2 id="Additional-Certificates"><a href="#Additional-Certificates" class="headerlink" title="Additional Certificates"></a>Additional Certificates</h2><p>Download 3rd party Repository server’s certificate. Use tool like <em>KeyStore Explorer</em> to add 3rd party server certificates into existing <em>keystore.jks</em>. Due to a certificate chain that does not exist within the existing Java truststore, Java does not trust the certificate and fails to connect to the application.</p>
<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">𝜆 docker login silencer.bigpond:18443</div><div class="line">Username: admin</div><div class="line">Password: admin123</div><div class="line">Login Succeeded</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">𝜆 docker search silencer.bigpond:18443/tomcat</div><div class="line">𝜆 docker pull silencer.bigpond:18443/jtech/tomcat:latest</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">𝜆 docker login silencer.bigpond:18444</div><div class="line">Username: admin</div><div class="line">Password: admin123</div><div class="line">Login Succeeded</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">𝜆 docker build -t jtech/camel-spring:latest .</div><div class="line">𝜆 docker tag jtech/camel-spring silencer.bigpond:18444/jtech/camel-spring:latest</div><div class="line">𝜆 docker push silencer.bigpond:18444/jtech/camel-spring:latest</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">𝜆 docker push --disable-content-trust silencer.bigpond:18444/jtech/camel-spring:latest</div></pre></td></tr></table></figure>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><ul>
<li>Due to Docker Virtual Machine is immutable, the CA certificate added change made inside VM is ephemeral, and lost after VM is restarted</li>
<li>Docker Private Registry ONLY supports <em>HTTPS</em>, NOT HTTP</li>
<li>Nexus repository MUST register and use server certificate for host e.g. “silencer.bigpond”, NOT “localhost.bigpond” to run Docker Private Registry</li>
<li>Try with “–disable-content-trust” if error like “Get <a href="https://silencer.gateway:18444/v1/_ping" target="_blank" rel="external">https://silencer.gateway:18444/v1/_ping</a>: x509: certificate signed by unknown authority”</li>
</ul>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li>Private Registry for Docker, <em><a href="https://books.sonatype.com/nexus-book/3.0/reference/docker.html" target="_blank" rel="external">https://books.sonatype.com/nexus-book/3.0/reference/docker.html</a></em></li>
<li>Using Self-Signed Certificates with Nexus Repository Manager and Docker Daemon, <em><a href="https://support.sonatype.com/hc/en-us/articles/217542177" target="_blank" rel="external">https://support.sonatype.com/hc/en-us/articles/217542177</a></em></li>
<li>SSL Certificate Guide, <em><a href="https://support.sonatype.com/hc/en-us/articles/213465768" target="_blank" rel="external">https://support.sonatype.com/hc/en-us/articles/213465768</a></em></li>
<li>Setup HTTPS access Nexus Repository, <em><a href="https://github.com/TerrenceMiao/nexus/wiki/Setup-HTTPS-access-Nexus-Repository-Manager-OSS-3.xx" target="_blank" rel="external">https://github.com/TerrenceMiao/nexus/wiki/Setup-HTTPS-access-Nexus-Repository-Manager-OSS-3.xx</a></em></li>
<li>Add Self Signed CA certificate into Docker’s CA list, <em><a href="https://github.com/klippx/inject-docker-certs" target="_blank" rel="external">https://github.com/klippx/inject-docker-certs</a></em></li>
<li>Adding Self Signed certificate in Docker Native for Mac, <em><a href="https://forums.docker.com/t/adding-self-signed-certificates/9761" target="_blank" rel="external">https://forums.docker.com/t/adding-self-signed-certificates/9761</a></em></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Make sure Nexus Repository has been setup with Self Signed certificate, certificate for host/server e.g. “silencer.bigpond”.&lt;/p&gt;
&lt;p&gt;The f
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Setup HTTPS access in Nexus Repository Manager OSS 3.x.x</title>
    <link href="https://terrencemiao.github.io/blog/2017/01/28/Setup-HTTPS-access-in-Nexus-Repository-Manager-OSS-3-x-x/"/>
    <id>https://terrencemiao.github.io/blog/2017/01/28/Setup-HTTPS-access-in-Nexus-Repository-Manager-OSS-3-x-x/</id>
    <published>2017-01-28T02:20:47.000Z</published>
    <updated>2017-01-28T03:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Generate-Self-Signed-certificate"><a href="#Generate-Self-Signed-certificate" class="headerlink" title="Generate Self Signed certificate"></a>Generate Self Signed certificate</h2><p>On a Mac at home, with Bigpond internet access. Full host name is <em>silencer.bigpond</em> and IP Address is <em>10.0.0.9</em>.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">terrence@Silencer /Applications/nexus-3.0.0-03/etc/ssl</div><div class="line">00:13:05 𝜆 keytool -genkeypair -keystore keystore.jks -storepass changeit -keypass changeit -alias jetty -keyalg RSA -keysize 2048 -validity 5000 -dname <span class="string">"CN=*.bigpond, O=Sonatype, L=Unspecified, ST=Unspecified, C=AU"</span> -ext <span class="string">"SAN=DNS:silencer.bigpond,IP:10.0.0.9"</span> -ext <span class="string">"BC=ca:true"</span></div></pre></td></tr></table></figure>
<p>OR run “nslookup 127.0.0.1” return full domain hostname e.g. “localhost.bigpond”.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">terrence@Silencer /Applications/nexus-3.0.0-03/etc/ssl</div><div class="line">00:13:05 𝜆 keytool -genkeypair -keystore keystore.jks -storepass changeit -keypass changeit -alias jetty -keyalg RSA -keysize 2048 -validity 5000 -dname <span class="string">"CN=*.bigpond, O=Sonatype, L=Unspecified, ST=Unspecified, C=AU"</span> -ext <span class="string">"SAN=DNS:localhost.bigpond,IP:127.0.0.1"</span> -ext <span class="string">"BC=ca:true"</span></div></pre></td></tr></table></figure>
<p>Now, with latest Nexus (version 3.2.0-01) you can use self-signed server certificate without specifying IP address.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">terrence@Silencer /usr/<span class="built_in">local</span>/nexus-3.2.0-01/etc/ssl</div><div class="line">00:13:05 𝜆 keytool -genkeypair -keystore keystore.jks -storepass changeit -keypass changeit -alias jetty -keyalg RSA -keysize 2048 -validity 5000 -dname <span class="string">"CN=*.gateway, O=Sonatype, L=Unspecified, ST=Unspecified, C=AU"</span> -ext <span class="string">"SAN=DNS:silencer.gateway"</span> -ext <span class="string">"BC=ca:true"</span></div></pre></td></tr></table></figure>
<h2 id="Enable-HTTPS-access"><a href="#Enable-HTTPS-access" class="headerlink" title="Enable HTTPS access"></a>Enable HTTPS access</h2><p>Change jetty-https.xml file:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">terrence@Silencer /Applications/nexus-3.0.0-03/etc</div><div class="line">00:18:59 𝜆 diff jetty-https.xml jetty-https.xml.orig</div><div class="line">25,26c25,26</div><div class="line">&lt;     &lt;Set name=<span class="string">"KeyStorePassword"</span>&gt;changeit&lt;/Set&gt;</div><div class="line">&lt;     &lt;Set name=<span class="string">"KeyManagerPassword"</span>&gt;changeit&lt;/Set&gt;</div><div class="line">---</div><div class="line">&gt;     &lt;Set name=<span class="string">"KeyStorePassword"</span>&gt;OBF:1v2j1uum1xtv1zej1zer1xtn1uvk1v1v&lt;/Set&gt;</div><div class="line">&gt;     &lt;Set name=<span class="string">"KeyManagerPassword"</span>&gt;OBF:1v2j1uum1xtv1zej1zer1xtn1uvk1v1v&lt;/Set&gt;</div><div class="line">28c28</div><div class="line">&lt;     &lt;Set name=<span class="string">"TrustStorePassword"</span>&gt;changeit&lt;/Set&gt;</div><div class="line">---</div><div class="line">&gt;     &lt;Set name=<span class="string">"TrustStorePassword"</span>&gt;OBF:1v2j1uum1xtv1zej1zer1xtn1uvk1v1v&lt;/Set&gt;</div></pre></td></tr></table></figure>
<p>Add SSL port and include <em>jetty-https.xml</em> in file:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">terrence@Silencer /Applications/nexus-3.0.0-03/etc</div><div class="line">00:19:06 𝜆 diff org.sonatype.nexus.cfg org.sonatype.nexus.cfg.orig</div><div class="line">3d2</div><div class="line">&lt; application-port-ssl=8444</div><div class="line">5c4</div><div class="line">&lt; nexus-args=<span class="variable">$&#123;karaf.etc&#125;</span>/jetty.xml,<span class="variable">$&#123;karaf.etc&#125;</span>/jetty-http.xml,<span class="variable">$&#123;karaf.etc&#125;</span>/jetty-https.xml,<span class="variable">$&#123;karaf.etc&#125;</span>/jetty-http-redirect-to-https.xml,<span class="variable">$&#123;karaf.etc&#125;</span>/jetty-requestlog.xml</div><div class="line">---</div><div class="line">&gt; nexus-args=<span class="variable">$&#123;karaf.etc&#125;</span>/jetty.xml,<span class="variable">$&#123;karaf.etc&#125;</span>/jetty-http.xml,<span class="variable">$&#123;karaf.etc&#125;</span>/jetty-requestlog.xml</div></pre></td></tr></table></figure>
<p>Retrieve server’s certificate</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">𝜆 keytool -printcert -rfc -sslserver silencer.bigpond:8444 &gt; silencer.bigpond.pem</div><div class="line">-----BEGIN CERTIFICATE-----</div><div class="line">MIIDkDCCAnigAwIBAgIEAqo9kTANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJBVTEUMBIGA1UE</div><div class="line">CBMLVW5zcGVjaWZpZWQxFDASBgNVBAcTC1Vuc3BlY2lmaWVkMREwDwYDVQQKEwhTb25hdHlwZTES</div><div class="line">MBAGA1UEAwwJKi5iaWdwb25kMB4XDTE2MDYxMjExMzY1M1oXDTMwMDIxOTExMzY1M1owYDELMAkG</div><div class="line">A1UEBhMCQVUxFDASBgNVBAgTC1Vuc3BlY2lmaWVkMRQwEgYDVQQHEwtVbnNwZWNpZmllZDERMA8G</div><div class="line">A1UEChMIU29uYXR5cGUxEjAQBgNVBAMMCSouYmlncG9uZDCCASIwDQYJKoZIhvcNAQEBBQADggEP</div><div class="line">ADCCAQoCggEBAJNO5mDpBDQQ8n4t0P2z8ChWzIFQ3Pf+5U8x6P17O3WtKTfsbuRYobHYmas5tVdV</div><div class="line">dnLIqpb4JV9DWIoS+CNG6cRLy3GIWWT7CbjsrpDlOTArslvk3KuzQ0dsZNflRfdd+ughI2LczehE</div><div class="line">fhzPJzA+ZU8Am1CadM+VUa+T6MilFQMXpWfjND6BNnV+qr/MX1QQfSjiWt7oWBex0BB0VPv9ooBZ</div><div class="line">UqO+8jk5fUY8wEIa/kqLUqIKGxIUx9BMQBwBJwDKZmK93DXSPvAFYbKQjj6/nbV9R1VWmR7fhkLG</div><div class="line">+Ixlx5ld2dxv4+xvXmS8s4NanBtKZWUfEYVPp7gUF9HZoW9A1jcCAwEAAaNSMFAwDAYDVR0TBAUw</div><div class="line">AwEB/zAhBgNVHREEGjAYghBzaWxlbmNlci5iaWdwb25khwQKAAAJMB0GA1UdDgQWBBQV3WTuC+GI</div><div class="line">8lHtH0uL+kYqTG+vczANBgkqhkiG9w0BAQsFAAOCAQEAUwL+qnKVT0ENZEZnDjB+cjPfvkeWOD05</div><div class="line">PrGUOn4YB4vllq2S6Cgfm0OaZ+vMt3KMXPf9pIgZ797jdPhOP/s5IVJItldky+u/Hk9gNtUwEjpg</div><div class="line">l0MjhSm/PqxR5XoJdkYlvUdtq+PTrU5RU3v3GImeOmlI4mM5PaZ6OT8HC5VMX5s9RawBr/5EbJHR</div><div class="line">M7EN8r3g4Y/2109YoHoiWAhnN6TC3RhmCoQqGOiPsS732KHUz3KqXVbq9VTRdA3dXqFj1cUSet1T</div><div class="line">XTPisaiehffvbqYm2vrJ5WYgqCwb8TadDg66TToj080qvA8cXAF7qlA8pOImrbVOs7tdANSAs+AO</div><div class="line">cqCkiA==</div><div class="line">-----END CERTIFICATE-----</div></pre></td></tr></table></figure>
<p>To get another Source Code Repository server’s certificate</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">𝜆 keytool -printcert -rfc -sslserver bitbucket.cd.paradise.org:443 &gt; bitbucket.cd.paradise.org.pem</div></pre></td></tr></table></figure>
<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>Restart Nexus and access: <a href="https://localhost:8444" target="_blank" rel="external">https://localhost:8444</a></p>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><ul>
<li>Use utility tool “KeyStore Explorer” add additional CA certificates into keystore.jks file, especially when Gradle / Maven output error like:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Generate-Self-Signed-certificate&quot;&gt;&lt;a href=&quot;#Generate-Self-Signed-certificate&quot; class=&quot;headerlink&quot; title=&quot;Generate Self Signed certifi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://terrencemiao.github.io/blog/2017/01/13/hello-world/"/>
    <id>https://terrencemiao.github.io/blog/2017/01/13/hello-world/</id>
    <published>2017-01-13T08:43:03.000Z</published>
    <updated>2017-01-13T08:43:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
