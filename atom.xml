<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Terrence Miao&#39;s Adventures</title>
  
  <subtitle>A journey of a thousand miles begins with a single step</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://terrencemiao.github.io/blog/"/>
  <updated>2022-09-07T03:58:31.876Z</updated>
  <id>https://terrencemiao.github.io/blog/</id>
  
  <author>
    <name>Terrence Miao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to use Web Inspector and debug Safari on iPhone/iPad</title>
    <link href="https://terrencemiao.github.io/blog/2022/09/07/How-to-use-Web-Inspector-and-debug-Safari-on-iPhone-iPad/"/>
    <id>https://terrencemiao.github.io/blog/2022/09/07/How-to-use-Web-Inspector-and-debug-Safari-on-iPhone-iPad/</id>
    <published>2022-09-07T03:32:33.000Z</published>
    <updated>2022-09-07T03:58:31.876Z</updated>
    
    <content type="html"><![CDATA[<p>Prerequisites:</p><ul><li>iPhone / iPad / iPod and the Macbook on the same version of Safari</li><li>a genuine Apple lightning or USB cable</li></ul><p>Step by step:</p><ul><li>On iPad, iPhone or iPod touch, go to menu Settings &gt; Safari &gt; Advanced and toggle on Web Inspector. Enable JavaScript if it isn‚Äôt already on</li><li>On Macbook, launch Safari and go to menu Preferences &gt; Advanced then toggle on ‚ÄúShow Develop menu in menu bar‚Äù</li><li>Connect iOS device to Macbook with the lightning or USB cable</li><li>Now on iOS device, open Safari and go to the website you want to debug</li><li>On Macbook, open Safari and go to ‚ÄúDevelop‚Äù menu. You now see your iOS device that has connected with Macbook (if no page opened on iOS device, you see a message saying ‚ÄúNo Inspectable Applications‚Äù)</li></ul><p><img src="/blog/img/Safari Develop.png" alt="Safari Develop menu" title="Safari Develop menu"></p><ul><li>Click on the website in Safari Develop &gt; iOS device menu, Web Inspector window opened, then you can debug as you used to debug in Safari</li></ul><p><img src="/blog/img/Web Inspector.png" alt="Web Inspector" title="Web Inspector"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iPhone / iPad / iPod and the Macbook on the same version of Safari&lt;/li&gt;
&lt;li&gt;a genuine Apple lightning or USB 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GitHub Actions</title>
    <link href="https://terrencemiao.github.io/blog/2022/09/02/GitHub-Actions/"/>
    <id>https://terrencemiao.github.io/blog/2022/09/02/GitHub-Actions/</id>
    <published>2022-09-02T05:33:47.000Z</published>
    <updated>2022-09-02T05:53:23.236Z</updated>
    
    <content type="html"><![CDATA[<p>Have you tried GitHub Actions?</p><ul><li>GitHub Actions</li></ul><p><img src="/blog/img/GitHub%20Actions.png" alt="GitHub Actions" title="GitHub Actions"></p><ul><li>GitHub Actions Workflow</li></ul><p><img src="/blog/img/GitHub%20Actions%20Workflow.png" alt="GitHub Actions Workflow" title="GitHub Actions Workflow"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Have you tried GitHub Actions?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Actions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/blog/img/GitHub%20Actions.png&quot; alt=&quot;GitHub Actions&quot; t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Powerful Zsh</title>
    <link href="https://terrencemiao.github.io/blog/2022/08/02/Powerful-Zsh/"/>
    <id>https://terrencemiao.github.io/blog/2022/08/02/Powerful-Zsh/</id>
    <published>2022-08-02T09:42:06.000Z</published>
    <updated>2022-08-02T11:59:18.985Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/blog/img/Powerful%20Zsh.png" alt="Powerful Zsh" title="Powerful Zsh"></p><p>First you have <code>Zsh</code>, next install <code>Oh My Zsh</code> <a href="https://ohmyz.sh/" target="_blank" rel="noopener">https://ohmyz.sh/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><p>Add <code>Powerlevel10k</code> <a href="https://github.com/romkatv/powerlevel10k" target="_blank" rel="noopener">https://github.com/romkatv/powerlevel10k</a> and configure it</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k</span><br><span class="line"></span><br><span class="line">p10k configure</span><br></pre></td></tr></table></figure><p>Set <code>ZSH_THEME</code> to <strong>powerlevel10k</strong> in <code>.zshrc</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</span><br></pre></td></tr></table></figure><p>Add <code>zsh-autosuggestions</code> <a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener">https://github.com/zsh-users/zsh-autosuggestions</a> and enable in <code>.zshrc</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">plugins=(</span><br><span class="line">  zsh-autosuggestions</span><br><span class="line">)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Install <code>Fig</code> <a href="https://fig.io/" target="_blank" rel="noopener">https://fig.io/</a>, an IDE-style autocomplete but for terminal, and configure in <code>.zshrc</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"># Fig pre block. Keep at the top of this file.</span><br><span class="line">[[ -f &quot;$HOME/.fig/shell/zshrc.pre.zsh&quot; ]] &amp;&amp; . &quot;$HOME/.fig/shell/zshrc.pre.zsh&quot;</span><br><span class="line">...</span><br><span class="line"># Fig post block. Keep at the bottom of this file.</span><br><span class="line">[[ -f &quot;$HOME/.fig/shell/zshrc.post.zsh&quot; ]] &amp;&amp; . &quot;$HOME/.fig/shell/zshrc.post.zsh&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/blog/img/Powerful%20Zsh.png&quot; alt=&quot;Powerful Zsh&quot; title=&quot;Powerful Zsh&quot;&gt;&lt;/p&gt;
&lt;p&gt;First you have &lt;code&gt;Zsh&lt;/code&gt;, next install &lt;co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Convert JSON to CSV by using jq</title>
    <link href="https://terrencemiao.github.io/blog/2022/05/02/Convert-JSON-to-CSV-by-using-jq/"/>
    <id>https://terrencemiao.github.io/blog/2022/05/02/Convert-JSON-to-CSV-by-using-jq/</id>
    <published>2022-05-02T06:20:52.000Z</published>
    <updated>2022-05-02T06:50:23.775Z</updated>
    
    <content type="html"><![CDATA[<p>Step by step convert exported JSON data from AWS DynamoDB table into CSV, by using <code>jq</code>.</p><p>Export all the data from AWS DynamoDB table at first:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ aws --profile production dynamodb scan --table-name tiles &gt; tiles.json</span><br></pre></td></tr></table></figure><p>The exported JSON data looks like:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "Items": [</span><br><span class="line">        &#123;</span><br><span class="line">            "last_modified_date": &#123;</span><br><span class="line">                "S": "2021-12-09T01:15:25.335516"</span><br><span class="line">            &#125;,</span><br><span class="line">            "valid_from": &#123;</span><br><span class="line">                "S": "2021-12-09T01:00"</span><br><span class="line">            &#125;,</span><br><span class="line">            "created_date": &#123;</span><br><span class="line">                "S": "2021-12-09T01:15:25.334965"</span><br><span class="line">            &#125;,</span><br><span class="line">            "status": &#123;</span><br><span class="line">                "S": "PUBLISHED"</span><br><span class="line">            &#125;,</span><br><span class="line">            "valid_to": &#123;</span><br><span class="line">                "S": "2022-01-31T23:00"</span><br><span class="line">            &#125;,</span><br><span class="line">            "id": &#123;</span><br><span class="line">                "S": "b2c60f43-a81c-4363-a68a-dfe7682182d7"</span><br><span class="line">            &#125;,</span><br><span class="line">            "description": &#123;</span><br><span class="line">                "S": "Hit the road Jack!"</span><br><span class="line">            &#125;,</span><br><span class="line">            "title": &#123;</span><br><span class="line">                "S": "Novated Lease"</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">...</span><br><span class="line">    ],</span><br><span class="line">    "Count": 223,</span><br><span class="line">    "ScannedCount": 223,</span><br><span class="line">    "ConsumedCapacity": null</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Extract / transform JSON data:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ cat tiles.json | jq '[.Items[] | &#123; id: .id.S, title: .title.S, description: .description.S, status: .status.S, valid_from: .valid_from.S, valid_to: .valid_to.S &#125;]' &gt; tiles-extracted.json</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    "id": "b2c60f43-a81c-4363-a68a-dfe7682182d7",</span><br><span class="line">    "title": "Novated Lease",</span><br><span class="line">    "description": "Hit the road Jack!",</span><br><span class="line">    "status": "PUBLISHED",</span><br><span class="line">    "valid_from": "2021-12-09T01:00",</span><br><span class="line">    "valid_to": "2022-01-31T23:00"</span><br><span class="line">  &#125;,</span><br><span class="line">...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>Convert JSON data into CSV:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ cat tiles-extracted.json | jq -r '(.[0] | keys_unsorted) as $keys | $keys, map([.[ $keys[] ]])[] | @csv' &gt; tiles.csv</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li>How to convert arbitrary simple JSON to CSV using jq, <a href="https://stackoverflow.com/questions/32960857/how-to-convert-arbitrary-simple-json-to-csv-using-jq" target="_blank" rel="noopener">https://stackoverflow.com/questions/32960857/how-to-convert-arbitrary-simple-json-to-csv-using-jq</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Step by step convert exported JSON data from AWS DynamoDB table into CSV, by using &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Export all the data from AWS D
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Customise VS Code settings and keybindings with Geddski macros</title>
    <link href="https://terrencemiao.github.io/blog/2021/07/30/Customise-VS-Code-settings-and-keybindings-with-Geddski-macros/"/>
    <id>https://terrencemiao.github.io/blog/2021/07/30/Customise-VS-Code-settings-and-keybindings-with-Geddski-macros/</id>
    <published>2021-07-30T10:28:19.000Z</published>
    <updated>2021-07-30T10:52:12.054Z</updated>
    
    <content type="html"><![CDATA[<p>In IntelliJ IDEA, you can comment a line, the cursor is moved to the next line automatically. This is a very easy way to comment several lines. However, in VS Code, default behaviour is that the cursor stays on the same line.</p><p>To copy the behavior of IntelliJ, go with:</p><ul><li><p>Install <code>macros</code> author by <strong>geddski</strong> in VS Code.</p></li><li><p>Edit <code>settings.json</code> and add:</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;macros&quot;: &#123;</span><br><span class="line">    &quot;commentDown&quot;: [</span><br><span class="line">        &quot;editor.action.commentLine&quot;,</span><br><span class="line">        &quot;cursorDown&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>Edit <code>keybindings.json</code> and add:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;key&quot;: &quot;cmd+/&quot;,</span><br><span class="line">    &quot;command&quot;: &quot;macros.commentDown&quot;,</span><br><span class="line">    &quot;when&quot;: &quot;editorTextFocus &amp;&amp; !editorReadonly&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;In IntelliJ IDEA, you can comment a line, the cursor is moved to the next line automatically. This is a very easy way to comment several 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Export and Import AWS DynamoDB data</title>
    <link href="https://terrencemiao.github.io/blog/2021/07/06/Export-and-Import-AWS-DynamoDB-data/"/>
    <id>https://terrencemiao.github.io/blog/2021/07/06/Export-and-Import-AWS-DynamoDB-data/</id>
    <published>2021-07-06T05:07:34.000Z</published>
    <updated>2021-07-06T05:47:00.397Z</updated>
    
    <content type="html"><![CDATA[<p>A simple, straightforward way export and import AWS DynamoDB table‚Äôs data with AWS CLI and a few scripts.</p><p>At first, export all the data from AWS DynamoDB table:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ aws --profile production dynamodb scan --table-name tile-event &gt; tile-event-export.json</span><br></pre></td></tr></table></figure><p>Convert a list of items/records (DynamoDB JSON) into individual <strong>PutRequest</strong> JSON with <code>jq</code>.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ cat tile-event-export.json | jq '&#123;"Items": [.Items[] | &#123;PutRequest: &#123;Item: .&#125;&#125;]&#125;' &gt; tile-event-import.json</span><br></pre></td></tr></table></figure><p>Transform the data if necessary:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ sed 's/tile-images-prod/tile-images-pdev/g' tile-event-import.json &gt; tile-event-import-transformed.json</span><br></pre></td></tr></table></figure><p>Split all requests into <strong>25</strong> requests per file, with <code>jq</code> and <code>awk</code> (Note: There are some restriction with AWS DynamoDB batch-write-item request - The BatchWriteItem operation can contain up to <strong>25</strong> individual PutItem and DeleteItem requests and can write up to 16 MB of data. The maximum size of an individual item is 400 KB.)</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ cat tile-event-processed.awk</span><br><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/awk -f</span></span><br><span class="line"></span><br><span class="line"><span class="meta">NR%</span><span class="bash">25==1 &#123;</span></span><br><span class="line">  x="tile-event-import-processed-"++i".json";</span><br><span class="line">  print "&#123;" &gt; x</span><br><span class="line">  print "  \"tile-event\": [" &gt; x</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  printf "    %s", $0 &gt; x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">NR%</span><span class="bash">25!=0 &#123;</span></span><br><span class="line">  print "," &gt; x</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">NR%</span><span class="bash">25==0 &#123;</span></span><br><span class="line">  print "" &gt; x</span><br><span class="line">  print "  ]" &gt; x</span><br><span class="line">  print "&#125;" &gt; x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ùúÜ jq -c '.Items[]' tile-event-import-transformed.json | ./tile-event-processed.awk</span><br></pre></td></tr></table></figure><p>Import all <strong>22</strong> processed JSON files into DynamoDB table:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">for</span> f <span class="keyword">in</span> tile-event-import-processed-&#123;1..22&#125;.json; <span class="keyword">do</span> \</span></span><br><span class="line">    echo $f; \</span><br><span class="line">    aws --profile development dynamodb batch-write-item --request-items file://$f; \</span><br><span class="line">  done</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A simple, straightforward way export and import AWS DynamoDB table‚Äôs data with AWS CLI and a few scripts.&lt;/p&gt;
&lt;p&gt;At first, export all the
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Get and read logs from AWS CloudWatch with saw</title>
    <link href="https://terrencemiao.github.io/blog/2021/06/04/Get-and-read-logs-from-AWS-CloudWatch-with-saw/"/>
    <id>https://terrencemiao.github.io/blog/2021/06/04/Get-and-read-logs-from-AWS-CloudWatch-with-saw/</id>
    <published>2021-06-04T03:49:02.000Z</published>
    <updated>2021-06-04T03:49:25.863Z</updated>
    
    <content type="html"><![CDATA[<p>For all the people painfully read logs on AWS CloudWatch console, <a href="https://github.com/TylerBrock/saw" target="_blank" rel="noopener">saw</a> is your friend.</p><p>Get CloudWatch log groups start with <code>paradise-api</code>:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ saw groups --profile ap-prod --prefix paradise-api</span><br><span class="line">paradise-api-CloudFormationLogs-mwwmzgYOtbcB</span><br></pre></td></tr></table></figure><p>Get last 2 hours logs for <code>paradise-api</code> from CloudWatch, with <a href="https://github.com/TylerBrock/saw" target="_blank" rel="noopener">saw</a>:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ saw get --profile ap-prod --start -2h paradise-api-CloudFormationLogs-mwwmzgYOtbcB --prefix docker | jq .log | sed 's/\\\n"$//; s/^"//'</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;For all the people painfully read logs on AWS CloudWatch console, &lt;a href=&quot;https://github.com/TylerBrock/saw&quot; target=&quot;_blank&quot; rel=&quot;noopen
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AWS EC2 CloudFormation templates in subnets</title>
    <link href="https://terrencemiao.github.io/blog/2021/05/11/AWS-EC2-CloudFormation-templates-in-subnets/"/>
    <id>https://terrencemiao.github.io/blog/2021/05/11/AWS-EC2-CloudFormation-templates-in-subnets/</id>
    <published>2021-05-11T13:02:15.000Z</published>
    <updated>2021-05-11T13:12:28.378Z</updated>
    
    <content type="html"><![CDATA[<p>AWS EC2 instance CloudFormation templates in Public Tier and App Tier:</p><script src="https://gist.github.com/TerrenceMiao/58396c567574ed14c39dfc02ce78367f.js"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;AWS EC2 instance CloudFormation templates in Public Tier and App Tier:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/TerrenceMiao/58396c567574
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Read environment variables of a process in Linux</title>
    <link href="https://terrencemiao.github.io/blog/2021/04/30/Read-environment-varibles-of-a-process-in-Linux/"/>
    <id>https://terrencemiao.github.io/blog/2021/04/30/Read-environment-varibles-of-a-process-in-Linux/</id>
    <published>2021-04-30T12:44:39.000Z</published>
    <updated>2021-04-30T12:59:31.499Z</updated>
    
    <content type="html"><![CDATA[<p>When try to get the content of any /proc/<em>PID</em>/environ file in more readable format, you can:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/proc/[pid]/environ</span><br><span class="line">      This file contains the environment for the process.  The entries</span><br><span class="line">      are separated by null bytes ('\0'), and there may be a null byte</span><br><span class="line">      at the end.</span><br></pre></td></tr></table></figure><p>A simple way is to apply <code>xargs -0 -L1 -a</code> on it:</p><ul><li><code>-0</code> - read null-delimited lines,</li><li><code>-L1</code> - read one line per execution of command</li><li><code>-a</code> - file read lines from file</li></ul><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ps -aef</span></span><br><span class="line">10101     3629  3589  0 Apr27 ?        00:00:00 /bin/bash bin/start</span><br><span class="line">10101     3670  3629  0 Apr27 ?        00:00:00 /bin/bash bin/start-tomcat</span><br><span class="line">10101     3671  3670  0 Apr27 ?        00:07:36 /usr/lib/jvm/java-11-amazon-corretto.x86_64/bin/java -Djava.util.logging.config.file=/usr/local/tomcat/conf/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat /proc/3629/environ</span></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binHOSTNAME=27c44e8a5c7cJAVA_HOME=/usr/lib/jvm/java-11-amazon-corretto.x86_64HOME=/usr/local/tomcat</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> xargs -0 -L1 -a /proc/3629/environ</span></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">HOSTNAME=27c44e8a5c7c</span><br><span class="line">JAVA_HOME=/usr/lib/jvm/java-11-amazon-corretto.x86_64</span><br><span class="line">HOME=/usr/local/tomcat</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;When try to get the content of any /proc/&lt;em&gt;PID&lt;/em&gt;/environ file in more readable format, you can:&lt;/p&gt;
&lt;figure class=&quot;highlight console
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AWS KMS decrypt for base64 encoded input</title>
    <link href="https://terrencemiao.github.io/blog/2021/04/30/AWS-KMS-decrypt-for-base64-encoded-input/"/>
    <id>https://terrencemiao.github.io/blog/2021/04/30/AWS-KMS-decrypt-for-base64-encoded-input/</id>
    <published>2021-04-30T09:22:55.000Z</published>
    <updated>2021-04-30T09:31:05.306Z</updated>
    
    <content type="html"><![CDATA[<p>With AWS CLI version 2:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ aws --version</span><br><span class="line">aws-cli/2.1.17 Python/3.7.4 Darwin/20.3.0 exe/x86_64 prompt/off</span><br></pre></td></tr></table></figure><p>Encrypt with AWS KMS key:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ aws kms encrypt --profile personal \</span><br><span class="line">  --key-id e2695b79-cbe0-4c16-aa5e-b7dbf52df1f9 \</span><br><span class="line">  --plaintext "string-to-encrypt" \</span><br><span class="line">  --output text \</span><br><span class="line">  --query CiphertextBlob \</span><br><span class="line">  --cli-binary-format raw-in-base64-out</span><br><span class="line">AQICAHjbJrIPgME ... lILuBSUdA==</span><br></pre></td></tr></table></figure><p>Decrypt with AWS KMS key:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ echo "AQICAHjbJrIPgME ... lILuBSUdA==" | base64 -D | \</span><br><span class="line">  aws kms decrypt --profile personal \</span><br><span class="line">  --ciphertext-blob fileb:///dev/stdin \</span><br><span class="line">  --output text \</span><br><span class="line">  --query Plaintext | base64 -D</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li>cli_binary_format, _<a href="https://docs.aws.amazon.com/credref/latest/refdocs/setting-global-cli_binary_format.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/credref/latest/refdocs/setting-global-cli_binary_format.html</a>_</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;With AWS CLI version 2:&lt;/p&gt;
&lt;figure class=&quot;highlight console&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>A Modern Architecture Application</title>
    <link href="https://terrencemiao.github.io/blog/2021/03/02/A-Modern-Architecture-Application/"/>
    <id>https://terrencemiao.github.io/blog/2021/03/02/A-Modern-Architecture-Application/</id>
    <published>2021-03-02T05:55:13.000Z</published>
    <updated>2021-03-02T23:32:00.200Z</updated>
    
    <content type="html"><![CDATA[<p>RAD (Rapid Application Development) of a Serverless application ‚ÄúNotification Service‚Äù on modern technologies, e.g. <code>AWS CDK</code> &amp; <code>SAM</code>, <code>AWS Step Functions</code>, <code>TypeScript</code>, <code>VS Code</code>, Open API Top Down Design and Test Driven Development, in order to rapidly build a prototype, or a POC, verify and test some technologies and approaches.</p><p>Request Handler =&gt; Step Functions (orchestration for Lambda functions, represents a single centralized executable business process, outsources low level operations like <strong>retry</strong> / <strong>exception catch and handle</strong>. Another choice is SNS) =&gt; Service Providers</p><p>Have experienced of <code>Terraform</code>, <code>Serverless</code>, <code>AWS SAM</code> ‚Ä¶ now this time based on code over configuration principle, what you get is flexibility, predictability and more control. You focus on code you tell the tools what steps it has to complete directly. At the end of day, it is a simple matter of separation of concerns and single responsibility principle.</p><p>‚Ä¢ <code>VS Code</code> for API Spec editing</p><p>‚Ä¢ <code>Postman</code> API, Environment and Mock server, for QA team, then switch to real service in DEV/TEST environment</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ npm run openapi</span><br></pre></td></tr></table></figure><p>‚Ä¢ <code>openapi-generator</code> generates model classes; <code>typescript-json-validator</code> generates JSON Schema and validator</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ openapi-generator generate -g typescript-node -i Notification\ API\ openapi.json -o Notification\ API\ generated</span><br><span class="line">ùúÜ npx typescript-json-validator notificationRequest.ts NotificationRequest</span><br></pre></td></tr></table></figure><p>‚Ä¢ Onboard on Kong / API Manager, <em><a href="https://konghq.com/kong/" target="_blank" rel="noopener">https://konghq.com/kong/</a></em></p><p>‚Ä¢ <code>CDK</code>, is based on CloudFormation but abstract layer on the top of it. It can generates CloudFormation template file <code>template.yaml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ cdk synth --no-staging &gt; template.yaml</span><br></pre></td></tr></table></figure><p>‚Ä¢ Demo of local run and debug lambda, with background TSC watch process</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ npm run watch</span><br><span class="line"></span><br><span class="line">ùúÜ sam local invoke RequestNotification9F9F3C31 -e samples/api-gateway-notification-event.json</span><br><span class="line">ùúÜ sam local invoke RequestNotification9F9F3C31 -e samples/api-gateway-notification-event.json -d 5858</span><br></pre></td></tr></table></figure><p>Data validation to make data integrity unbreachable will take a lot time.</p><p><code>ajv</code> framework and performance benchmark, <em><a href="https://github.com/ebdrup/json-schema-benchmark" target="_blank" rel="noopener">https://github.com/ebdrup/json-schema-benchmark</a></em></p><p>‚Ä¢ Code lint with <code>eslint</code> and <code>prettier</code> and automatically correction</p><p>‚Ä¢ Code commit rule enforcement</p><p>‚Ä¢ Change code and deploy AWS stack by <code>CDK</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ cdk deploy --require-approval never --profile dev-cicd</span><br></pre></td></tr></table></figure><p>‚Ä¢ Behavior Driven Test Framework Jest, <em><a href="https://github.com/facebook/jest" target="_blank" rel="noopener">https://github.com/facebook/jest</a></em>, 2x / 3x faster than Karma, with code coverage, easy mocking</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ npm t</span><br></pre></td></tr></table></figure><p>‚Ä¢ Automatically generate application changelog and release notes</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ npm run release:minor</span><br></pre></td></tr></table></figure><p>‚Ä¢ Automatically generate application document</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ npm run docs</span><br></pre></td></tr></table></figure><p>‚Ä¢ AWS resources created by <code>CDK</code></p><p>‚Ä¢ Not Mono Repo app, which multiple projects all under one giant Repo</p><p>‚Ä¢ ONE <code>AWS Layers</code> put all dependent NPM libs and shared code into; size of Lambda functions, readability</p><p>‚Ä¢ <code>AWS EventBridge</code> tro trigger and send event to Request Handler, for scheduling task</p><p>‚Ä¢ Health Check, with Service Monitoring Dashboard, verify dependencies at the endpoints, keep Lambda warming up</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ curl https://c81234xdae8w1a9.execute-api.ap-southeast-2.amazonaws.com/health</span><br></pre></td></tr></table></figure><p>Cloud computing and Serverless architecture let developers in fast lane for Application Development. Right now, there are so many low hanging fruit to pick up.</p><p>As developers, we should not always think about our comfort zone, we need to think about people who take over your work, think about BAU team to support the application. The codebase is not about you, but about the value that your code brings to others, and the organization that you work for.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;RAD (Rapid Application Development) of a Serverless application ‚ÄúNotification Service‚Äù on modern technologies, e.g. &lt;code&gt;AWS CDK&lt;/code&gt; 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Why Repairable Is Important</title>
    <link href="https://terrencemiao.github.io/blog/2020/11/30/Why-Repairable-Is-Important/"/>
    <id>https://terrencemiao.github.io/blog/2020/11/30/Why-Repairable-Is-Important/</id>
    <published>2020-11-30T00:38:56.000Z</published>
    <updated>2020-11-30T00:45:26.658Z</updated>
    
    <content type="html"><![CDATA[<p>Fix our destructive and throwaway economy, save our planet by making products both repairable, durable, environmentally friendly, and by defending our Right to Repair.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/qSmFI6J7eRo" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>This is my second video created and composed by Apple Final Cut Pro X - Why Repairable Is Important <a href="https://www.youtube.com/watch?v=qSmFI6J7eRo" target="_blank" rel="noopener">https://www.youtube.com/watch?v=qSmFI6J7eRo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Fix our destructive and throwaway economy, save our planet by making products both repairable, durable, environmentally friendly, and by 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Bring back MagSafe</title>
    <link href="https://terrencemiao.github.io/blog/2020/11/25/Bring-back-MagSafe/"/>
    <id>https://terrencemiao.github.io/blog/2020/11/25/Bring-back-MagSafe/</id>
    <published>2020-11-25T00:08:16.000Z</published>
    <updated>2020-11-25T00:25:02.085Z</updated>
    
    <content type="html"><![CDATA[<p>My first published video, created by Apple Final Cut Pro, on YouTube for official channel title <strong>Bring back MagSafe</strong> regard to solution that bring one of the most innovative design from Apple, back to MacBook Pro, iPad ‚Ä¶ and Android phones <a href="https://www.youtube.com/watch?v=yvkJR4Y0FK0" target="_blank" rel="noopener">https://www.youtube.com/watch?v=yvkJR4Y0FK0</a></p><iframe width="560" height="315" src="https://www.youtube.com/embed/yvkJR4Y0FK0" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><ul><li><p>WSKEN SHARK X4 TYPE-C TO TYPE-C PD 100W QUICK CHARGE MAGNETIC CABLE: <a href="http://wsken.my/WSKEN-Shark-X4-Type-C-To-Type-C-PD-100W-Quick-Charge-Magnetic-Cable" target="_blank" rel="noopener">http://wsken.my/WSKEN-Shark-X4-Type-C-To-Type-C-PD-100W-Quick-Charge-Magnetic-Cable</a></p></li><li><p>WSKEN SHARK X5 TYPE-C 5A QUICK CHARGE MAGNETIC CABLE: <a href="http://wsken.my/WSKEN-Shark-X5-Type-C-5A-Quick-Charge-Magnetic-Cable" target="_blank" rel="noopener">http://wsken.my/WSKEN-Shark-X5-Type-C-5A-Quick-Charge-Magnetic-Cable</a></p></li><li><p>WSKEN Official Store on AliExpress: <a href="https://www.aliexpress.com/store/3018058" target="_blank" rel="noopener">https://www.aliexpress.com/store/3018058</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;My first published video, created by Apple Final Cut Pro, on YouTube for official channel title &lt;strong&gt;Bring back MagSafe&lt;/strong&gt; regar
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Risk Management for CI/CD processes</title>
    <link href="https://terrencemiao.github.io/blog/2020/10/26/Risk-Management-for-CI-CD-processes/"/>
    <id>https://terrencemiao.github.io/blog/2020/10/26/Risk-Management-for-CI-CD-processes/</id>
    <published>2020-10-26T05:55:13.000Z</published>
    <updated>2020-10-26T06:57:07.737Z</updated>
    
    <content type="html"><![CDATA[<p>Consider a full development and deployment cycle, and the potential risks involved during the different stages in CDP (CI / Continuous Integration, CD / Continuous Delivery, CDP / Continuous Deployment):</p><ul><li>Code</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>Individual Developer</td></tr><tr><td></td><td>Pair Programming Mentor</td></tr><tr><td></td><td>DBA</td></tr><tr><td></td><td>Security Team</td></tr><tr><td>Failure Points</td><td>Logic flaws</td></tr><tr><td></td><td>Security flaws</td></tr><tr><td></td><td>Code standards issues</td></tr><tr><td>Safeguards</td><td>Test Driven Development</td></tr><tr><td></td><td>Red/Green/Refactor</td></tr><tr><td></td><td>Linting tools</td></tr><tr><td></td><td>Testing Docker containers</td></tr><tr><td></td><td>Pair programming</td></tr><tr><td></td><td>Query analysis</td></tr><tr><td></td><td>Static code analysis</td></tr></tbody></table><ul><li>Commit</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>Security Team Member for sign-off</td></tr><tr><td></td><td>Engineering Team Lead for sign-off</td></tr><tr><td>Failure Points</td><td>Force pushes</td></tr><tr><td></td><td>Merge conflicts</td></tr><tr><td>Safeguards</td><td>Master branch protections</td></tr><tr><td></td><td>3 member sign-off before master merge</td></tr><tr><td></td><td>Commit hooks</td></tr></tbody></table><ul><li>Test</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>Individual Developer</td></tr><tr><td></td><td>QA Team</td></tr><tr><td>Failure Points</td><td>Broken tests</td></tr><tr><td></td><td>Stale tests</td></tr><tr><td></td><td>False positive tests</td></tr><tr><td>Safeguards</td><td>Weekly failure testing triage meeting to catch broken tests</td></tr><tr><td></td><td>Daily cron runs of test suite against mock prod environment</td></tr></tbody></table><ul><li>Deployment</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>SysOps Team</td></tr><tr><td></td><td>Individual Developers</td></tr><tr><td></td><td>Support Team</td></tr><tr><td></td><td>Customers</td></tr><tr><td>Failure Points</td><td>Broken deployments</td></tr><tr><td></td><td>Dropped customer traffic</td></tr><tr><td>Safeguards</td><td>Blue/Green deployment</td></tr><tr><td></td><td>Traffic re-routing</td></tr><tr><td></td><td>Pre deployment spare instance warmup</td></tr><tr><td></td><td>Communicate out to support in order to verify proper staffing levels</td></tr></tbody></table><ul><li>Runtime</li></ul><table><thead><tr><th>Role</th><th>Details</th></tr></thead><tbody><tr><td>Stakeholders</td><td>Security Team</td></tr><tr><td></td><td>SysOps Team</td></tr><tr><td></td><td>Engineering Teams</td></tr><tr><td></td><td>Support Team</td></tr><tr><td></td><td>Customers</td></tr><tr><td>Failure Points</td><td>High resource usage</td></tr><tr><td></td><td>Slow queries</td></tr><tr><td></td><td>Malicious actors</td></tr><tr><td></td><td>MProvider downtime</td></tr><tr><td>Safeguards</td><td>Communicate out to support for new feature awareness and appropriate categories for issues regarding the component</td></tr><tr><td></td><td>System resource alarms for various metrics and slow DB log alerts</td></tr><tr><td></td><td>Instant maintenance page switchover capabilities</td></tr><tr><td></td><td>Status page on redundant providers</td></tr><tr><td></td><td>Application firewalls</td></tr><tr><td></td><td>Database replicas</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Consider a full development and deployment cycle, and the potential risks involved during the different stages in CDP (CI / Continuous In
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AWS CloudWatch Metrics Example</title>
    <link href="https://terrencemiao.github.io/blog/2020/10/13/AWS-CloudWatch-Metrics-example/"/>
    <id>https://terrencemiao.github.io/blog/2020/10/13/AWS-CloudWatch-Metrics-example/</id>
    <published>2020-10-13T12:29:39.000Z</published>
    <updated>2020-10-13T12:41:28.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AWS-CloudWatch-Metrics"><a href="#AWS-CloudWatch-Metrics" class="headerlink" title="AWS CloudWatch Metrics"></a>AWS CloudWatch Metrics</h2><p>The interface of Metrics in AWS CloudWatch console:</p><p><img src="/blog/img/AWS%20CloudWatch%20-%20Metrics.png" alt="AWS CloudWatch - Metrics" title="AWS CloudWatch - Metrics"></p><p>The URL:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://ap-southeast-2.console.aws.amazon.com/cloudwatch/home?region=ap-southeast-2#metricsV2:graph=~(metrics~(~(~'AWS*2fRoute53Resolver~'InboundQueryVolume)~(~'.~'OutboundQueryVolume))~view~'timeSeries~stacked~false~region~'ap-southeast-2~stat~'Sum~period~86400~start~'-P28D~end~'P0D);query=~'*7bAWS*2fRoute53Resolver*7d</span><br></pre></td></tr></table></figure><p>Metrics source:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "metrics": [</span><br><span class="line">        [ "AWS/Route53Resolver", "InboundQueryVolume" ],</span><br><span class="line">        [ ".", "OutboundQueryVolume" ]</span><br><span class="line">    ],</span><br><span class="line">    "view": "timeSeries",</span><br><span class="line">    "stacked": false,</span><br><span class="line">    "region": "ap-southeast-2",</span><br><span class="line">    "stat": "Sum",</span><br><span class="line">    "period": 86400,</span><br><span class="line">    "title": "Test"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;AWS-CloudWatch-Metrics&quot;&gt;&lt;a href=&quot;#AWS-CloudWatch-Metrics&quot; class=&quot;headerlink&quot; title=&quot;AWS CloudWatch Metrics&quot;&gt;&lt;/a&gt;AWS CloudWatch Metri
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Creating AWS Lambda with AWS SAM</title>
    <link href="https://terrencemiao.github.io/blog/2020/02/14/Creating-AWS-Lambda-with-AWS-SAM/"/>
    <id>https://terrencemiao.github.io/blog/2020/02/14/Creating-AWS-Lambda-with-AWS-SAM/</id>
    <published>2020-02-14T01:12:06.000Z</published>
    <updated>2020-02-15T04:53:42.412Z</updated>
    
    <content type="html"><![CDATA[<p>This is a simple Lambda with REST API and SNS enabled. Firstly, have a look the Nodejs script:</p><script src="https://gist.github.com/TerrenceMiao/7d60e5c79f9b93c362bb9a5ff40f67c3.js"></script><p>AWS SAM template yaml file:</p><script src="https://gist.github.com/TerrenceMiao/3512439f22c427e70db8cadc5cc83846.js"></script><p>Generate AWS CloudFormation yaml file and package / zip / create an artefact (need to create AWS S3 bucket <code>hello-world-tub</code> in advance):</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ sam package --profile personal --template-file template.yml --output-template-file cloudFormation.yml --s3-bucket hello-sam-tub</span><br><span class="line">Uploading to 7431f83ac979bfccc26980049807e595  1461 / 1461.0  (100.00%)</span><br><span class="line"></span><br><span class="line">Successfully packaged artifacts and wrote output template to file cloudFormation.yml.</span><br><span class="line">Execute the following command to deploy the packaged template</span><br><span class="line">sam deploy --template-file /Users/terrence/Projects/hello-sam/cloudFormation.yml --stack-name &lt;YOUR STACK NAME&gt;</span><br></pre></td></tr></table></figure><p>Can also create artefact file with <code>zip</code> command, and upload zip file into AWS S3 bucket:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ zip hello-sam.zip README.md index.js template.yml</span><br></pre></td></tr></table></figure><p>What AWS CloudFormation yaml file looks like:</p><script src="https://gist.github.com/TerrenceMiao/a0ffabc5e118b78dfb21b5cee814e44c.js"></script><p>Deploy application‚Äôs AWS CloudFormation stack with AWS SAM command:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ sam deploy --profile personal --template-file cloudFormation.yml --stack-name hello-sam --capabilities CAPABILITY_IAM</span><br><span class="line"></span><br><span class="line">Deploying with following values</span><br><span class="line">===============================</span><br><span class="line">Stack name                 : hello-sam</span><br><span class="line">Region                     : None</span><br><span class="line">Confirm changeset          : False</span><br><span class="line">Deployment s3 bucket       : None</span><br><span class="line">Capabilities               : ["CAPABILITY_IAM"]</span><br><span class="line">Parameter overrides        : &#123;&#125;</span><br><span class="line"></span><br><span class="line">Initiating deployment</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">Waiting for changeset to be created..</span><br><span class="line"></span><br><span class="line">CloudFormation stack changeset</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Operation                                                                                     LogicalResourceId                                                                             ResourceType</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">+ Add                                                                                         HelloWorldFunctionHelloWorldApiPermissionProd                                                 AWS::Lambda::Permission</span><br><span class="line">+ Add                                                                                         HelloWorldFunctionRole                                                                        AWS::IAM::Role</span><br><span class="line">+ Add                                                                                         HelloWorldFunction                                                                            AWS::Lambda::Function</span><br><span class="line">+ Add                                                                                         HelloWorldTopic                                                                               AWS::SNS::Topic</span><br><span class="line">+ Add                                                                                         ServerlessRestApiDeployment79454cea13                                                         AWS::ApiGateway::Deployment</span><br><span class="line">+ Add                                                                                         ServerlessRestApiProdStage                                                                    AWS::ApiGateway::Stage</span><br><span class="line">+ Add                                                                                         ServerlessRestApi                                                                             AWS::ApiGateway::RestApi</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Changeset created successfully. arn:aws:cloudformation:ap-southeast-2:123456789012:changeSet/samcli-deploy1581737165/48e53ff2-1b50-45d8-bbfd-97652f20d967</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2020-02-15 14:26:10 - Waiting for stack create/update to complete</span><br><span class="line"></span><br><span class="line">CloudFormation events from changeset</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">ResourceStatus                                                        ResourceType                                                          LogicalResourceId                                                     ResourceStatusReason</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::SNS::Topic                                                       HelloWorldTopic                                                       Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::SNS::Topic                                                       HelloWorldTopic                                                       -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::IAM::Role                                                        HelloWorldFunctionRole                                                Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::IAM::Role                                                        HelloWorldFunctionRole                                                -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::Lambda::Function                                                 HelloWorldFunction                                                    Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::Lambda::Function                                                 HelloWorldFunction                                                    -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::ApiGateway::RestApi                                              ServerlessRestApi                                                     Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::ApiGateway::RestApi                                              ServerlessRestApi                                                     -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::Lambda::Permission                                               HelloWorldFunctionHelloWorldApiPermissionProd                         Resource creation Initiated</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::ApiGateway::Deployment                                           ServerlessRestApiDeployment79454cea13                                 Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::ApiGateway::Deployment                                           ServerlessRestApiDeployment79454cea13                                 -</span><br><span class="line">CREATE_IN_PROGRESS                                                    AWS::ApiGateway::Stage                                                ServerlessRestApiProdStage                                            Resource creation Initiated</span><br><span class="line">CREATE_COMPLETE                                                       AWS::ApiGateway::Stage                                                ServerlessRestApiProdStage                                            -</span><br><span class="line">CREATE_COMPLETE                                                       AWS::Lambda::Permission                                               HelloWorldFunctionHelloWorldApiPermissionProd                         -</span><br><span class="line">CREATE_COMPLETE                                                       AWS::CloudFormation::Stack                                            hello-sam                                                             -</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Successfully created/updated stack - hello-sam in None</span><br></pre></td></tr></table></figure><p>NOTE: The <code>--capabilities CAPABILITY_IAM</code> option is necessary to authorise your stack to create IAM roles, which SAM applications do by default.</p><p>After application deployed, user subscribes notification will receive email titled - <strong>AWS Notification - Subscription Confirmation</strong> After confirmation, user will receive an email every time API is invoked.</p><p>Now log on AWS Console, have a look the resources this Lambda application used in CloudFormation, S3 Bucket, Lambda, IAM, SNS, CloudWatch, API Gateway.</p><p>After this Lambda application successfully deployed into AWS, you will receive an email asking whether you want to subscribe the SNS topic. You can also unsubscribe the SNS topic. You can manually test Lambda function in AWS Console.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li>Creating AWS Lambda Applications With SAM by <strong>Daniel Weibel</strong>, <em><a href="https://itnext.io/creating-aws-lambda-applications-with-sam-dd13258c16dd" target="_blank" rel="noopener">https://itnext.io/creating-aws-lambda-applications-with-sam-dd13258c16dd</a></em></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is a simple Lambda with REST API and SNS enabled. Firstly, have a look the Nodejs script:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/T
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2019: Year in Review</title>
    <link href="https://terrencemiao.github.io/blog/2019/12/29/2019-Year-in-Review/"/>
    <id>https://terrencemiao.github.io/blog/2019/12/29/2019-Year-in-Review/</id>
    <published>2019-12-29T04:24:05.000Z</published>
    <updated>2019-12-31T01:38:09.720Z</updated>
    
    <content type="html"><![CDATA[<p>2019 Âπ¥ÊòØËøáÂéªÂçÅÂπ¥‰∏≠ÊúÄÂ∑ÆÁöÑ‰∏ÄÂπ¥Ôºå‰ΩÜÊàñËÆ∏‰ºöÊòØÊú™Êù•ÂçÅÂπ¥‰∏≠ÊúÄÂ•ΩÁöÑ‰∏ÄÂπ¥„ÄÇ</p><p><img src="/blog/img/Year%202019%20-%2001.jpg" alt="Year 2019 - 01" title="Year 2019 - 01"></p><p>Âõæ 1ÔºöËøô‰∏çÊòØ‰º†ËØ¥ÔºåËøôÊòØ reality.</p><p>1 Êúà 24 Êó•ÔºåÊúâËá™Â™í‰ΩìÂèëÂá∫ËØÅÁõë‰ºö‰∫∫‰∫ãÂèòÂä®ÁöÑ‚ÄúËôöÂÅá‚ÄùÊ∂àÊÅØÔºåÂºïËµ∑ÂÖ≥Ê≥®„ÄÇ‰∏≠ÂõΩËØÅÁõë‰ºöÊúâÂÖ≥‰∫∫Â£´ÊåáÂá∫ÔºåËá™Â™í‰Ωì‰∏çÊòØÊ≥ïÂ§ñ‰πãÂú∞ÔºåÂØπ‰∫é‰∏çË¥üË¥£‰ªªÁöÑËôöÂÅá‰ø°ÊÅØ‰º†Êí≠ÔºåÂ∫îÂΩì‰æùÊ≥ï‰æùËßÑÂ§ÑÁêÜ„ÄÇ</p><p>1 Êúà 26 Êó•Ôºå‰∏≠ÂõΩÂÆòÊñπÂÆ£Â∏ÉË¥üË¥£ËÇ°Â∏ÇÁõëÁÆ°ÁöÑ‰∏≠ÂõΩËØÅÁõë‰ºö‰∏ªÂ∏≠Êç¢‰∫∫„ÄÇ‰∏âÂπ¥ÂâçÂú®‰∏≠ÂõΩËÇ°Â∏ÇÈÅ≠ÈÅá‚ÄúÁÅæÈöæÊÄßÈáçÂàõ‚ÄùÁöÑËÉåÊôØ‰∏ãÊé•Áè≠ÁöÑÂàòÂ£´‰ΩôÁªìÊùü‰ªªÊúüÔºåÂÖ∂ËÅåÂä°Áî±‰∏≠ÂõΩÂè¶‰∏ÄÂõΩÊúâÈì∂Ë°åÂ∑•ÂïÜÈì∂Ë°åËë£‰∫ãÈïøÊòì‰ºöÊª°Êé•‰ªª„ÄÇ</p><p> ‚ÄúË∞£Ë®Ä‚ÄùÂ∞±ÊòØ‚Äú<strong>ÈÅ•ÈÅ•È¢ÜÂÖàÁöÑÈ¢ÑË®Ä</strong>‚Äù„ÄÇ</p><p>ËÄÅÂàòÁöÑËøôÂº†ÈÖçÂõæÔºåÊòØÂú® salute ‰∏≠ÂõΩËØÅÁõë‰ºöÔºåËøòÊòØ‰∏≠ÂõΩËÇ°Ê∞ëÔºü</p><p>‚ÄúÈóÆÂêõËÉΩÊúâÂá†Â§öÊÑÅÔºåÊÅ∞‰ººÊª°‰ªì‰∏≠Áü≥Ê≤π„ÄÇÂ¶ÇËã•ÂΩìÂàùÊ≤°Ââ≤ËÇâÔºåËÄå‰ªäÊÉ≥Êù•ÊÑÅÊõ¥ÊÑÅ„ÄÇ‚Äù ËøôÊòØ 8 Êúà 26 Êó•Êñ∞ÈóªÂ§¥Êù°„ÄÇ‰∏≠Áü≥Ê≤πËÇ°‰ª∑Êî∂‰∫é 6.02 ÂÖÉÔºåÂà∑Êñ∞ÂéÜÂè≤Êñ∞‰Ωé„ÄÇ‰∏≠Áü≥Ê≤πËÇ°‰ª∑ÊúÄÈ´òÊó∂ 48 ÂÖÉÔºå‰∏äÂ∏Ç 12 Âπ¥ÔºåËí∏Âèë‰∫Ü 7 ‰∏á‰∫øÔºå‰ªéÂ∏ÇÂÄº‰∏ÄÂì•Âà∞‚ÄúÂ•óÁâ¢Á¨¨‰∏ÄËÇ°‚Äù„ÄÇ7 ‰∏á‰∫øÁõ∏ÂΩì‰∫éË∑åÊéâ 1 ‰∏™ËãπÊûúÔºåÊàñ 2 ‰∏™‰øÑÁΩóÊñØËÇ°Â∏ÇÁöÑÊÄªÂ∏ÇÂÄº„ÄÇ</p><p>‚ÄúÊàëÊúâÊó†Êï∞Ê¨°È™ë‰∏äÂ§ßÁâõÔºåÁªìÊûúÂçäË∑ØË¢´ÂêìË∑ë‰∫Ü„ÄÇ ÁÑ∂ÂêéÁúãÁùÄ‰∫∫ÂÆ∂‰∏ÄÈ£ûÂÜ≤Â§©ÔºåÊÉ≥Â§ßÂì≠ÈÉΩÊ≤°ÊúâÁúºÊ≥™„ÄÇ ÊàëÁúüÊÉ≥ÊääËá™Â∑±ÁöÑË¥±ÊâãÁªôÁ†çÊéâ„ÄÇ‚Äù</p><p>‚ÄúÊàëÊúâÊó†Êï∞Ê¨°Ë∏©‰∏äÂ§ßÂ±éÔºåÁªìÊûúÁ°¨Êå∫Âú®ÈÇ£Âá†Âπ¥„ÄÇ ÁÑ∂ÂêéÁ≠âÁùÄÂàÜÁ∫¢‰∏ÄÊØõÊó†ÊúâÔºåÊÉ≥‰∏äËÆøÈÉΩÊ≤°ÊúâËÉÜÂ≠ê„ÄÇ ÊàëÁúüÊÉ≥ÊääËá™Â∑±ÁöÑËÑö‰πüÁªôÁ†çÊéâ„ÄÇ‚Äù</p><p>ËÆ©‰∏≠ÂõΩËÇ°Ê∞ëÊÄÄÂøµÁöÑÁâõÂ∏ÇÔºåÈÉΩÂÉèÊòØÊÄÄÂøµÁöÑÂàùÊÅã‰∏ÄÊ†∑ÔºåÈÇ£Ê∂àÊï£Â∑≤‰πÖÁöÑÁâõÂë≥‰ªø‰ΩõÂÅö‰∫Ü‰∏ÄÂú∫Êò•Ê¢¶Ëà¨ÁöÑÁæéÂ¶ô„ÄÇ</p><p><img src="/blog/img/Year%202019%20-%2002.jpg" alt="Year 2019 - 02" title="Year 2019 - 02"></p><p>Âõæ 2ÔºöHayne‚Äôs Report.</p><p>2 Êúà The Royal Commission into Misconduct in the Banking, Superannuation and Financial Services Industry Final Report, lead by Keith Hayne published. ÂØºËá¥ÂúüÊæ≥ÁªèÊµéÊîØÊü±‰∫ß‰∏öÂõõÂ§ßÈì∂Ë°å‰∏≠‰∏â‰∏™ÁöÑ CEO ÂÖàÂêéÂú®‰ªäÂπ¥‰∏≠Ë¢´Ëø´ËæûËÅå„ÄÇ</p><p><img src="/blog/img/Year%202019%20-%2003.jpg" alt="Year 2019 - 03" title="Year 2019 - 03"></p><p>Âõæ 3ÔºöË∂Ö‰πéÊÉ≥ÂÉèÁöÑÂÆáÂÆô„ÄÇ</p><p>4 ÊúàÔºå‰∫∫Á±ªÊúâÂè≤‰ª•Êù•Ëé∑ÂæóÁöÑÈ¶ñÂº†ÈªëÊ¥ûÁÖßÁâá„ÄÇ‰Ωç‰∫éÂ§ÑÂ•≥Â∫ß‰∏≠ÁöÑ M87 ÁöÑË∂ÖÂ§ßË¥®ÈáèÈªëÊ¥ûË∑ùÁ¶ªÊàë‰ª¨Â§ßÁ∫¶ 5500 ‰∏áÂÖâÂπ¥„ÄÇÂÖ∂Ë¥®Èáè‰πãÂ§ßÁ∫¶Âêà 66 ‰∫ø‰∏™Â§™Èò≥„ÄÇ</p><p><img src="/blog/img/Year%202019%20-%2004.jpg" alt="Year 2019 - 04" title="Year 2019 - 04"></p><p>Âõæ 4ÔºöI believe in miracles.</p><p>Â§ßÈÄâÂâç‰∏Ä‰∏™ÊúàÔºåÂêÑÈ°πÊ∞ëÊÑèË∞ÉÊü•ÈÉΩ tip Labor win the election. Sportsbets back Labor win at odds of $1.16, Coalition $5.80. Labor Á´ûÈÄâÂõ¢ÈòüÂú®ÂÖ®ÂõΩÂêÑÂú∞ÊãâÁ•®ËÆ≤ÊºîÊó∂‰πüÊòØË∏åË∫áÊª°ÂøóÔºåÂäøÂú®ÂøÖËµ¢„ÄÇÊòüÊúüÂÖ≠Á´ûÈÄâÊó•Êó©‰∏äÔºå‚Äú‰∏ªÊµÅ‚Äù TV &amp; newspapers ËøòÈ¢ÑÊµã Labor‚Äôs landslide win„ÄÇ‰ΩÜÈÄâ‰∏æÊúÄÁªàÂú® Coalition ÊàèÂâßÊÄßÁöÑÂ§ßÈÄÜËΩ¨‰∏≠ÁªìÊùü„ÄÇ</p><p>Ê∞ëÊÑèË∞ÉÊü•Êú∫ÊûÑ‰∏çÂæó‰∏çÊâøËÆ§Ëá™Â∑±ÂêπÂòòÁöÑ Machine Learning / AI Âè™ÊòØÈ™ó‰∫∫ÁöÑÂ∞èÊääÊàè„ÄÇSportsbet Ëµî‰∫Ü $5.2m on its costly error„ÄÇ‚Äú‰∏ªÊµÅ‚ÄùÂ™í‰Ωì‰πü‰∏çÂæó‰∏çÊâáËá™Â∑±ÁöÑËÑ∏Ôºåradical political idiosyncrasy and elitism bias Ê†πÊú¨ÂÅö‰∏ç‰∫Ü‰∏â‰∏™‰ª£Ë°®„ÄÇ</p><p>Monash University professor Andrew Markus said Australians usually nominated <strong>jobs</strong>, the <strong>economy</strong> and <strong>financial security</strong> as their top concerns and may have recoiled from Labor‚Äôs sweeping plans for tax revenue increases.</p><p>‚ÄúIf there‚Äôs a danger that your agenda challenges those economic factors, you‚Äôre on pretty rocky ground.‚Äù</p><p>Now quiet Australians are heard loud and clear.</p><p>The swing to the Liberals suggested voters were sceptical of policies to raise $56 billion from changes to dividend rules, $32 billion from negative gearing and $30 billion over a decade from superannuation.</p><p>‚ÄúWhat one person receives without working for, another person must work for without receiving.‚Äù Here is the wisdom from Adrian Rogers.</p><p>Wasn‚Äôt it Labor shadow treasurer Mr. Chris Bowen who said ‚Äúif you do t like us taking away your franking credits then don‚Äôt vote for Labor‚Äù before the election?</p><p>Well, Mr. Bowen, thank you for your invitation!</p><p><img src="/blog/img/Year%202019%20-%2005.jpg" alt="Year 2019 - 05" title="Year 2019 - 05"></p><p>Âõæ 5ÔºöEluid Kipchoge.</p><p>10 Êúà 12 Êó•Ôºå34 Â≤ÅÁöÑËÇØÂ∞º‰∫ö‰∫∫ÔºåÈ©¨ÊãâÊùæ‰∏ñÁïåÁ∫™ÂΩï‰øùÊåÅËÄÖ Eluid KipchogeÔºåÂú®‚Äú‰∏ñÁïåÈü≥‰πê‰πãÈÉΩ‚ÄùÂ••Âú∞Âà©È¶ñÈÉΩÁª¥‰πüÁ∫≥ÔºåÂêëÂÖ®Á®ãÈ©¨ÊãâÊùæ Breaking 2 ‚ÄúÁ†¥‰∫å‚ÄùÁöÑÂÆè‰ºüÁõÆÊ†áÂèëËµ∑‰∏™‰∫∫ËÅå‰∏öÁîüÊ∂ØÁöÑÁ¨¨‰∫åÂ∫¶ÂÜ≤Âáª„ÄÇËøôÊòØ‰∫∫Á±ªË∑®Ë∂äÈ©¨ÊãâÊùæÊñ∞ÈáåÁ®ãÁ¢ëÁöÑÂéÜÂè≤ÊÄß‰∏ÄÂàª„ÄÇÈ©¨ÊãâÊùæÁ™ÅÁ†¥‰∫∫Á±ª 2 Â∞èÊó∂Â§ßÂÖ≥„ÄÇ</p><p><strong>1 Â∞èÊó∂ 59 ÂàÜ 40 Áßí</strong> In perspective, ÊÉ≥Ë±°‰∏Ä‰∏ãÔºåEluid Kipchoge just runs every 100 meters in 17s, for two hours. 17 frigging seconds!</p><p><img src="/blog/img/Year%202019%20-%2006.jpg" alt="Year 2019 - 06" title="Year 2019 - 06"></p><p>Âõæ 6ÔºöReserve Bank Australia cuts interest rates to historic low.</p><p>Central bank is literally behind the curve. More ominously, it‚Äôs an indication that asset bubbles are poised to burst, just like the Fed‚Äôs first interest rate cut warned directly ahead of both the tech bust and GFC.</p><p>Áé∞Âú®ÁöÑ‰∏Ä‰∏™ÁªèÊµéÂπΩÁÅµÂ∞±ÊòØ‚ÄùÂÄ∫Âä°‚Äù„ÄÇ‰∏ã‰∏Ä‰∏™ÁªèÊµéÂç±Êú∫ÂæàÊúâÂèØËÉΩÂ∞±ÊòØÂÄ∫Âä°Âç±Êú∫„ÄÇ</p><p>ÊîøÂ∫úÂÄ∫Ôºå‰ºÅ‰∏öÂÄ∫Ôºå‰∏™‰∫∫ÂÄ∫ÔºåÂ§ßÈáèÁöÑË¥üÂÄ∫ÔºåË∂ÖËøá‰∫ÜÂÄüÊ¨æËÄÖËá™Ë∫´ÂÅøËøòËÉΩÂäõËÄåÂºïÂèëÁöÑÂÄ∫Âä°Âç±Êú∫ÔºåÈáëËûçÊµ∑Âï∏„ÄÇÂÖàË¥¢Âä°Âõ∞Â¢ÉÔºåÂÜçÁªèÊµéÁî±‰∏çÁ®≥ÂÆöËΩ¨Ëá≥Â¥©Ê∫ÉÔºå‰∏≠‰∫ßÂèòÊàêÁ†¥‰∫ßÔºå‰ªéËÄåÈÄ†ÊàêÁ§æ‰ºöÁöÑÂ§ßÂä®Ëç°„ÄÇ</p><p><img src="/blog/img/Year%202019%20-%2007.jpg" alt="Year 2019 - 07" title="Year 2019 - 07"></p><p>Âõæ 7ÔºöDow 28000.</p><p>In November, another historical moment, Dow closes above 28,000. From 27,000 to 28,000, get there just in 90 trading days.</p><p>ÂÖ®ÁêÉÁöÑËÇ°Â∏ÇÂèØ‰ª•ËØ¥Ê∞îÂäøÂ¶ÇËôπ„ÄÇÁæéÂõΩËÇ°Â∏ÇÁöÑÂ∏ÇÂÄºÂíå GDP ÊØîÂÄºÂ∑≤ÁªèË∂ÖËøá‰∫Ü 150%ÔºåË∂ÖË∂ä‰∫Ü 2000 Âπ¥‰∫íËÅîÁΩëÊ≥°Ê≤´Âíå 2007 Âπ¥ÊàøÂú∞‰∫ßÊ≥°Ê≤´È°∂Â≥∞Êó∂ÊúüÁöÑ‰º∞ÂÄº„ÄÇ</p><p>ÊàøÂú∞‰∫ßÂ∏ÇÂú∫ÂêåÊ†∑ÊòØÈ´òÊ≠åÁåõËøõ„ÄÇÁæéÂõΩÁöÑÊàøÂú∞Â∑≤ÁªèË∂ÖËøá‰∫Ü 2007 Âπ¥È°∂Â≥∞ 20% ÁöÑÊ∞¥Âπ≥‰∫Ü„ÄÇ‰∏çÁÆ°‰ªé‰ªÄ‰πàÊåáÊ†áË°°ÈáèÔºå‰∏ÄÊâπÊåáÊ†áÈÉΩÊòæÁ§∫ÂΩìÂâçËµÑÊú¨Â∏ÇÂú∫ÁöÑ‰º∞ÂÄºÈÉΩÂ∑≤ÁªèË∂ÖËøá‰∫Ü 2007 Âπ¥ÔºåËøôÊòØ‰∏™Â∑®Â§ßÁöÑÊ≥°Ê≤´„ÄÇ</p><p>Êúâ‰∫∫È¢ÑÊµãÊòéÂπ¥ 2020 Âπ¥Â∞ÜÊòØÊ¨°Ë¥∑Âç±Êú∫‰ª•Êù•ÊúÄÈöæÁöÑ‰∏ÄÂπ¥„ÄÇ‰ΩÜÂõ†‰∏∫‰ºº‰πéÂ•ΩÂÉèÊØèÁªèËøá‰∏ÄÂπ¥ÈÉΩÊòØËøáÂéª 10 Âπ¥‰∏≠ÊúÄÈöæÁöÑ‰∏ÄÂπ¥ÔºåÂÖ®ÁêÉÁªèÊµéÂÜç‰πüÊ≤°ÊúâÂõûÂà∞ËøáÂø´ÈÄüÂ¢ûÈïøÁöÑÂø´ËΩ¶ÈÅì‰∏äÔºåÊâÄ‰ª•ÊòéÂπ¥ÊâçÊòØÂàöÂºÄÂßãÔºåÊú™Êù•ÂçÅÂπ¥ÊâçÊòØÊúÄËâ∞ÈöæÁöÑ„ÄÇ</p><p>ÁõÆÂâçÂÄ∫Âä°Êù†ÊùÜË∂ÖËøá‰∫Ü 250%„ÄÇÂÖ®ÁêÉÂêÑÂõΩÂ§ÆË°å‰ª•Èõ∂Âà©ÁéáÂíåË¥üÂà©ÁéáÁª¥ÊåÅ„ÄÇÂú®ËøôÁßçÊÉÖÂΩ¢‰∏ãÔºåÂøÖÁÑ∂ÂØºËá¥ËÇ°Â∏ÇÂíåÊàøÂú∞‰∫ßÂ∏ÇÂú∫Ê≥°Ê≤´„ÄÇ</p><p>‰∏ÄÊó¶Ëøô‰∏§‰∏™Ê≥°Ê≤´Á†¥ÁÅ≠ÔºåÂÆû‰ΩìÁªèÊµé‰πüÂøÖÁÑ∂‰ºöÂèóÂà∞ÂΩ±Âìç„ÄÇ‰ªé 400 Â§öÂπ¥ÁöÑÁªèÊµéÂè≤‰∏≠ÂèØ‰ª•ÂæóÂá∫ÁöÑÁªìËÆ∫Â∞±ÊòØÂ∏ÇÂú∫ËßÑÂæãÂèØ‰ª•Êé®ËøüÔºå‰ΩÜ‰ªéÊú™Áº∫Â∏≠„ÄÇ</p><p><img src="https://lh3.googleusercontent.com/pKuf-FR-xupJa_XNu82ZZ2CrJ0f686G9e9c-AfS4Y6iXFFVGn8FoFGF0vPojRNRvw6bjveJWzvYsyNUVLDqnwvgrXM9AROTtl-3s1r4IfPG8lrfx59jTGyAbNAAq2yjGLmTjEsccISrpzEIaRNFUJiVDUkqojGPEELUbHPcXB58roLBds3gc89vP-Y2AcbocjZB-btxEIYAUS3SKMcX7G-DLHvumHqM4V8yCNKKM0AT5-lkiU-W7nTwrronm6GkqP2SMiddlHcJQsyc2-vc-jeRl8XYd3shPitAjT4ipzTtq0p4fYA7e9Q6HkEe9pIVbcMGmUt9vxZq0YayACCZW6I7QeqPHYi-wpoznFaWDEq4VnGk56vQnb7n3zsc4k0jSnpYonYz97KEz03j2zJhkvbDnTXks6ZcnnbP7TqmmL0ySkKM3gjWBz9IScNZU-dz2E3GCpeNvuZW1NgxvkF-It4918_Mm8Sl2TIYmdsrFdJ6MO_Rzk2PcLaoiGuJtS6lVxJhSb_h5yRNbBk8ev_mmypoangxgHdZKbHC3ytduJbkExXNwW4T6vsWFqdNLNNiDfsVBraOlYPXT0rwCeky-_PlcITAKyPA_jxchRY9cxrwg2dSGERJNYRkWlhgXHD5kzU2q9IkQ4p68u-Y5Opo35ttlrc0F_7C-O87yXv-RLsgRz4fDHOoW1pE=w1440-h2151-no" alt="Year 2019 - Home grown farm" title="Year 2019 - Home grown farm"></p><p>Âõæ 8ÔºöHome grown farm.</p><p><strong>‰ª•ÂÜúË°•Â∑•</strong>„ÄÇÁªèÊµé‰∏çÊôØÊ∞îÔºåÊäïËµÑÂõûÊä•‰ΩéÔºåËÇâÁ±ªÔºåÁîüËî¨ÂíåÊ∞¥Êûú‰ª∑Ê†ºÂ±ÖÈ´ò‰∏¥‰∏ãÁöÑÁéØÂ¢É‰∏≠‰æùÈù† home grownÔºåÂÆ∂‰∏≠ÁõÜÊ†ΩÁöÑÊùèÔºåËãπÊûúÂíåÊ©ÑÊ¶ÑÂº•Ë°•ÂáèÂ∞ëÁöÑÊî∂ÂÖ•ÔºåÊâ∂ÊåÅÂ¢ûÂ§ßÁöÑÂºÄÈîÄ„ÄÇ</p><p><img src="https://lh3.googleusercontent.com/PzzPXr-IUsEiCUhrAY0KcBzmss2d9lpcxL5ozlDY8O_ykzKUWnSnKYjXmKpdA1bF-VrT_S7Rdy3H136jzlu93vofXPrqVW0oqifSe0yylPV-qc9xRqtFUl_NW6ptvRAcVxZzWH5f0wYsgK4rnM5SnHGL-6O1y6j1ANAYtKc7yP_fATCiPrn5tuNFeMtInzU1pv80vJtA0xph6sQKp1TG9M0wNuAYgzsJ8l2lw5_8mbXPt8lwrxZWSnZyXDMddXTQyMy3917AHQQafuMUOne6kPreIVU2GuWWE1wsnadFDEyscehlGSUMhrSv1IqknOEk73yHxV6R2QwvEHCnPF-LDI9Pdw3loDUd5QFCgFCEnVLJgEMCIffYK8fq-ZJM6Unl3zIg9I0PI5vGQaWiirgmIz5susnZzjWNkBvrpyVfdolSkU-rhavrxeKYNWUCYISZcXHP6Ibbk4hpQnIcQpZzPGKeXA6lOiM0hKyP1qXGY69mkIdsh70KawopdiW6K5iLMJHNK0QJZ9TjC41aYsnGRGJ7pTTcm4WKpEGM-hZt9lGt9mqV1K8TilqeEm_HV2lnY3jsHcUUHqjcuW1kLui7VZ8nTYI59HAExZZ8myZpwhJRvVSXaaC4KHf2TlYooZoaOamEIV7lc21tvt2qXaY7g4sOQdC068q6ssgx8HdondROyjvEq4fs-AY=w1283-h1400-no" alt="Year 2019 - Year in sports" title="Year 2019 - Year in sports"></p><p>Âõæ 9ÔºöYear in sports - Personal Best.</p><p>ÂàõËÆ∞ÂΩïÁöÑ‰∏ÄÂπ¥„ÄÇË∑ëÂä®Ë∑ùÁ¶ªÔºàÂåÖÊã¨Ë∑ëÊ≠•ÂíåÁΩëÁêÉÔºâËææÂà∞ 1300+ ÂÖ¨ÈáåÔºåÁõ∏ÂΩì‰∫é‰ªéÂåó‰∫¨Ë∑ëÂà∞‰∏äÊµ∑„ÄÇClimbing 14,652mÔºåÁõ∏ÂΩì‰∫éÊîÄÁôª‰∫Ü 1.7 ‰∏™Áè†Á©ÜÊúóÁéõÂ≥∞ÁöÑÈ´òÂ∫¶„ÄÇ</p><p>‰∏çÂõ†Â≤ÅÊúàË£πÊ≠•‰∏çÂâçÔºå‰∏çÂõ†Á£®ÈöæÊîæÂºÉÊ¢¶ÊÉ≥Ôºå‰∏çÂõ†ÊûÅÈôêÂÅúÊ≠¢ÂâçËøõ„ÄÇA journey of a thousand miles begins with a single step. Keep running!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2019 Âπ¥ÊòØËøáÂéªÂçÅÂπ¥‰∏≠ÊúÄÂ∑ÆÁöÑ‰∏ÄÂπ¥Ôºå‰ΩÜÊàñËÆ∏‰ºöÊòØÊú™Êù•ÂçÅÂπ¥‰∏≠ÊúÄÂ•ΩÁöÑ‰∏ÄÂπ¥„ÄÇ&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/img/Year%202019%20-%2001.jpg&quot; alt=&quot;Year 2019 - 01&quot; title=&quot;Year 2019 - 01&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AWS EKS for Fargate, with eksctl</title>
    <link href="https://terrencemiao.github.io/blog/2019/12/07/AWS-EKS-on-Fargate-with-eksctl/"/>
    <id>https://terrencemiao.github.io/blog/2019/12/07/AWS-EKS-on-Fargate-with-eksctl/</id>
    <published>2019-12-07T11:33:38.000Z</published>
    <updated>2019-12-11T04:59:14.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AWS-EKS-with-eksctl"><a href="#AWS-EKS-with-eksctl" class="headerlink" title="AWS EKS, with eksctl"></a>AWS EKS, with eksctl</h2><p>Second try with AWS EKS on Fargate. This time with <code>eksctl</code>.</p><p>Create EKS cluster:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ eksctl create cluster --name sandpit --version 1.14 --region us-east-2 --fargate</span><br><span class="line">[‚Ñπ]  eksctl version 0.11.1</span><br><span class="line">[‚Ñπ]  using region us-east-2</span><br><span class="line">[‚Ñπ]  setting availability zones to [us-east-2b us-east-2a us-east-2c]</span><br><span class="line">[‚Ñπ]  subnets for us-east-2b - public:192.168.0.0/19 private:192.168.96.0/19</span><br><span class="line">[‚Ñπ]  subnets for us-east-2a - public:192.168.32.0/19 private:192.168.128.0/19</span><br><span class="line">[‚Ñπ]  subnets for us-east-2c - public:192.168.64.0/19 private:192.168.160.0/19</span><br><span class="line">[‚Ñπ]  using Kubernetes version 1.14</span><br><span class="line">[‚Ñπ]  creating EKS cluster "sandpit" in "us-east-2" region with Fargate profile</span><br><span class="line">[‚Ñπ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-east-2 --cluster=sandpit'</span><br><span class="line">[‚Ñπ]  CloudWatch logging will not be enabled for cluster "sandpit" in "us-east-2"</span><br><span class="line">[‚Ñπ]  you can enable it with 'eksctl utils update-cluster-logging --region=us-east-2 --cluster=sandpit'</span><br><span class="line">[‚Ñπ]  Kubernetes API endpoint access will use default of &#123;publicAccess=true, privateAccess=false&#125; for cluster "sandpit" in "us-east-2"</span><br><span class="line">[‚Ñπ]  1 task: &#123; create cluster control plane "sandpit" &#125;</span><br><span class="line">[‚Ñπ]  building cluster stack "eksctl-sandpit-cluster"</span><br><span class="line">[‚Ñπ]  deploying stack "eksctl-sandpit-cluster"</span><br><span class="line">[‚úî]  all EKS cluster resources for "sandpit" have been created</span><br><span class="line">[‚úî]  saved kubeconfig as "/Users/terrence/.kube/config"</span><br><span class="line">[‚Ñπ]  creating Fargate profile "fp-default" on EKS cluster "sandpit"</span><br><span class="line">[‚Ñπ]  created Fargate profile "fp-default" on EKS cluster "sandpit"</span><br><span class="line">[‚Ñπ]  "coredns" is now schedulable onto Fargate</span><br><span class="line">[‚Ñπ]  "coredns" is now scheduled onto Fargate</span><br><span class="line">[‚Ñπ]  "coredns" pods are now scheduled onto Fargate</span><br><span class="line">[‚Ñπ]  kubectl command should work with "/Users/terrence/.kube/config", try 'kubectl get nodes'</span><br><span class="line">[‚úî]  EKS cluster "sandpit" in "us-east-2" region is ready</span><br></pre></td></tr></table></figure><p><img src="/blog/img/AWS%20EKS%20on%20Fargate,%20with%20eksctl%20-%20Cluster.png" alt="AWS EKS on Fargate, with eksctl - Cluster" title="AWS EKS on Fargate, with eksctl - Cluster"></p><p>Create and add EKS mansged node group:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ eksctl create nodegroup --cluster sandpit --name workers --node-type t3a.medium --ssh-access --ssh-public-key aws-us-key --managed</span><br><span class="line">[‚Ñπ]  eksctl version 0.11.1</span><br><span class="line">[‚Ñπ]  using region us-east-2</span><br><span class="line">[‚Ñπ]  will use version 1.14 for new nodegroup(s) based on control plane version</span><br><span class="line">[‚Ñπ]  using EC2 key pair %!!(MISSING)q(*string=&lt;nil&gt;)</span><br><span class="line">[‚Ñπ]  1 nodegroup (workers) was included (based on the include/exclude rules)</span><br><span class="line">[‚Ñπ]  will create a CloudFormation stack for each of 1 managed nodegroups in cluster "sandpit"</span><br><span class="line">[‚Ñπ]  1 task: &#123; 1 task: &#123; create managed nodegroup "workers" &#125; &#125;</span><br><span class="line">[‚Ñπ]  building managed nodegroup stack "eksctl-sandpit-nodegroup-workers"</span><br><span class="line">[‚Ñπ]  deploying stack "eksctl-sandpit-nodegroup-workers"</span><br><span class="line">[‚úî]  created 0 nodegroup(s) in cluster "sandpit"</span><br><span class="line">[‚Ñπ]  nodegroup "workers" has 2 node(s)</span><br><span class="line">[‚Ñπ]  node "ip-192-168-47-175.us-east-2.compute.internal" is ready</span><br><span class="line">[‚Ñπ]  node "ip-192-168-87-98.us-east-2.compute.internal" is ready</span><br><span class="line">[‚Ñπ]  waiting for at least 2 node(s) to become ready in "workers"</span><br><span class="line">[‚Ñπ]  nodegroup "workers" has 2 node(s)</span><br><span class="line">[‚Ñπ]  node "ip-192-168-47-175.us-east-2.compute.internal" is ready</span><br><span class="line">[‚Ñπ]  node "ip-192-168-87-98.us-east-2.compute.internal" is ready</span><br><span class="line">[‚úî]  created 1 managed nodegroup(s) in cluster "sandpit"</span><br><span class="line">[‚Ñπ]  checking security group configuration for all nodegroups</span><br><span class="line">[‚Ñπ]  all nodegroups have up-to-date configuration</span><br></pre></td></tr></table></figure><h2 id="Kubernetes-Dashboard"><a href="#Kubernetes-Dashboard" class="headerlink" title="Kubernetes Dashboard"></a>Kubernetes Dashboard</h2><p>Install Kubernetes Dashboard in Kubernetes cluster:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ kubectl get services  --all-namespaces</span><br><span class="line">NAMESPACE              NAME                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">default                kubernetes                  ClusterIP   10.100.0.1       &lt;none&gt;        443/TCP         70m</span><br><span class="line">kube-system            kube-dns                    ClusterIP   10.100.0.10      &lt;none&gt;        53/UDP,53/TCP   70m</span><br><span class="line">kube-system            metrics-server              ClusterIP   10.100.142.106   &lt;none&gt;        443/TCP         14m</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper   ClusterIP   10.100.91.78     &lt;none&gt;        8000/TCP        11m</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard        ClusterIP   10.100.75.0      &lt;none&gt;        443/TCP         11m</span><br><span class="line"></span><br><span class="line">ùúÜ kubectl get pods  --all-namespaces</span><br><span class="line">NAMESPACE              NAME                                         READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system            aws-node-cnzrv                               1/1     Running   0          40m</span><br><span class="line">kube-system            aws-node-m9tjp                               1/1     Running   0          40m</span><br><span class="line">kube-system            coredns-7f5cccffc-h44mz                      1/1     Running   0          65m</span><br><span class="line">kube-system            coredns-7f5cccffc-hmx7g                      1/1     Running   0          65m</span><br><span class="line">kube-system            kube-proxy-7kn62                             1/1     Running   0          40m</span><br><span class="line">kube-system            kube-proxy-g57ph                             1/1     Running   0          40m</span><br><span class="line">kube-system            metrics-server-7fcf9cc98b-ftl4k              1/1     Running   0          14m</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper-677768c755-mxlmc   1/1     Running   0          11m</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard-995fd6fb4-xqcj5         1/1     Running   0          11m</span><br></pre></td></tr></table></figure><p>Connect Kubernetes Dashboard via proxy:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ cat .kube/config</span><br><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority: /Users/terrence/.minikube/ca.crt</span><br><span class="line">    server: https://192.168.99.100:8443</span><br><span class="line">  name: minikube</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority-data: LS0tLS1CRUd ... tLS0tLQo=</span><br><span class="line">    server: https://0559DE89F43B8766B56C7FD066C6C50F.yl4.us-east-2.eks.amazonaws.com</span><br><span class="line">  name: sandpit.us-east-2.eksctl.io</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: sandpit.us-east-2.eksctl.io</span><br><span class="line">    user: ADMMiaoT@sandpit.us-east-2.eksctl.io</span><br><span class="line">  name: ADMMiaoT@sandpit.us-east-2.eksctl.io</span><br><span class="line">- context:</span><br><span class="line">    cluster: minikube</span><br><span class="line">    user: minikube</span><br><span class="line">  name: minikube</span><br><span class="line">current-context: ADMMiaoT@sandpit.us-east-2.eksctl.io</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: ADMMiaoT@sandpit.us-east-2.eksctl.io</span><br><span class="line">  user:</span><br><span class="line">    exec:</span><br><span class="line">      apiVersion: client.authentication.k8s.io/v1alpha1</span><br><span class="line">      args:</span><br><span class="line">      - token</span><br><span class="line">      - -i</span><br><span class="line">      - sandpit</span><br><span class="line">      command: aws-iam-authenticator</span><br><span class="line">      env:</span><br><span class="line">      - name: AWS_PROFILE</span><br><span class="line">        value: paradise-dev</span><br><span class="line">- name: minikube</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /Users/terrence/.minikube/client.crt</span><br><span class="line">    client-key: /Users/terrence/.minikube/client.key</span><br><span class="line"></span><br><span class="line">ùúÜ kubectl -n kube-system get secret | grep eks-admin | awk '&#123;print $1&#125;'</span><br><span class="line">eks-admin-token-s2gf5</span><br><span class="line"></span><br><span class="line">ùúÜ kubectl -n kube-system describe secret eks-admin-token-s2gf5</span><br><span class="line">Name:         eks-admin-token-s2gf5</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: eks-admin</span><br><span class="line">              kubernetes.io/service-account.uid: fa3cf514-18bc-11ea-bbdd-0a4cd5e8dc70</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1025 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIs ... hpY8upQlA2q40g</span><br><span class="line"></span><br><span class="line">ùúÜ kubectl proxy</span><br></pre></td></tr></table></figure><p>Visit URL <em><a href="http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#!/login" target="_blank" rel="noopener">http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#!/login</a></em></p><p>Choose Token, paste the token output from the previous command into the Token field, and choose SIGN IN.</p><p><img src="/blog/img/AWS%20EKS%20on%20Fargate,%20with%20eksctl%20-%20Nodes.png" alt="AWS EKS on Fargate, with eksctl - Nodes" title="AWS EKS on Fargate, with eksctl - Nodes"></p><p>With AWS managed nodes, on Node EC2 Instance:</p><p><img src="/blog/img/AWS%20EKS%20on%20Fargate,%20with%20eksctl%20-%20EC2%20Instance.png" alt="AWS EKS on Fargate, with eksctl - EC2 Instance" title="AWS EKS on Fargate, with eksctl - EC2 Instance"></p><h2 id="First-Docker-application"><a href="#First-Docker-application" class="headerlink" title="First Docker application"></a>First Docker application</h2><p>Deploy first Docker application <code>react-typescript</code>, from Docker Hub <em><a href="https://hub.docker.com/r/jtech/react-typescript" target="_blank" rel="noopener">https://hub.docker.com/r/jtech/react-typescript</a></em>, into Kubernetes.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ kubectl run react-typescript --image=jtech/react-typescript --port 3000</span><br><span class="line">kubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead.</span><br><span class="line">deployment.apps/react-typescript created</span><br><span class="line"></span><br><span class="line">ùúÜ kubectl describe deployments</span><br><span class="line">Name:                   react-typescript</span><br><span class="line">Namespace:              default</span><br><span class="line">CreationTimestamp:      Mon, 09 Dec 2019 14:56:09 +1100</span><br><span class="line">Labels:                 run=react-typescript</span><br><span class="line">Annotations:            deployment.kubernetes.io/revision: 1</span><br><span class="line">Selector:               run=react-typescript</span><br><span class="line">Replicas:               1 desired | 1 updated | 1 total | 0 available | 1 unavailable</span><br><span class="line">StrategyType:           RollingUpdate</span><br><span class="line">MinReadySeconds:        0</span><br><span class="line">RollingUpdateStrategy:  25% max unavailable, 25% max surge</span><br><span class="line">Pod Template:</span><br><span class="line">  Labels:  run=react-typescript</span><br><span class="line">  Containers:</span><br><span class="line">   react-typescript:</span><br><span class="line">    Image:        jtech/react-typescript</span><br><span class="line">    Port:         3000/TCP</span><br><span class="line">    Host Port:    0/TCP</span><br><span class="line">    Environment:  &lt;none&gt;</span><br><span class="line">    Mounts:       &lt;none&gt;</span><br><span class="line">  Volumes:        &lt;none&gt;</span><br><span class="line">Conditions:</span><br><span class="line">  Type           Status  Reason</span><br><span class="line">  ----           ------  ------</span><br><span class="line">  Available      False   MinimumReplicasUnavailable</span><br><span class="line">  Progressing    True    ReplicaSetUpdated</span><br><span class="line">OldReplicaSets:  &lt;none&gt;</span><br><span class="line">NewReplicaSet:   react-typescript-867c948446 (1/1 replicas created)</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason             Age   From                   Message</span><br><span class="line">  ----    ------             ----  ----                   -------</span><br><span class="line">  Normal  ScalingReplicaSet  71s   deployment-controller  Scaled up replica set react-typescript-867c948446 to 1</span><br><span class="line"></span><br><span class="line">ùúÜ kubectl describe pods react-typescript</span><br><span class="line">Name:               react-typescript-867c948446-qtvrp</span><br><span class="line">Namespace:          default</span><br><span class="line">Priority:           2000001000</span><br><span class="line">PriorityClassName:  system-node-critical</span><br><span class="line">Node:               fargate-ip-192-168-183-250.us-east-2.compute.internal/192.168.183.250</span><br><span class="line">Start Time:         Mon, 09 Dec 2019 14:56:59 +1100</span><br><span class="line">Labels:             eks.amazonaws.com/fargate-profile=fp-default</span><br><span class="line">                    pod-template-hash=867c948446</span><br><span class="line">                    run=react-typescript</span><br><span class="line">Annotations:        kubernetes.io/psp: eks.privileged</span><br><span class="line">Status:             Running</span><br><span class="line">IP:                 192.168.183.250</span><br><span class="line">Controlled By:      ReplicaSet/react-typescript-867c948446</span><br><span class="line">Containers:</span><br><span class="line">  react-typescript:</span><br><span class="line">    Container ID:   containerd://2ea5f1ea4fb731eb844f0e267581e9e188d29ab7a639b7b8ca50c83cfb12b4c3</span><br><span class="line">    Image:          jtech/react-typescript</span><br><span class="line">    Image ID:       docker.io/jtech/react-typescript@sha256:0951fe4d9a24390123c7aa23612c8cdf1d8191a9d8e7d3cbc8bb4d8d763e0ce5</span><br><span class="line">    Port:           3000/TCP</span><br><span class="line">    Host Port:      0/TCP</span><br><span class="line">    State:          Running</span><br><span class="line">      Started:      Mon, 09 Dec 2019 14:57:28 +1100</span><br><span class="line">    Ready:          True</span><br><span class="line">    Restart Count:  0</span><br><span class="line">    Environment:    &lt;none&gt;</span><br><span class="line">    Mounts:</span><br><span class="line">      /var/run/secrets/kubernetes.io/serviceaccount from default-token-knpqq (ro)</span><br><span class="line">Conditions:</span><br><span class="line">  Type              Status</span><br><span class="line">  Initialized       True</span><br><span class="line">  Ready             True</span><br><span class="line">  ContainersReady   True</span><br><span class="line">  PodScheduled      True</span><br><span class="line">Volumes:</span><br><span class="line">  default-token-knpqq:</span><br><span class="line">    Type:        Secret (a volume populated by a Secret)</span><br><span class="line">    SecretName:  default-token-knpqq</span><br><span class="line">    Optional:    false</span><br><span class="line">QoS Class:       BestEffort</span><br><span class="line">Node-Selectors:  &lt;none&gt;</span><br><span class="line">Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s</span><br><span class="line">                 node.kubernetes.io/unreachable:NoExecute for 300s</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason   Age   From                                                            Message</span><br><span class="line">  ----    ------   ----  ----                                                            -------</span><br><span class="line">  Normal  Pulling  76s   kubelet, fargate-ip-192-168-183-250.us-east-2.compute.internal  Pulling image "jtech/react-typescript"</span><br><span class="line">  Normal  Pulled   49s   kubelet, fargate-ip-192-168-183-250.us-east-2.compute.internal  Successfully pulled image "jtech/react-typescript"</span><br><span class="line">  Normal  Created  49s   kubelet, fargate-ip-192-168-183-250.us-east-2.compute.internal  Created container react-typescript</span><br><span class="line">  Normal  Started  49s   kubelet, fargate-ip-192-168-183-250.us-east-2.compute.internal  Started container react-typescript</span><br></pre></td></tr></table></figure><p>Expose service:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">ùúÜ kubectl expose deployment react-typescript --type="NodePort"</span><br><span class="line">service/react-typescript exposed</span><br><span class="line"></span><br><span class="line">ùúÜ kubectl describe services react-typescript</span><br><span class="line">Name:                     react-typescript</span><br><span class="line">Namespace:                default</span><br><span class="line">Labels:                   run=react-typescript</span><br><span class="line">Annotations:              &lt;none&gt;</span><br><span class="line">Selector:                 run=react-typescript</span><br><span class="line">Type:                     NodePort</span><br><span class="line">IP:                       10.100.54.37</span><br><span class="line">Port:                     &lt;unset&gt;  3000/TCP</span><br><span class="line">TargetPort:               3000/TCP</span><br><span class="line">NodePort:                 &lt;unset&gt;  31799/TCP</span><br><span class="line">Endpoints:                192.168.183.250:3000</span><br><span class="line">Session Affinity:         None</span><br><span class="line">External Traffic Policy:  Cluster</span><br><span class="line">Events:                   &lt;none&gt;</span><br><span class="line"></span><br><span class="line">ùúÜ kubectl get services  --all-namespaces</span><br><span class="line">NAMESPACE              NAME                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">default                kubernetes                  ClusterIP   10.100.0.1       &lt;none&gt;        443/TCP          46h</span><br><span class="line">default                react-typescript            NodePort    10.100.54.37     &lt;none&gt;        3000:31799/TCP   4m55s</span><br><span class="line">kube-system            kube-dns                    ClusterIP   10.100.0.10      &lt;none&gt;        53/UDP,53/TCP    46h</span><br><span class="line">kube-system            metrics-server              ClusterIP   10.100.142.106   &lt;none&gt;        443/TCP          45h</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper   ClusterIP   10.100.91.78     &lt;none&gt;        8000/TCP         45h</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard        ClusterIP   10.100.75.0      &lt;none&gt;        443/TCP          45h</span><br></pre></td></tr></table></figure><p>Run <code>kubectl proxy</code> and connect to <code>react-typscript</code> application on URL: <a href="http://localhost:8001/api/v1/namespaces/default/services/http:react-typescript:3000/proxy/" target="_blank" rel="noopener">http://localhost:8001/api/v1/namespaces/default/services/http:react-typescript:3000/proxy/</a></p><p><img src="/blog/img/AWS%20EKS%20on%20Fargate,%20with%20eksctl%20-%20React%20Typescript.png" alt="AWS EKS on Fargate, with eksctl - React Typescript" title="AWS EKS on Fargate, with eksctl - React Typescript"></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><code>eksctl</code>, a simple CLI tool for creating clusters on Amazon‚Äôs new managed Kubernetes service for EC2 - EKS. Written in Go, uses CloudFormation, <em><a href="https://eksctl.io/" target="_blank" rel="noopener">https://eksctl.io/</a></em></li><li>AWS EKS, <em><a href="https://docs.aws.amazon.com/eks/latest/userguide/what-is-eks.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/eks/latest/userguide/what-is-eks.html</a></em></li><li>Tutorial: Deploy Kubernetes Dashboard, <em><a href="https://docs.aws.amazon.com/eks/latest/userguide/dashboard-tutorial.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/eks/latest/userguide/dashboard-tutorial.html</a></em></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;AWS-EKS-with-eksctl&quot;&gt;&lt;a href=&quot;#AWS-EKS-with-eksctl&quot; class=&quot;headerlink&quot; title=&quot;AWS EKS, with eksctl&quot;&gt;&lt;/a&gt;AWS EKS, with eksctl&lt;/h2&gt;&lt;p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AWS EKS for Fargate</title>
    <link href="https://terrencemiao.github.io/blog/2019/12/05/AWS-EKS-with-Fargate/"/>
    <id>https://terrencemiao.github.io/blog/2019/12/05/AWS-EKS-with-Fargate/</id>
    <published>2019-12-04T23:26:58.000Z</published>
    <updated>2019-12-10T23:37:51.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AWS-EKS"><a href="#AWS-EKS" class="headerlink" title="AWS EKS"></a>AWS EKS</h2><p>After AWS EKS for Fargate annouced in Re:Invent 2019 - <a href="https://aws.amazon.com/blogs/aws/amazon-eks-on-aws-fargate-now-generally-available/" target="_blank" rel="noopener">Amazon EKS on AWS Fargate Now Generally Available</a>, I have a quick spin.</p><p>General configuration:</p><p><img src="/blog/img/AWS%20EKS%20on%20Fargate%20-%20Configuration.png" alt="AWS EKS on Fargate - Configuration" title="AWS EKS on Fargate - Configuration"></p><p><img src="/blog/img/AWS%20EKS%20on%20Fargate%20-%20Configuration%20II.png" alt="AWS EKS on Fargate - Configuration" title="AWS EKS on Fargate - Configuration"></p><p>Fargate profile configuration:</p><p><img src="/blog/img/AWS%20EKS%20on%20Fargate%20-%20Profile.png" alt="AWS EKS on Fargate - Profile" title="AWS EKS on Fargate - Profile"></p><p>Fargate roles:</p><p><img src="/blog/img/AWS%20EKS%20on%20Fargate%20-%20Roles.png" alt="AWS EKS on Fargate - Roles" title="AWS EKS on Fargate - Roles"></p><p><code>CustomEKSRole</code> role has <code>AmazonEKSClusterPolicy</code> and <code>AmazonEKSServicePolicy</code>.</p><p><code>CustomEKSFargatePodExecutionRole</code> role has <code>AmazonEKSFargatePodExecutionRolePolicy</code>, and Trust relationships:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "Version": "2012-10-17",</span><br><span class="line">  "Statement": [</span><br><span class="line">    &#123;</span><br><span class="line">      "Sid": "",</span><br><span class="line">      "Effect": "Allow",</span><br><span class="line">      "Principal": &#123;</span><br><span class="line">        "Service": "eks-fargate-pods.amazonaws.com"</span><br><span class="line">      &#125;,</span><br><span class="line">      "Action": "sts:AssumeRole"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>CustomEKSWorkerNodeRole</code> role has <code>AmazonEKSWorkerNodePolicy</code>, <code>AmazonEKS_CNI_Policy</code>, <code>AmazonEC2ContainerRegistryReadOnly</code>, and Trust relationships:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "Version": "2012-10-17",</span><br><span class="line">  "Statement": [</span><br><span class="line">    &#123;</span><br><span class="line">      "Effect": "Allow",</span><br><span class="line">      "Principal": &#123;</span><br><span class="line">        "Service": "ec2.amazonaws.com"</span><br><span class="line">      &#125;,</span><br><span class="line">      "Action": "sts:AssumeRole"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Namespace for Fargate profile Pod Selectors is <code>default</code>.</p><p>Subnets for Fargate, including private subnets (subnet without Internet Gateway):</p><p><img src="/blog/img/AWS%20EKS%20on%20Fargate%20-%20Subnets.png" alt="AWS EKS on Fargate - Subnets" title="AWS EKS on Fargate - Subnets"></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li>Getting Started with AWS Fargate on Amazon EKS, <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html</a></li><li>Amazon EKS Worker Node IAM Role, <a href="https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html</a></li><li>EKS + Fargate = Extensibility of Kubernetes + Serverless Benefits, <a href="https://itnext.io/eks-fargate-extensibility-of-kubernetes-serverless-benefits-77599ac1763" target="_blank" rel="noopener">https://itnext.io/eks-fargate-extensibility-of-kubernetes-serverless-benefits-77599ac1763</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;AWS-EKS&quot;&gt;&lt;a href=&quot;#AWS-EKS&quot; class=&quot;headerlink&quot; title=&quot;AWS EKS&quot;&gt;&lt;/a&gt;AWS EKS&lt;/h2&gt;&lt;p&gt;After AWS EKS for Fargate annouced in Re:Invent 20
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Why React?</title>
    <link href="https://terrencemiao.github.io/blog/2019/12/01/Why-React/"/>
    <id>https://terrencemiao.github.io/blog/2019/12/01/Why-React/</id>
    <published>2019-12-01T02:40:56.000Z</published>
    <updated>2019-12-01T03:27:51.404Z</updated>
    
    <content type="html"><![CDATA[<p>A new pedigree of Frontend Development.</p><p>The following are the preferred technical choices for any new projects that do not have a ‚Äú<strong>hammer whats already there</strong>‚Äú constraint that have been chosen for consistency.</p><h2 id="Programming-Language-TypeScript"><a href="#Programming-Language-TypeScript" class="headerlink" title="Programming Language: TypeScript "></a>Programming Language: TypeScript </h2><p>Alternatives to avoid:</p><ul><li><strong>Raw JS</strong> / <a href="https://babeljs.io/" target="_blank" rel="noopener"><strong>Babel</strong></a>: Types can prevent a significant amount of bugs and provide a great means of documenting code that can be validated by a compiler. Therefore we will not dabble in untyped programming languages for Frontend development.</li><li>Other TypeSafe alternatives:<ul><li><a href="https://dart.dev/" target="_blank" rel="noopener"><strong>Dart</strong></a> / <a href="https://elm-lang.org/" target="_blank" rel="noopener"><strong>Elm</strong></a> / <a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor" target="_blank" rel="noopener"><strong>Blazor</strong></a> - typed compile to JavaScript languages: Browsers operate on JavaScript using a language that is too far removed from JS means people will need to learn two language and fix bugs at two levels.</li><li><a href="https://flow.org/" target="_blank" rel="noopener"><strong>Flow</strong></a> - A facebook alternative to TypeScript. Flow was a decent experiment into JavaScript type safety by the Facebook team, but news from inside Facebook (chats at conferences) is that it is not actively getting maintained. Therefore it should be avoided.</li></ul></li></ul><h2 id="UI-Library-React"><a href="#UI-Library-React" class="headerlink" title="UI Library: React"></a>UI Library: React</h2><p>Alternatives to avoid:</p><ul><li><a href="https://angular.io/" target="_blank" rel="noopener"><strong>Angular</strong></a>: <strong>Angular</strong> goes through significant breaking changes as can be <a href="https://github.com/angular/angular/blob/master/CHANGELOG.md" target="_blank" rel="noopener">witnessed by the changelog</a>. Also <strong>Angular</strong> is a full framework (as opposed to a library), but people rarely use it as a framework as there will be inevitable external dependencies for alternative (even better) community tools e.g. <a href="https://rxjs.dev/" target="_blank" rel="noopener"><strong>rxjs</strong></a> for state, <a href="https://github.com/axios/axios" target="_blank" rel="noopener"><strong>axios</strong></a> for api etc.</li><li><a href="https://vuejs.org/" target="_blank" rel="noopener"><strong>Vue</strong></a>: <strong>Vue</strong> is the third most popular choice. However it not backed by a major enterprise (Facebook for <strong>React</strong>, Google for <strong>Angular</strong>)</li><li><a href="https://svelte.dev/" target="_blank" rel="noopener"><strong>Svelte</strong></a>: Same reasons as <strong>Vue</strong>.</li></ul><h2 id="State-Management-MobX"><a href="#State-Management-MobX" class="headerlink" title="State Management: MobX"></a>State Management: <a href="https://mobx.js.org/" target="_blank" rel="noopener">MobX</a></h2><p>Alternatives to avoid:</p><ul><li><a href="https://redux.js.org/" target="_blank" rel="noopener"><strong>Redux</strong></a>: <strong>Redux</strong> is definitely the more popular choice in the React community. However most people will use it with some additional middleware library e.g. <a href="https://github.com/reduxjs/redux-thunk" target="_blank" rel="noopener">redux-thunk</a> or <a href="https://github.com/redux-saga/redux-saga/" target="_blank" rel="noopener">redux-saga</a> leading to multiple ways of doing Frontend. Also, <strong>Redux</strong> is significantly more verbose (because of always new object creation) and difficult to optimise (because of no internal knowledge of what changed).</li></ul><h2 id="Styles-CSS-in-JS"><a href="#Styles-CSS-in-JS" class="headerlink" title="Styles: CSS in JS"></a>Styles: CSS in JS</h2><p>Prefer <a href="https://github.com/emotion-js/emotion" target="_blank" rel="noopener">Emotion</a> or <a href="https://github.com/typestyle/typestyle" target="_blank" rel="noopener">TypeStyle</a> over others.</p><p>Alternatives to avoid:</p><ul><li>CSS preprocessor (e.g. <a href="https://sass-lang.com/" target="_blank" rel="noopener"><strong>sass</strong></a> / <a href="https://github.com/css-modules/css-modules" target="_blank" rel="noopener"><strong>css-modules</strong></a>). For CSS in JS there is an <a href="https://speakerdeck.com/vjeux/react-css-in-js" target="_blank" rel="noopener">excellent presentation</a> that you should checkout. Key reasons are clear code co-location and management practices for CSS, the same way <strong>React</strong> does it for Html (with JSX).</li></ul><h2 id="End-to-End-Testing-Cypress"><a href="#End-to-End-Testing-Cypress" class="headerlink" title="End to End Testing : Cypress"></a>End to End Testing : Cypress</h2><p><a href="https://www.cypress.io/" target="_blank" rel="noopener"><strong>Cypress</strong></a> for E2E testing.</p><p>Alternatives to avoid:</p><ul><li><a href="https://selenium.dev/" target="_blank" rel="noopener"><strong>Selenium</strong></a> based solutions (e.g. <a href="https://www.protractortest.org/#/" target="_blank" rel="noopener"><strong>Protractor</strong></a> / <a href="https://nightwatchjs.org/" target="_blank" rel="noopener"><strong>Nightwatch</strong></a>). <strong>Selenium</strong> operates over a wire transfer protocol that makes it impossible to provide many of the debugging features provided by <strong>Cypress</strong>. <strong>Cypress</strong> operates in process with the tests making automatic retries with greater flake resistance and a significantly improved debugging experience.</li></ul><h2 id="HTTP-Requests"><a href="#HTTP-Requests" class="headerlink" title="HTTP Requests"></a>HTTP Requests</h2><p>Prefer <a href="https://github.com/axios/axios" target="_blank" rel="noopener"><strong>axios</strong></a> due to is built in TypeScript definitions, great browser support and community guidance.</p><p>Alternatives to avoid:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API" target="_blank" rel="noopener"><strong>fetch</strong></a>: Needs polyfill and needs explicit calls for json de-serialization.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A new pedigree of Frontend Development.&lt;/p&gt;
&lt;p&gt;The following are the preferred technical choices for any new projects that do not have a 
      
    
    </summary>
    
    
  </entry>
  
</feed>
