{"meta":{"title":"Terrence Miao's Adventures","subtitle":"A journey of a thousand miles begins with a single step","description":"Veni, vidi, vici","author":"Terrence Miao","url":"https://terrencemiao.github.io/blog"},"posts":[{"title":"A Modern Architecture Application","date":"2021-03-02T05:55:13.000Z","path":"2021/03/02/A-Modern-Architecture-Application/","text":"RAD (Rapid Application Development) of a Serverless application ‚ÄúNotification Service‚Äù on modern technologies, e.g. AWS CDK &amp; SAM, AWS Step Functions, TypeScript, VS Code, Open API Top Down Design and Test Driven Development, in order to rapidly build a prototype, or a POC, verify and test some technologies and approaches. Request Handler =&gt; Step Functions (orchestration for Lambda functions, represents a single centralized executable business process, outsources low level operations like retry / exception catch and handle. Another choice is SNS) =&gt; Service Providers Have experienced of Terraform, Serverless, AWS SAM ‚Ä¶ now this time based on code over configuration principle, what you get is flexibility, predictability and more control. You focus on code you tell the tools what steps it has to complete directly. At the end of day, it is a simple matter of separation of concerns and single responsibility principle. ‚Ä¢ VS Code for API Spec editing ‚Ä¢ Postman API, Environment and Mock server, for QA team, then switch to real service in DEV/TEST environment 1ùúÜ npm run openapi ‚Ä¢ openapi-generator generates model classes; typescript-json-validator generates JSON Schema and validator 12ùúÜ openapi-generator generate -g typescript-node -i Notification\\ API\\ openapi.json -o Notification\\ API\\ generatedùúÜ npx typescript-json-validator notificationRequest.ts NotificationRequest ‚Ä¢ Onboard on Kong / API Manager, https://konghq.com/kong/ ‚Ä¢ CDK, is based on CloudFormation but abstract layer on the top of it. It can generates CloudFormation template file template.yaml 1ùúÜ cdk synth --no-staging &gt; template.yaml ‚Ä¢ Demo of local run and debug lambda, with background TSC watch process 1234ùúÜ npm run watchùúÜ sam local invoke RequestNotification9F9F3C31 -e samples/api-gateway-notification-event.jsonùúÜ sam local invoke RequestNotification9F9F3C31 -e samples/api-gateway-notification-event.json -d 5858 Data validation to make data integrity unbreachable will take a lot time. ajv framework and performance benchmark, https://github.com/ebdrup/json-schema-benchmark ‚Ä¢ Code lint with eslint and prettier and automatically correction ‚Ä¢ Code commit rule enforcement ‚Ä¢ Change code and deploy AWS stack by CDK 1ùúÜ cdk deploy --require-approval never --profile dev-cicd ‚Ä¢ Behavior Driven Test Framework Jest, https://github.com/facebook/jest, 2x / 3x faster than Karma, with code coverage, easy mocking 1ùúÜ npm t ‚Ä¢ Automatically generate application changelog and release notes 1ùúÜ npm run release:minor ‚Ä¢ Automatically generate application document 1ùúÜ npm run docs ‚Ä¢ AWS resources created by CDK ‚Ä¢ Not Mono Repo app, which multiple projects all under one giant Repo ‚Ä¢ ONE AWS Layers put all dependent NPM libs and shared code into; size of Lambda functions, readability ‚Ä¢ AWS EventBridge tro trigger and send event to Request Handler, for scheduling task ‚Ä¢ Health Check, with Service Monitoring Dashboard, verify dependencies at the endpoints, keep Lambda warming up 1ùúÜ curl https://c81234xdae8w1a9.execute-api.ap-southeast-2.amazonaws.com/health Cloud computing and Serverless architecture let developers in fast lane for Application Development. Right now, there are so many low hanging fruit to pick up. As developers, we should not always think about our comfort zone, we need to think about people who take over your work, think about BAU team to support the application. The codebase is not about you, but about the value that your code brings to others, and the organization that you work for.","tags":[]},{"title":"Why Repairable Is Important","date":"2020-11-30T00:38:56.000Z","path":"2020/11/30/Why-Repairable-Is-Important/","text":"Fix our destructive and throwaway economy, save our planet by making products both repairable, durable, environmentally friendly, and by defending our Right to Repair. This is my second video created and composed by Apple Final Cut Pro X - Why Repairable Is Important https://www.youtube.com/watch?v=qSmFI6J7eRo","tags":[]},{"title":"Bring back MagSafe","date":"2020-11-25T00:08:16.000Z","path":"2020/11/25/Bring-back-MagSafe/","text":"My first published video, created by Apple Final Cut Pro, on YouTube for official channel title Bring back MagSafe regard to solution that bring one of the most innovative design from Apple, back to MacBook Pro, iPad ‚Ä¶ and Android phones https://www.youtube.com/watch?v=yvkJR4Y0FK0 WSKEN SHARK X4 TYPE-C TO TYPE-C PD 100W QUICK CHARGE MAGNETIC CABLE: http://wsken.my/WSKEN-Shark-X4-Type-C-To-Type-C-PD-100W-Quick-Charge-Magnetic-Cable WSKEN SHARK X5 TYPE-C 5A QUICK CHARGE MAGNETIC CABLE: http://wsken.my/WSKEN-Shark-X5-Type-C-5A-Quick-Charge-Magnetic-Cable WSKEN Official Store on AliExpress: https://www.aliexpress.com/store/3018058","tags":[]},{"title":"Risk Management for CI/CD processes","date":"2020-10-26T05:55:13.000Z","path":"2020/10/26/Risk-Management-for-CI-CD-processes/","text":"Consider a full development and deployment cycle, and the potential risks involved during the different stages in CDP (CI / Continuous Integration, CD / Continuous Delivery, CDP / Continuous Deployment): Code Role Details Stakeholders Individual Developer Pair Programming Mentor DBA Security Team Failure Points Logic flaws Security flaws Code standards issues Safeguards Test Driven Development Red/Green/Refactor Linting tools Testing Docker containers Pair programming Query analysis Static code analysis Commit Role Details Stakeholders Security Team Member for sign-off Engineering Team Lead for sign-off Failure Points Force pushes Merge conflicts Safeguards Master branch protections 3 member sign-off before master merge Commit hooks Test Role Details Stakeholders Individual Developer QA Team Failure Points Broken tests Stale tests False positive tests Safeguards Weekly failure testing triage meeting to catch broken tests Daily cron runs of test suite against mock prod environment Deployment Role Details Stakeholders SysOps Team Individual Developers Support Team Customers Failure Points Broken deployments Dropped customer traffic Safeguards Blue/Green deployment Traffic re-routing Pre deployment spare instance warmup Communicate out to support in order to verify proper staffing levels Runtime Role Details Stakeholders Security Team SysOps Team Engineering Teams Support Team Customers Failure Points High resource usage Slow queries Malicious actors MProvider downtime Safeguards Communicate out to support for new feature awareness and appropriate categories for issues regarding the component System resource alarms for various metrics and slow DB log alerts Instant maintenance page switchover capabilities Status page on redundant providers Application firewalls Database replicas","tags":[]},{"title":"AWS CloudWatch Metrics Example","date":"2020-10-13T12:29:39.000Z","path":"2020/10/13/AWS-CloudWatch-Metrics-example/","text":"AWS CloudWatch MetricsThe interface of Metrics in AWS CloudWatch console: The URL: 1https://ap-southeast-2.console.aws.amazon.com/cloudwatch/home?region=ap-southeast-2#metricsV2:graph=~(metrics~(~(~'AWS*2fRoute53Resolver~'InboundQueryVolume)~(~'.~'OutboundQueryVolume))~view~'timeSeries~stacked~false~region~'ap-southeast-2~stat~'Sum~period~86400~start~'-P28D~end~'P0D);query=~'*7bAWS*2fRoute53Resolver*7d Metrics source: 123456789101112&#123; \"metrics\": [ [ \"AWS/Route53Resolver\", \"InboundQueryVolume\" ], [ \".\", \"OutboundQueryVolume\" ] ], \"view\": \"timeSeries\", \"stacked\": false, \"region\": \"ap-southeast-2\", \"stat\": \"Sum\", \"period\": 86400, \"title\": \"Test\"&#125;","tags":[]},{"title":"Creating AWS Lambda with AWS SAM","date":"2020-02-14T01:12:06.000Z","path":"2020/02/14/Creating-AWS-Lambda-with-AWS-SAM/","text":"This is a simple Lambda with REST API and SNS enabled. Firstly, have a look the Nodejs script: AWS SAM template yaml file: Generate AWS CloudFormation yaml file and package / zip / create an artefact (need to create AWS S3 bucket hello-world-tub in advance): 123456ùúÜ sam package --profile personal --template-file template.yml --output-template-file cloudFormation.yml --s3-bucket hello-sam-tubUploading to 7431f83ac979bfccc26980049807e595 1461 / 1461.0 (100.00%)Successfully packaged artifacts and wrote output template to file cloudFormation.yml.Execute the following command to deploy the packaged templatesam deploy --template-file /Users/terrence/Projects/hello-sam/cloudFormation.yml --stack-name &lt;YOUR STACK NAME&gt; Can also create artefact file with zip command, and upload zip file into AWS S3 bucket: 1ùúÜ zip hello-sam.zip README.md index.js template.yml What AWS CloudFormation yaml file looks like: Deploy application‚Äôs AWS CloudFormation stack with AWS SAM command: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556ùúÜ sam deploy --profile personal --template-file cloudFormation.yml --stack-name hello-sam --capabilities CAPABILITY_IAM Deploying with following values =============================== Stack name : hello-sam Region : None Confirm changeset : False Deployment s3 bucket : None Capabilities : [\"CAPABILITY_IAM\"] Parameter overrides : &#123;&#125;Initiating deployment=====================Waiting for changeset to be created..CloudFormation stack changeset---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Operation LogicalResourceId ResourceType---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ Add HelloWorldFunctionHelloWorldApiPermissionProd AWS::Lambda::Permission+ Add HelloWorldFunctionRole AWS::IAM::Role+ Add HelloWorldFunction AWS::Lambda::Function+ Add HelloWorldTopic AWS::SNS::Topic+ Add ServerlessRestApiDeployment79454cea13 AWS::ApiGateway::Deployment+ Add ServerlessRestApiProdStage AWS::ApiGateway::Stage+ Add ServerlessRestApi AWS::ApiGateway::RestApi---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Changeset created successfully. arn:aws:cloudformation:ap-southeast-2:123456789012:changeSet/samcli-deploy1581737165/48e53ff2-1b50-45d8-bbfd-97652f20d9672020-02-15 14:26:10 - Waiting for stack create/update to completeCloudFormation events from changeset-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ResourceStatus ResourceType LogicalResourceId ResourceStatusReason-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------CREATE_IN_PROGRESS AWS::SNS::Topic HelloWorldTopic Resource creation InitiatedCREATE_COMPLETE AWS::SNS::Topic HelloWorldTopic -CREATE_IN_PROGRESS AWS::IAM::Role HelloWorldFunctionRole Resource creation InitiatedCREATE_COMPLETE AWS::IAM::Role HelloWorldFunctionRole -CREATE_IN_PROGRESS AWS::Lambda::Function HelloWorldFunction Resource creation InitiatedCREATE_COMPLETE AWS::Lambda::Function HelloWorldFunction -CREATE_IN_PROGRESS AWS::ApiGateway::RestApi ServerlessRestApi Resource creation InitiatedCREATE_COMPLETE AWS::ApiGateway::RestApi ServerlessRestApi -CREATE_IN_PROGRESS AWS::Lambda::Permission HelloWorldFunctionHelloWorldApiPermissionProd Resource creation InitiatedCREATE_IN_PROGRESS AWS::ApiGateway::Deployment ServerlessRestApiDeployment79454cea13 Resource creation InitiatedCREATE_COMPLETE AWS::ApiGateway::Deployment ServerlessRestApiDeployment79454cea13 -CREATE_IN_PROGRESS AWS::ApiGateway::Stage ServerlessRestApiProdStage Resource creation InitiatedCREATE_COMPLETE AWS::ApiGateway::Stage ServerlessRestApiProdStage -CREATE_COMPLETE AWS::Lambda::Permission HelloWorldFunctionHelloWorldApiPermissionProd -CREATE_COMPLETE AWS::CloudFormation::Stack hello-sam --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Successfully created/updated stack - hello-sam in None NOTE: The --capabilities CAPABILITY_IAM option is necessary to authorise your stack to create IAM roles, which SAM applications do by default. After application deployed, user subscribes notification will receive email titled - AWS Notification - Subscription Confirmation After confirmation, user will receive an email every time API is invoked. Now log on AWS Console, have a look the resources this Lambda application used in CloudFormation, S3 Bucket, Lambda, IAM, SNS, CloudWatch, API Gateway. After this Lambda application successfully deployed into AWS, you will receive an email asking whether you want to subscribe the SNS topic. You can also unsubscribe the SNS topic. You can manually test Lambda function in AWS Console. References Creating AWS Lambda Applications With SAM by Daniel Weibel, https://itnext.io/creating-aws-lambda-applications-with-sam-dd13258c16dd","tags":[]},{"title":"2019: Year in Review","date":"2019-12-29T04:24:05.000Z","path":"2019/12/29/2019-Year-in-Review/","text":"2019 Âπ¥ÊòØËøáÂéªÂçÅÂπ¥‰∏≠ÊúÄÂ∑ÆÁöÑ‰∏ÄÂπ¥Ôºå‰ΩÜÊàñËÆ∏‰ºöÊòØÊú™Êù•ÂçÅÂπ¥‰∏≠ÊúÄÂ•ΩÁöÑ‰∏ÄÂπ¥„ÄÇ Âõæ 1ÔºöËøô‰∏çÊòØ‰º†ËØ¥ÔºåËøôÊòØ reality. 1 Êúà 24 Êó•ÔºåÊúâËá™Â™í‰ΩìÂèëÂá∫ËØÅÁõë‰ºö‰∫∫‰∫ãÂèòÂä®ÁöÑ‚ÄúËôöÂÅá‚ÄùÊ∂àÊÅØÔºåÂºïËµ∑ÂÖ≥Ê≥®„ÄÇ‰∏≠ÂõΩËØÅÁõë‰ºöÊúâÂÖ≥‰∫∫Â£´ÊåáÂá∫ÔºåËá™Â™í‰Ωì‰∏çÊòØÊ≥ïÂ§ñ‰πãÂú∞ÔºåÂØπ‰∫é‰∏çË¥üË¥£‰ªªÁöÑËôöÂÅá‰ø°ÊÅØ‰º†Êí≠ÔºåÂ∫îÂΩì‰æùÊ≥ï‰æùËßÑÂ§ÑÁêÜ„ÄÇ 1 Êúà 26 Êó•Ôºå‰∏≠ÂõΩÂÆòÊñπÂÆ£Â∏ÉË¥üË¥£ËÇ°Â∏ÇÁõëÁÆ°ÁöÑ‰∏≠ÂõΩËØÅÁõë‰ºö‰∏ªÂ∏≠Êç¢‰∫∫„ÄÇ‰∏âÂπ¥ÂâçÂú®‰∏≠ÂõΩËÇ°Â∏ÇÈÅ≠ÈÅá‚ÄúÁÅæÈöæÊÄßÈáçÂàõ‚ÄùÁöÑËÉåÊôØ‰∏ãÊé•Áè≠ÁöÑÂàòÂ£´‰ΩôÁªìÊùü‰ªªÊúüÔºåÂÖ∂ËÅåÂä°Áî±‰∏≠ÂõΩÂè¶‰∏ÄÂõΩÊúâÈì∂Ë°åÂ∑•ÂïÜÈì∂Ë°åËë£‰∫ãÈïøÊòì‰ºöÊª°Êé•‰ªª„ÄÇ ‚ÄúË∞£Ë®Ä‚ÄùÂ∞±ÊòØ‚ÄúÈÅ•ÈÅ•È¢ÜÂÖàÁöÑÈ¢ÑË®Ä‚Äù„ÄÇ ËÄÅÂàòÁöÑËøôÂº†ÈÖçÂõæÔºåÊòØÂú® salute ‰∏≠ÂõΩËØÅÁõë‰ºöÔºåËøòÊòØ‰∏≠ÂõΩËÇ°Ê∞ëÔºü ‚ÄúÈóÆÂêõËÉΩÊúâÂá†Â§öÊÑÅÔºåÊÅ∞‰ººÊª°‰ªì‰∏≠Áü≥Ê≤π„ÄÇÂ¶ÇËã•ÂΩìÂàùÊ≤°Ââ≤ËÇâÔºåËÄå‰ªäÊÉ≥Êù•ÊÑÅÊõ¥ÊÑÅ„ÄÇ‚Äù ËøôÊòØ 8 Êúà 26 Êó•Êñ∞ÈóªÂ§¥Êù°„ÄÇ‰∏≠Áü≥Ê≤πËÇ°‰ª∑Êî∂‰∫é 6.02 ÂÖÉÔºåÂà∑Êñ∞ÂéÜÂè≤Êñ∞‰Ωé„ÄÇ‰∏≠Áü≥Ê≤πËÇ°‰ª∑ÊúÄÈ´òÊó∂ 48 ÂÖÉÔºå‰∏äÂ∏Ç 12 Âπ¥ÔºåËí∏Âèë‰∫Ü 7 ‰∏á‰∫øÔºå‰ªéÂ∏ÇÂÄº‰∏ÄÂì•Âà∞‚ÄúÂ•óÁâ¢Á¨¨‰∏ÄËÇ°‚Äù„ÄÇ7 ‰∏á‰∫øÁõ∏ÂΩì‰∫éË∑åÊéâ 1 ‰∏™ËãπÊûúÔºåÊàñ 2 ‰∏™‰øÑÁΩóÊñØËÇ°Â∏ÇÁöÑÊÄªÂ∏ÇÂÄº„ÄÇ ‚ÄúÊàëÊúâÊó†Êï∞Ê¨°È™ë‰∏äÂ§ßÁâõÔºåÁªìÊûúÂçäË∑ØË¢´ÂêìË∑ë‰∫Ü„ÄÇ ÁÑ∂ÂêéÁúãÁùÄ‰∫∫ÂÆ∂‰∏ÄÈ£ûÂÜ≤Â§©ÔºåÊÉ≥Â§ßÂì≠ÈÉΩÊ≤°ÊúâÁúºÊ≥™„ÄÇ ÊàëÁúüÊÉ≥ÊääËá™Â∑±ÁöÑË¥±ÊâãÁªôÁ†çÊéâ„ÄÇ‚Äù ‚ÄúÊàëÊúâÊó†Êï∞Ê¨°Ë∏©‰∏äÂ§ßÂ±éÔºåÁªìÊûúÁ°¨Êå∫Âú®ÈÇ£Âá†Âπ¥„ÄÇ ÁÑ∂ÂêéÁ≠âÁùÄÂàÜÁ∫¢‰∏ÄÊØõÊó†ÊúâÔºåÊÉ≥‰∏äËÆøÈÉΩÊ≤°ÊúâËÉÜÂ≠ê„ÄÇ ÊàëÁúüÊÉ≥ÊääËá™Â∑±ÁöÑËÑö‰πüÁªôÁ†çÊéâ„ÄÇ‚Äù ËÆ©‰∏≠ÂõΩËÇ°Ê∞ëÊÄÄÂøµÁöÑÁâõÂ∏ÇÔºåÈÉΩÂÉèÊòØÊÄÄÂøµÁöÑÂàùÊÅã‰∏ÄÊ†∑ÔºåÈÇ£Ê∂àÊï£Â∑≤‰πÖÁöÑÁâõÂë≥‰ªø‰ΩõÂÅö‰∫Ü‰∏ÄÂú∫Êò•Ê¢¶Ëà¨ÁöÑÁæéÂ¶ô„ÄÇ Âõæ 2ÔºöHayne‚Äôs Report. 2 Êúà The Royal Commission into Misconduct in the Banking, Superannuation and Financial Services Industry Final Report, lead by Keith Hayne published. ÂØºËá¥ÂúüÊæ≥ÁªèÊµéÊîØÊü±‰∫ß‰∏öÂõõÂ§ßÈì∂Ë°å‰∏≠‰∏â‰∏™ÁöÑ CEO ÂÖàÂêéÂú®‰ªäÂπ¥‰∏≠Ë¢´Ëø´ËæûËÅå„ÄÇ Âõæ 3ÔºöË∂Ö‰πéÊÉ≥ÂÉèÁöÑÂÆáÂÆô„ÄÇ 4 ÊúàÔºå‰∫∫Á±ªÊúâÂè≤‰ª•Êù•Ëé∑ÂæóÁöÑÈ¶ñÂº†ÈªëÊ¥ûÁÖßÁâá„ÄÇ‰Ωç‰∫éÂ§ÑÂ•≥Â∫ß‰∏≠ÁöÑ M87 ÁöÑË∂ÖÂ§ßË¥®ÈáèÈªëÊ¥ûË∑ùÁ¶ªÊàë‰ª¨Â§ßÁ∫¶ 5500 ‰∏áÂÖâÂπ¥„ÄÇÂÖ∂Ë¥®Èáè‰πãÂ§ßÁ∫¶Âêà 66 ‰∫ø‰∏™Â§™Èò≥„ÄÇ Âõæ 4ÔºöI believe in miracles. Â§ßÈÄâÂâç‰∏Ä‰∏™ÊúàÔºåÂêÑÈ°πÊ∞ëÊÑèË∞ÉÊü•ÈÉΩ tip Labor win the election. Sportsbets back Labor win at odds of $1.16, Coalition $5.80. Labor Á´ûÈÄâÂõ¢ÈòüÂú®ÂÖ®ÂõΩÂêÑÂú∞ÊãâÁ•®ËÆ≤ÊºîÊó∂‰πüÊòØË∏åË∫áÊª°ÂøóÔºåÂäøÂú®ÂøÖËµ¢„ÄÇÊòüÊúüÂÖ≠Á´ûÈÄâÊó•Êó©‰∏äÔºå‚Äú‰∏ªÊµÅ‚Äù TV &amp; newspapers ËøòÈ¢ÑÊµã Labor‚Äôs landslide win„ÄÇ‰ΩÜÈÄâ‰∏æÊúÄÁªàÂú® Coalition ÊàèÂâßÊÄßÁöÑÂ§ßÈÄÜËΩ¨‰∏≠ÁªìÊùü„ÄÇ Ê∞ëÊÑèË∞ÉÊü•Êú∫ÊûÑ‰∏çÂæó‰∏çÊâøËÆ§Ëá™Â∑±ÂêπÂòòÁöÑ Machine Learning / AI Âè™ÊòØÈ™ó‰∫∫ÁöÑÂ∞èÊääÊàè„ÄÇSportsbet Ëµî‰∫Ü $5.2m on its costly error„ÄÇ‚Äú‰∏ªÊµÅ‚ÄùÂ™í‰Ωì‰πü‰∏çÂæó‰∏çÊâáËá™Â∑±ÁöÑËÑ∏Ôºåradical political idiosyncrasy and elitism bias Ê†πÊú¨ÂÅö‰∏ç‰∫Ü‰∏â‰∏™‰ª£Ë°®„ÄÇ Monash University professor Andrew Markus said Australians usually nominated jobs, the economy and financial security as their top concerns and may have recoiled from Labor‚Äôs sweeping plans for tax revenue increases. ‚ÄúIf there‚Äôs a danger that your agenda challenges those economic factors, you‚Äôre on pretty rocky ground.‚Äù Now quiet Australians are heard loud and clear. The swing to the Liberals suggested voters were sceptical of policies to raise $56 billion from changes to dividend rules, $32 billion from negative gearing and $30 billion over a decade from superannuation. ‚ÄúWhat one person receives without working for, another person must work for without receiving.‚Äù Here is the wisdom from Adrian Rogers. Wasn‚Äôt it Labor shadow treasurer Mr. Chris Bowen who said ‚Äúif you do t like us taking away your franking credits then don‚Äôt vote for Labor‚Äù before the election? Well, Mr. Bowen, thank you for your invitation! Âõæ 5ÔºöEluid Kipchoge. 10 Êúà 12 Êó•Ôºå34 Â≤ÅÁöÑËÇØÂ∞º‰∫ö‰∫∫ÔºåÈ©¨ÊãâÊùæ‰∏ñÁïåÁ∫™ÂΩï‰øùÊåÅËÄÖ Eluid KipchogeÔºåÂú®‚Äú‰∏ñÁïåÈü≥‰πê‰πãÈÉΩ‚ÄùÂ••Âú∞Âà©È¶ñÈÉΩÁª¥‰πüÁ∫≥ÔºåÂêëÂÖ®Á®ãÈ©¨ÊãâÊùæ Breaking 2 ‚ÄúÁ†¥‰∫å‚ÄùÁöÑÂÆè‰ºüÁõÆÊ†áÂèëËµ∑‰∏™‰∫∫ËÅå‰∏öÁîüÊ∂ØÁöÑÁ¨¨‰∫åÂ∫¶ÂÜ≤Âáª„ÄÇËøôÊòØ‰∫∫Á±ªË∑®Ë∂äÈ©¨ÊãâÊùæÊñ∞ÈáåÁ®ãÁ¢ëÁöÑÂéÜÂè≤ÊÄß‰∏ÄÂàª„ÄÇÈ©¨ÊãâÊùæÁ™ÅÁ†¥‰∫∫Á±ª 2 Â∞èÊó∂Â§ßÂÖ≥„ÄÇ 1 Â∞èÊó∂ 59 ÂàÜ 40 Áßí In perspective, ÊÉ≥Ë±°‰∏Ä‰∏ãÔºåEluid Kipchoge just runs every 100 meters in 17s, for two hours. 17 frigging seconds! Âõæ 6ÔºöReserve Bank Australia cuts interest rates to historic low. Central bank is literally behind the curve. More ominously, it‚Äôs an indication that asset bubbles are poised to burst, just like the Fed‚Äôs first interest rate cut warned directly ahead of both the tech bust and GFC. Áé∞Âú®ÁöÑ‰∏Ä‰∏™ÁªèÊµéÂπΩÁÅµÂ∞±ÊòØ‚ÄùÂÄ∫Âä°‚Äù„ÄÇ‰∏ã‰∏Ä‰∏™ÁªèÊµéÂç±Êú∫ÂæàÊúâÂèØËÉΩÂ∞±ÊòØÂÄ∫Âä°Âç±Êú∫„ÄÇ ÊîøÂ∫úÂÄ∫Ôºå‰ºÅ‰∏öÂÄ∫Ôºå‰∏™‰∫∫ÂÄ∫ÔºåÂ§ßÈáèÁöÑË¥üÂÄ∫ÔºåË∂ÖËøá‰∫ÜÂÄüÊ¨æËÄÖËá™Ë∫´ÂÅøËøòËÉΩÂäõËÄåÂºïÂèëÁöÑÂÄ∫Âä°Âç±Êú∫ÔºåÈáëËûçÊµ∑Âï∏„ÄÇÂÖàË¥¢Âä°Âõ∞Â¢ÉÔºåÂÜçÁªèÊµéÁî±‰∏çÁ®≥ÂÆöËΩ¨Ëá≥Â¥©Ê∫ÉÔºå‰∏≠‰∫ßÂèòÊàêÁ†¥‰∫ßÔºå‰ªéËÄåÈÄ†ÊàêÁ§æ‰ºöÁöÑÂ§ßÂä®Ëç°„ÄÇ Âõæ 7ÔºöDow 28000. In November, another historical moment, Dow closes above 28,000. From 27,000 to 28,000, get there just in 90 trading days. ÂÖ®ÁêÉÁöÑËÇ°Â∏ÇÂèØ‰ª•ËØ¥Ê∞îÂäøÂ¶ÇËôπ„ÄÇÁæéÂõΩËÇ°Â∏ÇÁöÑÂ∏ÇÂÄºÂíå GDP ÊØîÂÄºÂ∑≤ÁªèË∂ÖËøá‰∫Ü 150%ÔºåË∂ÖË∂ä‰∫Ü 2000 Âπ¥‰∫íËÅîÁΩëÊ≥°Ê≤´Âíå 2007 Âπ¥ÊàøÂú∞‰∫ßÊ≥°Ê≤´È°∂Â≥∞Êó∂ÊúüÁöÑ‰º∞ÂÄº„ÄÇ ÊàøÂú∞‰∫ßÂ∏ÇÂú∫ÂêåÊ†∑ÊòØÈ´òÊ≠åÁåõËøõ„ÄÇÁæéÂõΩÁöÑÊàøÂú∞Â∑≤ÁªèË∂ÖËøá‰∫Ü 2007 Âπ¥È°∂Â≥∞ 20% ÁöÑÊ∞¥Âπ≥‰∫Ü„ÄÇ‰∏çÁÆ°‰ªé‰ªÄ‰πàÊåáÊ†áË°°ÈáèÔºå‰∏ÄÊâπÊåáÊ†áÈÉΩÊòæÁ§∫ÂΩìÂâçËµÑÊú¨Â∏ÇÂú∫ÁöÑ‰º∞ÂÄºÈÉΩÂ∑≤ÁªèË∂ÖËøá‰∫Ü 2007 Âπ¥ÔºåËøôÊòØ‰∏™Â∑®Â§ßÁöÑÊ≥°Ê≤´„ÄÇ Êúâ‰∫∫È¢ÑÊµãÊòéÂπ¥ 2020 Âπ¥Â∞ÜÊòØÊ¨°Ë¥∑Âç±Êú∫‰ª•Êù•ÊúÄÈöæÁöÑ‰∏ÄÂπ¥„ÄÇ‰ΩÜÂõ†‰∏∫‰ºº‰πéÂ•ΩÂÉèÊØèÁªèËøá‰∏ÄÂπ¥ÈÉΩÊòØËøáÂéª 10 Âπ¥‰∏≠ÊúÄÈöæÁöÑ‰∏ÄÂπ¥ÔºåÂÖ®ÁêÉÁªèÊµéÂÜç‰πüÊ≤°ÊúâÂõûÂà∞ËøáÂø´ÈÄüÂ¢ûÈïøÁöÑÂø´ËΩ¶ÈÅì‰∏äÔºåÊâÄ‰ª•ÊòéÂπ¥ÊâçÊòØÂàöÂºÄÂßãÔºåÊú™Êù•ÂçÅÂπ¥ÊâçÊòØÊúÄËâ∞ÈöæÁöÑ„ÄÇ ÁõÆÂâçÂÄ∫Âä°Êù†ÊùÜË∂ÖËøá‰∫Ü 250%„ÄÇÂÖ®ÁêÉÂêÑÂõΩÂ§ÆË°å‰ª•Èõ∂Âà©ÁéáÂíåË¥üÂà©ÁéáÁª¥ÊåÅ„ÄÇÂú®ËøôÁßçÊÉÖÂΩ¢‰∏ãÔºåÂøÖÁÑ∂ÂØºËá¥ËÇ°Â∏ÇÂíåÊàøÂú∞‰∫ßÂ∏ÇÂú∫Ê≥°Ê≤´„ÄÇ ‰∏ÄÊó¶Ëøô‰∏§‰∏™Ê≥°Ê≤´Á†¥ÁÅ≠ÔºåÂÆû‰ΩìÁªèÊµé‰πüÂøÖÁÑ∂‰ºöÂèóÂà∞ÂΩ±Âìç„ÄÇ‰ªé 400 Â§öÂπ¥ÁöÑÁªèÊµéÂè≤‰∏≠ÂèØ‰ª•ÂæóÂá∫ÁöÑÁªìËÆ∫Â∞±ÊòØÂ∏ÇÂú∫ËßÑÂæãÂèØ‰ª•Êé®ËøüÔºå‰ΩÜ‰ªéÊú™Áº∫Â∏≠„ÄÇ Âõæ 8ÔºöHome grown farm. ‰ª•ÂÜúË°•Â∑•„ÄÇÁªèÊµé‰∏çÊôØÊ∞îÔºåÊäïËµÑÂõûÊä•‰ΩéÔºåËÇâÁ±ªÔºåÁîüËî¨ÂíåÊ∞¥Êûú‰ª∑Ê†ºÂ±ÖÈ´ò‰∏¥‰∏ãÁöÑÁéØÂ¢É‰∏≠‰æùÈù† home grownÔºåÂÆ∂‰∏≠ÁõÜÊ†ΩÁöÑÊùèÔºåËãπÊûúÂíåÊ©ÑÊ¶ÑÂº•Ë°•ÂáèÂ∞ëÁöÑÊî∂ÂÖ•ÔºåÊâ∂ÊåÅÂ¢ûÂ§ßÁöÑÂºÄÈîÄ„ÄÇ Âõæ 9ÔºöYear in sports - Personal Best. Âàõ\bËÆ∞ÂΩïÁöÑ‰∏ÄÂπ¥„ÄÇË∑ëÂä®Ë∑ùÁ¶ªÔºàÂåÖÊã¨Ë∑ëÊ≠•ÂíåÁΩëÁêÉÔºâËææÂà∞ 1300+ ÂÖ¨ÈáåÔºåÁõ∏ÂΩì‰∫é‰ªéÂåó‰∫¨Ë∑ëÂà∞‰∏äÊµ∑„ÄÇClimbing 14,652mÔºåÁõ∏ÂΩì‰∫éÊîÄÁôª‰∫Ü 1.7 ‰∏™Áè†Á©ÜÊúóÁéõÂ≥∞ÁöÑÈ´òÂ∫¶„ÄÇ ‰∏çÂõ†Â≤ÅÊúàË£πÊ≠•‰∏çÂâçÔºå‰∏çÂõ†Á£®ÈöæÊîæÂºÉÊ¢¶ÊÉ≥Ôºå‰∏çÂõ†ÊûÅÈôêÂÅúÊ≠¢ÂâçËøõ„ÄÇA journey of a thousand miles begins with a single step. Keep running!","tags":[]},{"title":"AWS EKS for Fargate, with eksctl","date":"2019-12-07T11:33:38.000Z","path":"2019/12/07/AWS-EKS-on-Fargate-with-eksctl/","text":"AWS EKS, with eksctlSecond try with AWS EKS on Fargate. This time with eksctl. Create EKS cluster: 12345678910111213141516171819202122232425ùúÜ eksctl create cluster --name sandpit --version 1.14 --region us-east-2 --fargate[‚Ñπ] eksctl version 0.11.1[‚Ñπ] using region us-east-2[‚Ñπ] setting availability zones to [us-east-2b us-east-2a us-east-2c][‚Ñπ] subnets for us-east-2b - public:192.168.0.0/19 private:192.168.96.0/19[‚Ñπ] subnets for us-east-2a - public:192.168.32.0/19 private:192.168.128.0/19[‚Ñπ] subnets for us-east-2c - public:192.168.64.0/19 private:192.168.160.0/19[‚Ñπ] using Kubernetes version 1.14[‚Ñπ] creating EKS cluster \"sandpit\" in \"us-east-2\" region with Fargate profile[‚Ñπ] if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-east-2 --cluster=sandpit'[‚Ñπ] CloudWatch logging will not be enabled for cluster \"sandpit\" in \"us-east-2\"[‚Ñπ] you can enable it with 'eksctl utils update-cluster-logging --region=us-east-2 --cluster=sandpit'[‚Ñπ] Kubernetes API endpoint access will use default of &#123;publicAccess=true, privateAccess=false&#125; for cluster \"sandpit\" in \"us-east-2\"[‚Ñπ] 1 task: &#123; create cluster control plane \"sandpit\" &#125;[‚Ñπ] building cluster stack \"eksctl-sandpit-cluster\"[‚Ñπ] deploying stack \"eksctl-sandpit-cluster\"[‚úî] all EKS cluster resources for \"sandpit\" have been created[‚úî] saved kubeconfig as \"/Users/terrence/.kube/config\"[‚Ñπ] creating Fargate profile \"fp-default\" on EKS cluster \"sandpit\"[‚Ñπ] created Fargate profile \"fp-default\" on EKS cluster \"sandpit\"[‚Ñπ] \"coredns\" is now schedulable onto Fargate[‚Ñπ] \"coredns\" is now scheduled onto Fargate[‚Ñπ] \"coredns\" pods are now scheduled onto Fargate[‚Ñπ] kubectl command should work with \"/Users/terrence/.kube/config\", try 'kubectl get nodes'[‚úî] EKS cluster \"sandpit\" in \"us-east-2\" region is ready Create and add EKS mansged node group: 123456789101112131415161718192021ùúÜ eksctl create nodegroup --cluster sandpit --name workers --node-type t3a.medium --ssh-access --ssh-public-key aws-us-key --managed[‚Ñπ] eksctl version 0.11.1[‚Ñπ] using region us-east-2[‚Ñπ] will use version 1.14 for new nodegroup(s) based on control plane version[‚Ñπ] using EC2 key pair %!!(MISSING)q(*string=&lt;nil&gt;)[‚Ñπ] 1 nodegroup (workers) was included (based on the include/exclude rules)[‚Ñπ] will create a CloudFormation stack for each of 1 managed nodegroups in cluster \"sandpit\"[‚Ñπ] 1 task: &#123; 1 task: &#123; create managed nodegroup \"workers\" &#125; &#125;[‚Ñπ] building managed nodegroup stack \"eksctl-sandpit-nodegroup-workers\"[‚Ñπ] deploying stack \"eksctl-sandpit-nodegroup-workers\"[‚úî] created 0 nodegroup(s) in cluster \"sandpit\"[‚Ñπ] nodegroup \"workers\" has 2 node(s)[‚Ñπ] node \"ip-192-168-47-175.us-east-2.compute.internal\" is ready[‚Ñπ] node \"ip-192-168-87-98.us-east-2.compute.internal\" is ready[‚Ñπ] waiting for at least 2 node(s) to become ready in \"workers\"[‚Ñπ] nodegroup \"workers\" has 2 node(s)[‚Ñπ] node \"ip-192-168-47-175.us-east-2.compute.internal\" is ready[‚Ñπ] node \"ip-192-168-87-98.us-east-2.compute.internal\" is ready[‚úî] created 1 managed nodegroup(s) in cluster \"sandpit\"[‚Ñπ] checking security group configuration for all nodegroups[‚Ñπ] all nodegroups have up-to-date configuration Kubernetes DashboardInstall Kubernetes Dashboard in Kubernetes cluster: 12345678910111213141516171819ùúÜ kubectl get services --all-namespacesNAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGEdefault kubernetes ClusterIP 10.100.0.1 &lt;none&gt; 443/TCP 70mkube-system kube-dns ClusterIP 10.100.0.10 &lt;none&gt; 53/UDP,53/TCP 70mkube-system metrics-server ClusterIP 10.100.142.106 &lt;none&gt; 443/TCP 14mkubernetes-dashboard dashboard-metrics-scraper ClusterIP 10.100.91.78 &lt;none&gt; 8000/TCP 11mkubernetes-dashboard kubernetes-dashboard ClusterIP 10.100.75.0 &lt;none&gt; 443/TCP 11mùúÜ kubectl get pods --all-namespacesNAMESPACE NAME READY STATUS RESTARTS AGEkube-system aws-node-cnzrv 1/1 Running 0 40mkube-system aws-node-m9tjp 1/1 Running 0 40mkube-system coredns-7f5cccffc-h44mz 1/1 Running 0 65mkube-system coredns-7f5cccffc-hmx7g 1/1 Running 0 65mkube-system kube-proxy-7kn62 1/1 Running 0 40mkube-system kube-proxy-g57ph 1/1 Running 0 40mkube-system metrics-server-7fcf9cc98b-ftl4k 1/1 Running 0 14mkubernetes-dashboard dashboard-metrics-scraper-677768c755-mxlmc 1/1 Running 0 11mkubernetes-dashboard kubernetes-dashboard-995fd6fb4-xqcj5 1/1 Running 0 11m Connect Kubernetes Dashboard via proxy: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960ùúÜ cat .kube/configapiVersion: v1clusters:- cluster: certificate-authority: /Users/terrence/.minikube/ca.crt server: https://192.168.99.100:8443 name: minikube- cluster: certificate-authority-data: LS0tLS1CRUd ... tLS0tLQo= server: https://0559DE89F43B8766B56C7FD066C6C50F.yl4.us-east-2.eks.amazonaws.com name: sandpit.us-east-2.eksctl.iocontexts:- context: cluster: sandpit.us-east-2.eksctl.io user: ADMMiaoT@sandpit.us-east-2.eksctl.io name: ADMMiaoT@sandpit.us-east-2.eksctl.io- context: cluster: minikube user: minikube name: minikubecurrent-context: ADMMiaoT@sandpit.us-east-2.eksctl.iokind: Configpreferences: &#123;&#125;users:- name: ADMMiaoT@sandpit.us-east-2.eksctl.io user: exec: apiVersion: client.authentication.k8s.io/v1alpha1 args: - token - -i - sandpit command: aws-iam-authenticator env: - name: AWS_PROFILE value: paradise-dev- name: minikube user: client-certificate: /Users/terrence/.minikube/client.crt client-key: /Users/terrence/.minikube/client.keyùúÜ kubectl -n kube-system get secret | grep eks-admin | awk '&#123;print $1&#125;'eks-admin-token-s2gf5ùúÜ kubectl -n kube-system describe secret eks-admin-token-s2gf5Name: eks-admin-token-s2gf5Namespace: kube-systemLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: eks-admin kubernetes.io/service-account.uid: fa3cf514-18bc-11ea-bbdd-0a4cd5e8dc70Type: kubernetes.io/service-account-tokenData====ca.crt: 1025 bytesnamespace: 11 bytestoken: eyJhbGciOiJSUzI1NiIs ... hpY8upQlA2q40gùúÜ kubectl proxy Visit URL http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#!/login Choose Token, paste the token output from the previous command into the Token field, and choose SIGN IN. With AWS managed nodes, on Node EC2 Instance: First Docker applicationDeploy first Docker application react-typescript, from Docker Hub https://hub.docker.com/r/jtech/react-typescript, into Kubernetes. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687ùúÜ kubectl run react-typescript --image=jtech/react-typescript --port 3000kubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead.deployment.apps/react-typescript createdùúÜ kubectl describe deploymentsName: react-typescriptNamespace: defaultCreationTimestamp: Mon, 09 Dec 2019 14:56:09 +1100Labels: run=react-typescriptAnnotations: deployment.kubernetes.io/revision: 1Selector: run=react-typescriptReplicas: 1 desired | 1 updated | 1 total | 0 available | 1 unavailableStrategyType: RollingUpdateMinReadySeconds: 0RollingUpdateStrategy: 25% max unavailable, 25% max surgePod Template: Labels: run=react-typescript Containers: react-typescript: Image: jtech/react-typescript Port: 3000/TCP Host Port: 0/TCP Environment: &lt;none&gt; Mounts: &lt;none&gt; Volumes: &lt;none&gt;Conditions: Type Status Reason ---- ------ ------ Available False MinimumReplicasUnavailable Progressing True ReplicaSetUpdatedOldReplicaSets: &lt;none&gt;NewReplicaSet: react-typescript-867c948446 (1/1 replicas created)Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 71s deployment-controller Scaled up replica set react-typescript-867c948446 to 1ùúÜ kubectl describe pods react-typescriptName: react-typescript-867c948446-qtvrpNamespace: defaultPriority: 2000001000PriorityClassName: system-node-criticalNode: fargate-ip-192-168-183-250.us-east-2.compute.internal/192.168.183.250Start Time: Mon, 09 Dec 2019 14:56:59 +1100Labels: eks.amazonaws.com/fargate-profile=fp-default pod-template-hash=867c948446 run=react-typescriptAnnotations: kubernetes.io/psp: eks.privilegedStatus: RunningIP: 192.168.183.250Controlled By: ReplicaSet/react-typescript-867c948446Containers: react-typescript: Container ID: containerd://2ea5f1ea4fb731eb844f0e267581e9e188d29ab7a639b7b8ca50c83cfb12b4c3 Image: jtech/react-typescript Image ID: docker.io/jtech/react-typescript@sha256:0951fe4d9a24390123c7aa23612c8cdf1d8191a9d8e7d3cbc8bb4d8d763e0ce5 Port: 3000/TCP Host Port: 0/TCP State: Running Started: Mon, 09 Dec 2019 14:57:28 +1100 Ready: True Restart Count: 0 Environment: &lt;none&gt; Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-knpqq (ro)Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled TrueVolumes: default-token-knpqq: Type: Secret (a volume populated by a Secret) SecretName: default-token-knpqq Optional: falseQoS Class: BestEffortNode-Selectors: &lt;none&gt;Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300sEvents: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Pulling 76s kubelet, fargate-ip-192-168-183-250.us-east-2.compute.internal Pulling image \"jtech/react-typescript\" Normal Pulled 49s kubelet, fargate-ip-192-168-183-250.us-east-2.compute.internal Successfully pulled image \"jtech/react-typescript\" Normal Created 49s kubelet, fargate-ip-192-168-183-250.us-east-2.compute.internal Created container react-typescript Normal Started 49s kubelet, fargate-ip-192-168-183-250.us-east-2.compute.internal Started container react-typescript Expose service: 123456789101112131415161718192021222324252627ùúÜ kubectl expose deployment react-typescript --type=\"NodePort\"service/react-typescript exposedùúÜ kubectl describe services react-typescriptName: react-typescriptNamespace: defaultLabels: run=react-typescriptAnnotations: &lt;none&gt;Selector: run=react-typescriptType: NodePortIP: 10.100.54.37Port: &lt;unset&gt; 3000/TCPTargetPort: 3000/TCPNodePort: &lt;unset&gt; 31799/TCPEndpoints: 192.168.183.250:3000Session Affinity: NoneExternal Traffic Policy: ClusterEvents: &lt;none&gt;ùúÜ kubectl get services --all-namespacesNAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGEdefault kubernetes ClusterIP 10.100.0.1 &lt;none&gt; 443/TCP 46hdefault react-typescript NodePort 10.100.54.37 &lt;none&gt; 3000:31799/TCP 4m55skube-system kube-dns ClusterIP 10.100.0.10 &lt;none&gt; 53/UDP,53/TCP 46hkube-system metrics-server ClusterIP 10.100.142.106 &lt;none&gt; 443/TCP 45hkubernetes-dashboard dashboard-metrics-scraper ClusterIP 10.100.91.78 &lt;none&gt; 8000/TCP 45hkubernetes-dashboard kubernetes-dashboard ClusterIP 10.100.75.0 &lt;none&gt; 443/TCP 45h Run kubectl proxy and connect to react-typscript application on URL: http://localhost:8001/api/v1/namespaces/default/services/http:react-typescript:3000/proxy/ References eksctl, a simple CLI tool for creating clusters on Amazon‚Äôs new managed Kubernetes service for EC2 - EKS. Written in Go, uses CloudFormation, https://eksctl.io/ AWS EKS, https://docs.aws.amazon.com/eks/latest/userguide/what-is-eks.html Tutorial: Deploy Kubernetes Dashboard, https://docs.aws.amazon.com/eks/latest/userguide/dashboard-tutorial.html","tags":[]},{"title":"AWS EKS for Fargate","date":"2019-12-04T23:26:58.000Z","path":"2019/12/05/AWS-EKS-with-Fargate/","text":"AWS EKSAfter AWS EKS for Fargate annouced in Re:Invent 2019 - Amazon EKS on AWS Fargate Now Generally Available, I have a quick spin. General configuration: Fargate profile configuration: Fargate roles: CustomEKSRole role has AmazonEKSClusterPolicy and AmazonEKSServicePolicy. CustomEKSFargatePodExecutionRole role has AmazonEKSFargatePodExecutionRolePolicy, and Trust relationships: 12345678910111213&#123; \"Version\": \"2012-10-17\", \"Statement\": [ &#123; \"Sid\": \"\", \"Effect\": \"Allow\", \"Principal\": &#123; \"Service\": \"eks-fargate-pods.amazonaws.com\" &#125;, \"Action\": \"sts:AssumeRole\" &#125; ]&#125; CustomEKSWorkerNodeRole role has AmazonEKSWorkerNodePolicy, AmazonEKS_CNI_Policy, AmazonEC2ContainerRegistryReadOnly, and Trust relationships: 123456789101112&#123; \"Version\": \"2012-10-17\", \"Statement\": [ &#123; \"Effect\": \"Allow\", \"Principal\": &#123; \"Service\": \"ec2.amazonaws.com\" &#125;, \"Action\": \"sts:AssumeRole\" &#125; ]&#125; Namespace for Fargate profile Pod Selectors is default. Subnets for Fargate, including private subnets (subnet without Internet Gateway): References Getting Started with AWS Fargate on Amazon EKS, https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html Amazon EKS Worker Node IAM Role, https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html EKS + Fargate = Extensibility of Kubernetes + Serverless Benefits, https://itnext.io/eks-fargate-extensibility-of-kubernetes-serverless-benefits-77599ac1763","tags":[]},{"title":"Why React?","date":"2019-12-01T02:40:56.000Z","path":"2019/12/01/Why-React/","text":"A new pedigree of Frontend Development. The following are the preferred technical choices for any new projects that do not have a ‚Äúhammer whats already there‚Äú constraint that have been chosen for consistency. Programming Language: TypeScript Alternatives to avoid: Raw JS / Babel: Types can prevent a significant amount of bugs and provide a great means of documenting code that can be validated by a compiler. Therefore we will not dabble in untyped programming languages for Frontend development. Other TypeSafe alternatives: Dart / Elm / Blazor - typed compile to JavaScript languages: Browsers operate on JavaScript using a language that is too far removed from JS means people will need to learn two language and fix bugs at two levels. Flow - A facebook alternative to TypeScript. Flow was a decent experiment into JavaScript type safety by the Facebook team, but news from inside Facebook (chats at conferences) is that it is not actively getting maintained. Therefore it should be avoided. UI Library: ReactAlternatives to avoid: Angular: Angular goes through significant breaking changes as can be witnessed by the changelog. Also Angular is a full framework (as opposed to a library), but people rarely use it as a framework as there will be inevitable external dependencies for alternative (even better) community tools e.g. rxjs for state, axios for api etc. Vue: Vue is the third most popular choice. However it not backed by a major enterprise (Facebook for React, Google for Angular) Svelte: Same reasons as Vue. State Management: MobXAlternatives to avoid: Redux: Redux is definitely the more popular choice in the React community. However most people will use it with some additional middleware library e.g. redux-thunk or redux-saga leading to multiple ways of doing Frontend. Also, Redux is significantly more verbose (because of always new object creation) and difficult to optimise (because of no internal knowledge of what changed). Styles: CSS in JSPrefer Emotion or TypeStyle over others. Alternatives to avoid: CSS preprocessor (e.g. sass / css-modules). For CSS in JS there is an excellent presentation that you should checkout. Key reasons are clear code co-location and management practices for CSS, the same way React does it for Html (with JSX). End to End Testing : CypressCypress for E2E testing. Alternatives to avoid: Selenium based solutions (e.g. Protractor / Nightwatch). Selenium operates over a wire transfer protocol that makes it impossible to provide many of the debugging features provided by Cypress. Cypress operates in process with the tests making automatic retries with greater flake resistance and a significantly improved debugging experience. HTTP RequestsPrefer axios due to is built in TypeScript definitions, great browser support and community guidance. Alternatives to avoid: fetch: Needs polyfill and needs explicit calls for json de-serialization.","tags":[]},{"title":"A PC person's guide to Mac","date":"2019-11-28T03:24:25.000Z","path":"2019/11/28/A-PC-person-s-guide-to-Mac/","text":"PreludeThis is a re-posted article I published on May 19th, 2012, long long time ago on the currently already died Google Plus. Bought a lowest entry level Macbook Pro 13‚Äù i5 refurbished during the week. This is the first ever Apple product I bought. I‚Äôm not a fan boy of sleeky, popular iPhone. I keep poo-pooing iPad. But because of the admiration of MBP‚Äôs impeccable design and high quality, moreover as a tribute to Steve Jobs, I join the cohort of yuppies, with a silver MPB on my laptop. Macbook Pro package comes without Mac OS X Lion installation DVD. You have to re-install OS from internet. Impeccable design and high quality product, even the refurbished one. However, as a typical PC person living a life of hacker. There should no boundary, no limitation, no rules can‚Äôt be broken. In order to maximise all the potentials inside this piece of hardware, and get my investment back, I also ordered 16GB DDR3 RAM, 240GB SATA3 SSD this week from two computer parts shops, at the best price I can find on the market. After some tweak to get rid of the bottleneck in the overall performance, finally this baby is muscled up. Refurbished MBP, $1189.00 paid on credit card with free shipping. 16GB Patriot DDR3 RAM for Mac, $150 on cash. Corsair Force SATA3 240GB SSD, $295 on cash. The happiness and achievement to get something done after a long time planning, researching, waiting, torture and agony, priceless. There is something money can‚Äôt buy. For everything else, there is a Mastercard. And you have to work harder to earn your dole and make this happen. Totally under 1700 dollars investment will keep me happy for a long time. I reckon it will be good money spent on. If you see the used to be memory hogging applications like M$ Office and Eclipse , suddenly they all jump on your face when you click and open them, the blissful feeling is hardly to describe in a single word, especially you need reward and motivate yourself if you were kept in the shity work. Lifespan? Certainly not. Longevity? Probably not. However, what else you can do if you don‚Äôt hack it? Need to change my PC mindset finally. Keep reminding me ‚ÄúDon‚Äôt panic, you are using a Mac.‚Äù","tags":[]},{"title":"Run ssh and scp with AWS Session Manager","date":"2019-11-22T01:09:05.000Z","path":"2019/11/22/Run-ssh-and-scp-with-AWS-Session-Manager/","text":"AWS Session ManagerNew AWS Systems Manager, including Session Manager is another step enhance security on Cloud. Here are step by step how to set up. You have ec2-user account on AWS EC2 instance. On localhost: 123456789101112131415161718192021222324252627ùúÜ cat .aws/config[default]output = jsonregion = ap-southeast-2[session]output = jsonregion = ap-southeast-2ùúÜ cat .aws/credentials[default]aws_access_key_id = ASIANPOWERHOUSEBLAHBLAHaws_secret_access_key = aGLMountainLionPIEXL0UK0TunalNB61Kt+GuavaVm4tAD[session]aws_access_key_id = ASIANPOWERHOUSEBLAHBLAHaws_secret_access_key = aGLMountainLionPIEXL0UK0TunalNB61Kt+GuavaVm4tADaws_session_token = FwoGZXIvYXdzEB8aDDuzeYcE5QDFo0 ... z2h/Px7nUMEWaZOZZw==ùúÜ ssh -i .ssh/aws-key.pem -l ec2-user ec2-3-121-69-96.ap-southeast-2.compute.amazonaws.comLast login: Fri Nov 22 01:17:33 2019 from 155.144.114.41 __| __|_ ) _| ( / Amazon Linux 2 AMI ___|\\___|___|https://aws.amazon.com/amazon-linux-2/ NOTE: Need ROOT access key pair ASIANPOWERHOUSEBLAHBLAH above setup in sandpit profile to run aws sts command. NOTE: IAM role for EC2 instance need to have AmazonSSMManagedInstanceCore policy. So create a customised role CustomAmazonSSMManagedInstanceCore in AWS IAM including AmazonSSMManagedInstanceCore policy, and bind this IAM role with EC2 instance, also with security group and key pair. Install all the dependencies latest Systems Manager Agent on your EC2 instance; enabled ‚ÄúAgent auto update‚Äù under Managed Instances in AWS Systems Manager latest AWS CLI on localhost latest Session Manager Plugin on localhost Add customised RunAs users via ‚ÄúRun Command‚Äù To elevated SSM_pwr_user, a customised user to allow login EC2 instance, with command: 12ùúÜ useradd -g wheel SSM_pwr_userùúÜ echo \"SSM_pwr_user ALL=(ALL) NOPASSWD:ALL\" &gt; /etc/sudoers.d/SSM_pwr_user Updated solution if SSM throws error ‚ÄúUnable to start shell: failed to start pty since RunAs user ssm-user does not exist‚Äú: 123ùúÜ useradd -g wheel ssm-userùúÜ cd /etc/sudoers.dùúÜ echo \"ssm-user ALL=(ALL) NOPASSWD:ALL\" &gt; ssm-agent-users Update SSH config file on localhost to proxy commands through the AWS Session Manager for any EC2 instance id 12345ùúÜ cat .ssh/config# SSH over Session Managerhost i-* mi-* ProxyCommand sh -c \"aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters 'portNumber=%p'\" Generate session token 123456789101112ùúÜ dateThu 21 Nov 2019 04:33:03 UTCùúÜ aws sts get-session-token --duration-seconds 129600 --profile sandpit&#123; \"Credentials\": &#123; \"SecretAccessKey\": \"I7brpY8XWDWYwwyUdp5PLq7cxpskuMSHyBtPjPNE\", \"SessionToken\": \"FwoGZXIvYXdzENL//////////wEaDKKdWTVmCrwKRiMbOSKCAbkQr ... YiNntciJszsZVRypXz1HTfa3gbcKoNXHon8=\", \"Expiration\": \"2019-11-22T16:33:12Z\", \"AccessKeyId\": \"ASIASZPQ3TMDVJVIGM7H\" &#125;&#125; If AWS user ec2-user has MFA enabled, generate session token like this: 1ùúÜ aws sts get-session-token --duration-seconds 129600 --serial-number arn:aws:iam::910218657901234:mfa/root-account-mfa-device --token-code 251556 Add session token in AWS credentials file on localhost, and test 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667ùúÜ cat .aws/credentials[default]aws_access_key_id = ASIANPOWERHOUSEBLAHBLAHaws_secret_access_key = aGLMountainLionPIEXL0UK0TunalNB61Kt+GuavaVm4tAD[session]aws_access_key_id = ASIASZPQ3TMDVJVIGM7Haws_secret_access_key = I7brpY8XWDWYwwyUdp5PLq7cxpskuMSHyBtPjPNEaws_session_token = FwoGZXIvYXdzENL//////////wEaDKKdWTVmCrwKRiMbOSKCAbkQr ... YiNntciJszsZVRypXz1HTfa3gbcKoNXHon8=ùúÜ aws ssm start-session --target i-e2f189dashfdf65weqfwda2 --profile sessionStarting session with SessionId: ec2-user-094c34172bdc6fc22sh-4.2$ whoamissm-userùúÜ aws ssm send-command --instance-ids \"i-e2f189dashfdf65weqfwda2\" --document-name \"AWS-RunShellScript\" --comment \"IP config\" --parameters commands=ifconfig --output textCOMMAND 39e80533-376e-46fa-bb11-8daf040fe80f IP config 0 0 AWS-RunShellScript 0 1574377262.9 50 0 1574370062.9 Pending Pending 1CLOUDWATCHOUTPUTCONFIG FalseINSTANCEIDS i-e2f189dashfdf65weqfwda2NOTIFICATIONCONFIGCOMMANDS ifconfigùúÜ aws ssm list-command-invocations --command-id 39e80533-376e-46fa-bb11-8daf040fe80f --details --profile personal&#123; \"CommandInvocations\": [ &#123; \"Comment\": \"IP config\", \"Status\": \"Success\", \"CommandPlugins\": [ &#123; \"Status\": \"Success\", \"ResponseStartDateTime\": 1574370063.609, \"StandardErrorUrl\": \"\", \"OutputS3BucketName\": \"\", \"OutputS3Region\": \"ap-southeast-2\", \"OutputS3KeyPrefix\": \"\", \"ResponseCode\": 0, \"Output\": \"eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 9001\\n inet 172.31.9.155 netmask 255.255.240.0 broadcast 172.31.15.255\\n inet6 fe80::69:c9ff:fe76:91ae prefixlen 64 scopeid 0x20&lt;link&gt;\\n ether 02:69:c9:76:91:ae txqueuelen 1000 (Ethernet)\\n RX packets 60339 bytes 17254584 (16.4 MiB)\\n RX errors 0 dropped 0 overruns 0 frame 0\\n TX packets 56971 bytes 13112880 (12.5 MiB)\\n TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0\\n\\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536\\n inet 127.0.0.1 netmask 255.0.0.0\\n inet6 ::1 prefixlen 128 scopeid 0x10&lt;host&gt;\\n loop txqueuelen 1000 (Local Loopback)\\n RX packets 0 bytes 0 (0.0 B)\\n RX errors 0 dropped 0 overruns 0 frame 0\\n TX packets 0 bytes 0 (0.0 B)\\n TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0\\n\\n\", \"ResponseFinishDateTime\": 1574370063.634, \"StatusDetails\": \"Success\", \"StandardOutputUrl\": \"\", \"Name\": \"aws:runShellScript\" &#125; ], \"ServiceRole\": \"\", \"CloudWatchOutputConfig\": &#123; \"CloudWatchLogGroupName\": \"\", \"CloudWatchOutputEnabled\": false &#125;, \"InstanceId\": \"i-e2f189dashfdf65weqfwda2\", \"DocumentName\": \"AWS-RunShellScript\", \"NotificationConfig\": &#123; \"NotificationArn\": \"\", \"NotificationEvents\": [], \"NotificationType\": \"\" &#125;, \"DocumentVersion\": \"\", \"StatusDetails\": \"Success\", \"StandardOutputUrl\": \"\", \"StandardErrorUrl\": \"\", \"InstanceName\": \"\", \"CommandId\": \"39e80533-376e-46fa-bb11-8daf040fe80f\", \"RequestedDateTime\": 1574370062.995 &#125; ]&#125; Monitor AWS Session Manager log /var/log/amazon/ssm/amazon-ssm-agent.log on EC2 instance Test ssh command with session token 12345678ùúÜ ssh -i .ssh/aws-key.pem -l ec2-user i-e2f189dashfdf65weqfwda2Last login: Fri Nov 22 00:19:32 2019 from localhost __| __|_ ) _| ( / Amazon Linux 2 AMI ___|\\___|___|https://aws.amazon.com/amazon-linux-2/ Test scp command with session token 12ùúÜ scp -i .ssh/aws-key.pem /tmp/adobegc.log ec2-user@i-e2f189dashfdf65weqfwda2:/tmpstack-overflow.log 100% 67KB 437.0KB/s 00:00 Transferring files directly is not possible with the AWS Session Manager. You should use S3 bucket and the AWS CLI to exchange data. Doing so is not quite the same as using scp. OKTASet up integrated OKTA authentication with session. Have you OKTA AWS CLI installed at first, and configure it: 12345678910111213141516171819ùúÜ cat ~/.okta-aws[default]base-url = hello.paradise.org## The remaining parameters are optional.## You will be prompted for them, if they're not included here.username = terrence.miao@paradise.org# Current choices are: GOOGLE or OKTAfactor = OKTA# AWS role name (match one of the options prompted for by \"Please select the AWS role\" when this parameter is not specifiedrole =# Found in Okta's configuration for your AWS account.app-link = https://hello.paradise.org/home/amazon_aws/0oa1ch3l6/272# duration in seconds to request a session token for, make sure your accounts (both AWS itself and the associated okta application) allow for large durations. default: 3600duration = 28800 Create session: 123456789101112131415ùúÜ bin/okta/okta --okta-profile default --force --profile sessionEnter password:Multi-factor Authentication required.Pick a factor:[ 0 ] Okta Verify App: SmartPhone_Android: ONEPLUS A5010[ 1 ] token:software:totp( OKTA ) : terrence.miao@paradise.orgSelection: 01: arn:aws:iam::004385754915:role/federation/DeveloperPowerUser2: arn:aws:iam::254184710243:role/federation/DeveloperPowerUser3: arn:aws:iam::755034721059:role/federation/DeveloperPowerUser4: arn:aws:iam::844986439712:role/federation/DeveloperPowerUser5: arn:aws:iam::844986439712:role/federation/Operations6: arn:aws:iam::915951833499:role/federation/DeveloperPowerUserPlease select the AWS role: 3Session token expires on: 2019-12-05 06:30:18+00:00 Login EC2 instance, overwritting default ap-southeast-2 region: 123ùúÜ aws ssm start-session --target i-04ee902e33625c4f3 --profile session --region us-east-2 --debugStarting session with SessionId: terrence.miao@paradise.org-05411f2e2d5a58b0b References Troubleshooting Systems Manager Run Command, https://docs.aws.amazon.com/systems-manager/latest/userguide/troubleshooting-remote-commands.html#systems-manager-ssm-agent-log-files Provides Okta authentication for awscli, https://github.com/jmhale/okta-awscli","tags":[]},{"title":"A simple approach to export / import AWS DynamoDB table items","date":"2019-04-23T08:59:29.000Z","path":"2019/04/23/A-simple-approach-to-export-import-AWS-DynamoDB-table-items/","text":"Try to export items from AWS Test environment DynamoDB tables into Production. A simple Bash SHELL script, with a few commands and AWS CLI could do the work. In AWS DynamoDB console, export selected items into .csv file like this: 1234567ùúÜ cat dws-tile-publisher-ptest-tile.csv\"id (S)\",\"available_to (SS)\",\"benefit_type (S)\",\"category_id (S)\",\"created_date (S)\",\"created_user (S)\",\"description (S)\",\"image_bucket (S)\",\"image_key (S)\",\"last_modified_date (S)\",\"last_modified_user (S)\",\"status (S)\",\"sub_category_id (S)\",\"title (S)\",\"valid_from (S)\",\"valid_to (S)\",\"claim_url (S)\",\"discount_code (S)\"\"950c529b-d6ae-472b-b44a-510ec201c167\",\"&#123; \"\"0b1b9ed4-e171-4eaf-9d20-1a870ab7cc7c\"\", \"\"2df9daf4-da50-4ff9-9322-969d02c178f4\"\", \"\"b6fdcdc7-ffe6-4007-ae56-f5ab545768ec\"\", \"\"bc1c7285-ac47-4d06-b4c6-6f3780cbfb3f\"\" &#125; \",\"DISCOUNT\",\"8d27fb2d-c5f8-487a-a869-2ffd0e476eb6\",\"2019-04-23T01:02:18.123\",\"Angelo.Woods@test.npe.paradise.org\",\"Testing descriptions\",\"dws-tile-images-ptest\",\"Samsung-Galaxy-10-Leak.jpg\",\"2019-04-23T01:02:18.125\",\"Angelo.Woods@test.npe.paradise.org\",\"ARCHIVED\",\"6936a6ed-fa97-4439-9129-c43e288011b3\",\"Samsung Galaxy 10\",\"2019-03-24T01:00\",\"2021-02-25T23:00\",\"http://www.google.com\",...\"095cc9b4-fd64-4479-8817-0b35b8ddcbc2\",\"&#123; \"\"0b1b9ed4-e171-4eaf-9d20-1a870ab7cc7c\"\", \"\"2df9daf4-da50-4ff9-9322-969d02c178f4\"\", \"\"b6fdcdc7-ffe6-4007-ae56-f5ab545768ec\"\", \"\"bc1c7285-ac47-4d06-b4c6-6f3780cbfb3f\"\" &#125; \",\"DISCOUNT\",\"1f028ecb-4115-4378-b00e-3fcd4cbdf54d\",\"2019-04-23T03:50:31.226\",\"Angelo.Woods@test.npe.paradise.org\",\"&lt;div&gt;Employees now have access to an exclusive member offers portal through the Samsung Employee Purchase program. Get up to 35% off the RRP across a wide range of products including mobile phones, tablets, televisions, refrigerators, washing machines, monitors and more.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;\",\"dws-tile-images-ptest\",\"samsung.jpg\",\"2019-04-23T03:50:31.228\",\"Angelo.Woods@test.npe.paradise.org\",\"PUBLISHED\",\"ce07c19b-dd87-4890-9ad3-6acfe0998496\",\"Samsung\",\"2019-04-17T01:00\",\"2025-01-01T23:00\",\"https://shop.samsung.com/au/multistore/auepp/austpost_au/\",\"Simply go to link provided to access the site. Browse our categories, add your products to cart and checkout. Happy Shopping! \" Generate a key:value hashtable used later. Key is ‚Äúid‚Äù column, value is ‚Äúimage_key‚Äù colomn: 123456ùúÜ awk -F\"\\\",\\\"\" '&#123;print $1 \":\" $9 \"\\\"\"&#125;' dws-tile-publisher-test-tile.csv | sed 's/jpg/json/' | sed 's/png/json/' | sed -n '1d;p'\"950c529b-d6ae-472b-b44a-510ec201c167:Samsung-Galaxy-10-Leak.json\"...\"095cc9b4-fd64-4479-8817-0b35b8ddcbc2:samsung.json\" Run the bash script and retrieve item from AWS DyanmoDB table, tranform it and output into a JSON file for import into AWS Production production table: A generated JSON file looks like this: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859ùúÜ cat Samsung-Galaxy-10-Leak.json&#123; \"status\": &#123; \"S\": \"PUBLISHED\" &#125;, \"valid_from\": &#123; \"S\": \"2019-03-24T01:00\" &#125;, \"sub_category_id\": &#123; \"S\": \"6936a6ed-fa97-4439-9129-c43e288011b3\" &#125;, \"description\": &#123; \"S\": \"Testing descriptions\" &#125;, \"image_key\": &#123; \"S\": \"Samsung-Galaxy-10-Leak.jpg\" &#125;, \"claim_url\": &#123; \"S\": \"http://www.google.com\" &#125;, \"last_modified_date\": &#123; \"S\": \"2019-04-23T01:02:18.125\" &#125;, \"valid_to\": &#123; \"S\": \"2021-02-25T23:00\" &#125;, \"created_user\": &#123; \"S\": \"Noel.French@paradise.org\" &#125;, \"benefit_type\": &#123; \"S\": \"DISCOUNT\" &#125;, \"last_modified_user\": &#123; \"S\": \"Noel.French@paradise.org\" &#125;, \"created_date\": &#123; \"S\": \"2019-04-23T01:02:18.123\" &#125;, \"title\": &#123; \"S\": \"Samsung Galaxy 10\" &#125;, \"category_id\": &#123; \"S\": \"8d27fb2d-c5f8-487a-a869-2ffd0e476eb6\" &#125;, \"image_bucket\": &#123; \"S\": \"dws-tile-images-prod\" &#125;, \"id\": &#123; \"S\": \"950c529b-d6ae-472b-b44a-510ec201c167\" &#125;, \"available_to\": &#123; \"SS\": [ \"0b1b9ed4-e171-4eaf-9d20-1a870ab7cc7c\", \"2df9daf4-da50-4ff9-9322-969d02c178f4\", \"b6fdcdc7-ffe6-4007-ae56-f5ab545768ec\", \"bc1c7285-ac47-4d06-b4c6-6f3780cbfb3f\" ] &#125;&#125; Now run the bash script and import JSON file into AWS Production DynamoDB table:","tags":[]},{"title":"Keep running","date":"2019-01-11T00:27:56.000Z","path":"2019/01/11/Keep-running/","text":"ËÆ∏Â§öÊù∞Âá∫ÁöÑ‰∫∫Áâ©ÈÉΩÊòØÈïøË∑ëÁà±Â•ΩËÄÖÔºåÊØîÂ¶ÇÈòøÂÖ∞¬∑ÂõæÁÅµ„ÄÇ ÂõæÁÅµÁöÑÂ§¥Ë°îÊúâÂæàÂ§öÔºå‰º†Â•áÊÄßÁöÑÊï∞Â≠¶ÂÆ∂„ÄÅÈÄªËæëÂ≠¶ÂÆ∂„ÄÅÁé∞‰ª£ËÆ°ÁÆóÊú∫‰πãÁà∂„ÄÇ‰ΩÜÂæàÂ∞ë‰∫∫Áü•ÈÅì‰ªñ‰πüÊòØ‰∏Ä‰ΩçÂá∫Ëâ≤ÁöÑË∑ëËÄÖÔºåÁîöËá≥Â∑ÆÁÇπÁ´ô‰∏ä‰∫ÜÂ••Ëøê‰ºöÁöÑËàûÂè∞„ÄÇ ÂõæÁÅµ‰ªé‰∏≠Â≠¶Â∞±ÂºÄÂßãË∑ëÊ≠•Ôºå‰ΩÜÁõ¥Âà∞ 30 Â§öÂ≤ÅÊâçÊ≠£ÂºèËøõË°åÈïøË∑ëËÆ≠ÁªÉ„ÄÇ Ë∑ëÈÅì‰∏äÁöÑÂõæÁÅµ‚ÄúÂ§ßÂô®ÊôöÊàê‚ÄùÔºåÂá∫Ëâ≤ÁöÑËøêÂä®Â§©Ëµã‰∏ùÊØ´‰∏çÈÄäËâ≤‰∫é‰ªñÁöÑÂ§¥ËÑë„ÄÇ 14 Â≤ÅÈÇ£Âπ¥Ôºå‰ªñÂú®Ë∞¢‰ºØÊÅ©ÂØÑÂÆøÈ´ò‰∏≠Â∞±ËØªÁöÑÁ¨¨‰∏ÄÊó•ÔºåÁî±‰∫éÂ§ßÁΩ¢Â∑•ÔºåÂΩìÂú∞ÁöÑÂÖ¨ÂÖ±‰∫§ÈÄöËÆæÊñΩÂÖ®ÈÉ®ÂÅúËøê„ÄÇÂõæÁÅµÊ≤°ÊúâÁ≠âÂà∞‰∫§ÈÄöÊÅ¢Â§çÔºåÂ∞±‰ªéÂçóÂÆâÊôÆÊï¶‰∏ÄÂè£Ê∞îÈ™ëË°å 96 ÂÖ¨ÈáåÂà∞Ëææ‰Ωç‰∫éÂ§öÂ°ûÁâπÈÉ°Ë•øÂåóÁöÑÂ≠¶Ê†°‰∏äÂ≠¶ÔºåÂºïÂèëÂÖ®Ê†°ËΩ∞Âä®„ÄÇ 1931 Âπ¥ÔºåÂΩì‰ªñËøõÂÖ•ÂâëÊ°•ÂõΩÁéãÂ≠¶Èô¢Â≠¶‰π†Êó∂Ôºå‰ªñÊõæÂ§öÊ¨°Âú®Â≠¶Ê†°Âíå‰ºäÂà©Èïá‰πãÈó¥ËøõË°åÊäòËøîË∑ëÔºå‰∏Ä‰∏™Êù•ÂõûÂ∞±Â∑Æ‰∏çÂ§ö 50 ÂÖ¨Èáå„ÄÇ 1947 Âπ¥ÔºåÂú®Ëé±ÊñØÁâπÈÉ°ÊãâÂ§´Â†°ÔºàLoughboroughÔºâÂ§ßÂ≠¶‰ΩìËÇ≤Âú∫‰∏æË°åÁöÑËã±ÂõΩ‰∏ö‰ΩôÁî∞ÂæÑÂçè‰ºöÈ©¨ÊãâÊùæÈî¶Ê†áËµõ‰∏äÔºåÂõæÁÅµË∑ëÂá∫‰∫Ü‰ªñÂú®È©¨ÊãâÊùæËµõ‰∏≠ÁöÑ‰∏™‰∫∫ÊúÄÂ•ΩÊàêÁª© 2 Â∞èÊó∂ 46 ÂàÜ 03 ÁßíÔºåÂú®ÈÇ£Âú∫ÊØîËµõ‰∏≠ÂêçÂàóÁ¨¨‰∫î„ÄÇ Âú® 1948 Âπ¥‰º¶Êï¶ÁöÑÂ••Ëøê‰ºöÈ©¨ÊãâÊùæÊØîËµõ‰∏äÔºåÂΩìÊó∂ÂÜ†ÂÜõÁöÑÊàêÁª©ÊòØ 2 Â∞èÊó∂ 34 ÂàÜ 52 Áßí„ÄÇÂõæÁÅµ‰ªÖÊØîÈáëÁâåÂæó‰∏ªÊÖ¢‰∫Ü 11 ÂàÜÈíü„ÄÇËÄåÊçÆËã±ÂõΩ„ÄäÊ≥∞Êô§Â£´Êä•„ÄãÊä•ÈÅìÔºåÂõæÁÅµÁöÑÊúÄÂ•ΩÊàêÁª©Âú®ÂΩìÂπ¥Ôºà1947Âπ¥ÔºâË∂≥‰ª•ÊéíÂêç‰∏ñÁïåÂâç‰∏â„ÄÇ When Alan Turing was asked why he punished himself so much in training. He said ‚ÄúI have such a stressful job that the only way I can get it out of my mind is by running hard; its the only way I can get some release.‚Äù Â••ÊñØÂç°ÊúÄ‰Ω≥ÊîπÁºñÂâßÊú¨ÁîµÂΩ±„ÄäÊ®°‰ªøÊ∏∏Êàè„ÄãThe Imitation Game ÊòØÊ†πÊçÆ‰ªñÁöÑ‰º†ËÆ∞„ÄäAlan Turing: The Enigma„ÄãÊãçÊëÑÁöÑ„ÄÇ ËãπÊûúÂÖ¨Âè∏ÁöÑÂïÜÊ†á‰∏ÄÂ∫¶Ë¢´ËØØËÆ§‰∏∫ÊòØÊ∫ê‰∫éÂõæÁÅµËá™ÊùÄÊó∂Âí¨‰∏ãÁöÑËãπÊûúÔºå‰ΩÜËØ•ÂõæÊ°àÁöÑËÆæËÆ°Â∏àÂíåËãπÊûúÂÖ¨Âè∏ÈÉΩÂê¶ËÆ§Ëøô‰∏ÄËØ¥Ê≥ï„ÄÇ Stephen Fry said on the BBC show QI XL in 2011 that his friend Steve Jobs said of the Turing tale, ‚ÄúIt isn‚Äôt true, but God we wish it were!‚Äù ‰πîÂ∏ÉÊñØË¢´Ëã±ÂõΩÂπøÊí≠ÂÖ¨Âè∏ÁîµËßÜËäÇÁõÆ„ÄäQI„Äã‰∏ªÊåÅ‰∫∫Âè≤ËíÇËä¨¬∑ÂºóËé±ÈóÆÂà∞Ê≠§‰∫ãÊó∂ËØ¥Ôºö‚ÄúËøôÔºàLOGO ÂêëÂõæÁÅµËá¥Êï¨Ôºâ‰∏çÊòØÁúüÁöÑÔºå‰ΩÜÊòØ‰∏äÂ∏ùÂïäÔºåÊàë‰ª¨Â∏åÊúõÂÆÉÊòØÁúüÁöÑ„ÄÇ‚Äù Keep running.","tags":[]},{"title":"Add final and javadoc for auto-generated getters and setters in IntelliJ","date":"2019-01-10T23:29:06.000Z","path":"2019/01/11/Add-final-and-javadoc-for-auto-generated-getters-and-setters-in-IntelliJ/","text":"Default final modifierTo satisfy Checkstyle setup. In IntelliJ (version 2018.3.2) Preferences | Editor &gt; Code Style &gt; Java, select ‚ÄúCode Generation‚Äù tab, check ‚ÄúMake generated parameters final‚Äù javadoc for auto-generated getters and settersCreate customised Getter Template: 123456789101112131415161718/*** Gets $field.name.** @return value of $field.name*/#if($field.modifierStatic)static ###end$field.type ###set($name = $StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($helper.getPropertyName($field, $project))))#if ($field.boolean &amp;&amp; $field.primitive) is###else get###end$&#123;name&#125;() &#123; return $field.name;&#125; Create customised Setter Template: 12345678910111213141516171819/*** Sets $field.name.** @param $field.name value of $field.name*/#set($paramName = $helper.getParamName($field, $project))#if($field.modifierStatic)static ###endvoid set$StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($helper.getPropertyName($field, $project)))($field.type $paramName) &#123;#if ($field.name == $paramName) #if (!$field.modifierStatic) this.## #else $classname.## #end#end$field.name = $paramName;&#125; Use the customised Getter and Setter templates when automatically generate getters and setters:","tags":[]},{"title":"Year 2018 in the Rear View Mirror","date":"2018-12-31T13:46:43.000Z","path":"2019/01/01/Year-2018-in-the-Rear-View-Mirror/","text":"2018 ÊòØ‰∏Ä‰∏™ËÆ©‰∫∫Êï¨ÁïèÊÅêÊÉß‚ÄúÈÄ¢ÂÖ´ÂøÖÂèò‚ÄùÁöÑÂπ¥‰ªΩ„ÄÇ2018 ÊòØËøáÂéªÂçÅÂπ¥‰∏≠ÊúÄÁ≥üÁ≥ïÁöÑ‰∏ÄÂπ¥Ôºå‰ΩÜ‰πüËÆ∏ÊòØÊú™Êù•ÂçÅÂπ¥ÈáåÊúÄÂ•ΩÁöÑ‰∏ÄÂπ¥„ÄÇ 2018 Âπ¥ËøáÂéª‰∫ÜÔºåÊàëÂæàÊÄÄÂøµÂÆÉ„ÄÇ Âõæ 1Ôºö2018 Âπ¥ÊòØÂú®ËøáÂéªÂçÅÂπ¥‰∏≠ÂîØ‰∏ÄÁöÑÂêÑÈ°πÊäïËµÑÈÉΩ‰∏∫Ë¥üÂ¢ûÈïøÁöÑ‰∏ÄÂπ¥„ÄÇ Âõæ2ÔºöÁæéÂõΩËÇ°Â∏ÇËøõÂÖ•‰∏ãÂçäÂπ¥‰∏ÄÁõ¥Ë∑åË∑å‰∏ç‰ºë„ÄÇ‰ΩÜÂú® Boxing Day Âç¥ÂàõÈÄ†‰∫ÜÂçïÊó•Ê∂®ÂπÖÁöÑÁ∫™ÂΩï„ÄÇ Âõæ 3ÔºöÈªéÊõº Zeta ÂáΩÊï∞ÔºåÁî®‰∫éËÆ°ÁÆóÁ¥†Êï∞ÂàÜÂ∏É„ÄÇ2018 Âπ¥Â§ö‰∫∫Â£∞Áß∞ËØÅÊòé‰∫ÜÁôæÂπ¥Êú™Ëß£ÂÜ≥ÁöÑÈªéÊõºÁåúÊÉ≥Ôºå‰ΩÜÊúÄÁªàÈÉΩÊòØÈóπÂâßÊî∂Âú∫„ÄÇÈªéÊõºÁåúÊÉ≥‰æùÁÑ∂ÊúâÂ¶ÇÊúÄ‰∏∫Â£ÆÁæéÔºåÂ∑çÂ≥®ÔºåÈô©Â≥ªÁöÑÂ•áÂ±±ÔºåÁüóÁ´ãÂú®‰∫∫Á±ªÁöÑÊô∫ÂäõÂ∑ÖÂ≥∞‰πã‰∏ä„ÄÇ Âõæ 4ÔºöThe cost of livingÔºåcity by city„ÄÇÁîüÊ¥ªÊúâÂ§öË¥µÔºü‰∏≠ÂõΩÂÖ≠ÂüéÂ∏ÇÂÖ•ÈÄâÂÖ®ÁêÉÁîüÊ¥ªÊàêÊú¨ÊúÄÊòÇË¥µÁöÑ top 25 list. Âõæ 5ÔºöËÇØÂ∞º‰∫öÁöÑ Eliud Kipchoge Âú® 2018 Âπ¥ÊüèÊûóÈ©¨ÊãâÊùæ‰∏äÂàõÈÄ†ÁöÑ 2 Â∞èÊó∂ 1 ÂàÜ 39 ÁßíÁöÑÈ©¨ÊãâÊùæ‰∏ñÁïåÁ∫™ÂΩï„ÄÇ‰∫∫Á±ª‰ªçÁÑ∂Âú®ËØïÂõæÁ™ÅÁ†¥ 2 Â∞èÊó∂ÂÆåÊàêÈ©¨ÊãâÊùæÁöÑËøêÂä®ÊûÅÈôê„ÄÇ Âõæ 6Ôºö‰∏≠ÂõΩ¬∑‰∏äÊµ∑ Âõæ 7ÔºöChinese President Xi Jinping,centre, arrives with Premier Li Keqiang, left, for the opening session of the Chinese People‚Äôs Political Consultative Conference in Beijing‚Äôs Great Hall of the People on March 3, 2018. Âõæ 8ÔºöChinese President Xi Jinping Speech. Âõæ 9ÔºöÂú® 2018 Âπ¥ Pantone Colour of the yearÔºåUltra Violet Á¥´Â§ñÂÖâÂêéÔºåÊΩòÈÄöÂ≠êÁªôÂá∫ 2019 Âπ¥Â∫¶ÊµÅË°åËâ≤ Living Coral ÁèäÁëöÊ©ô„ÄÇ Âõæ 10Ôºö2018 Âπ¥Â∫¶Ê±âÂ≠óÔºåÁî± ‚ÄúÁ©∑‚Äù Âíå ‚Äú‰∏ë‚Äù Âêà‰ΩìÊâÄÁªÑÊàêÔºåËØªÈü≥ÊòØ ‚Äúqiou‚ÄùÔºàÈü≥ÂêåÁ≥óÔºâÔºåÂç≥ÂèàÁ©∑Âèà‰∏ëÁöÑÊÑèÊÄù„ÄÇ‰∏çÂ∞ëÁΩëÂèãË°®Á§∫ÔºåËøôÂ≠óÂ∫îËØ•Âøµ ‚Äúwo‚ÄùÔºàÊàëÔºâ„ÄÇ Âõæ 11ÔºöÁîµÂΩ±„ÄäÁî≤Êñπ‰πôÊñπ„ÄãÁöÑÁªìÂ±Ä„ÄÇÊù®Á´ãÊñ∞Ëµ∞Âà∞Èõ™Âú∞ÈáåÔºåÊä¨Ëµ∑Â§¥ÔºåÂíåÊØè‰∏™ÊôÆÈÄö‰∫∫ÈÉΩ‰∏ÄÊ†∑ÔºåË¶ÅÁªßÁª≠Èù¢ÂØπÈ£éÈõ™„ÄÇÂ±ãÂ≠êÈáåÈù¢ÊòØÁ∫¢ÁÅØÁ¨ºÔºå‰∫ÆÂ†ÇÂ†ÇÁöÑ„ÄÇÂ§ñÈù¢Â∑≤ÁªèÊòØÂÜ∑Ëâ≤Ë∞É‰∫Ü„ÄÇÂ§ñÈù¢Â∞±ÊòØÁé∞ÂÆûÁöÑÁîüÊ¥ª„ÄÇ ‚ÄúÊàëÂæàÊÄÄÂøµÂÆÉ‚ÄùÔºåÁªèÂéÜË∂äÂ§öÔºåËøôÂè•ËØùÂ∏¶Êù•ÁöÑÊÑüËß¶Â∞±Ë∂äÂéöÈáç„ÄÇ Êó∂Èó¥ÔºåÊ¢¶ÊÉ≥ÂíåÁà±ÔºåÈÉΩÊòØÂ¶ÇÊ≠§„ÄÇ","tags":[]},{"title":"Step by step run Kafka on Mac","date":"2018-12-10T04:45:51.000Z","path":"2018/12/10/Step-by-step-run-Kafka-on-Mac/","text":"Download Kafka binary file from https://kafka.apache.org/downloads and install it Set up Kafka listen on PLAINTEXT://localhost:9092 123456terrence@igloo /usr/local/kafka15:51:25 ùúÜ diff config/server.properties config/server.properties.orig31c31&lt; listeners=PLAINTEXT://localhost:9092---&gt; #listeners=PLAINTEXT://:9092 Start Zookeeper 1igloo:kafka root# bin/zookeeper-server-start.sh config/zookeeper.properties Start Kafka 1igloo:kafka root# bin/kafka-server-start.sh config/server.properties Create a new Kafka topic named ‚Äútest‚Äù 1igloo:kafka root# bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test Initialise Producer in Console 12345terrence@igloo /usr/local/kafka_2.12-2.1.016:04:19 ùúÜ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test&gt;Hello World&gt;Wow&gt; Initialize Consumer in Console to receive the messages 1234terrence@igloo /usr/local/kafka_2.12-2.1.016:06:11 ùúÜ bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginningHello WorldWow Run Kafka Manager, an UI tool for managing Kafka. 12terrence@igloo ~/bin/kafka-manager-1.3.3.1816:16:47 ùúÜ env ZK_HOSTS=\"localhost:2181\" bin/kafka-manager Then visit http://localhost:9000 Create a Kafka cluster at first: Visit ‚Äútest‚Äù topic in Kafka cluster:","tags":[]},{"title":"This is how I feel when my code runs without a single bug","date":"2018-12-06T21:35:50.000Z","path":"2018/12/07/This-is-how-I-feel-when-my-code-runs-without-a-single-bug/","text":"","tags":[]},{"title":"Bind customised KeyStore,TrustStore and PoolingHttpClientConnectionManager in Apache Camel","date":"2018-12-03T07:54:16.000Z","path":"2018/12/03/Bind-customised-KeyStore-TrustStore-and-PoolingHttpClientConnectionManager-in-Apache-Camel/","text":"In Apache HTTPClient 4.x, PoolingHttpClientConnectionManager and BasicHttpClientConnectionManager can be used as Connection Managers for HTTP Client. By default, above two Connection Managers load cacerts trust store, from $JRE_HOME/lib/security directory, not programmatically specified. Since Apache Camel starts supporting HTTP4 Component, camel-http4 is using Apache HTTPClient 4.x. The following is a solution how to customise PoolingHttpClientConnectionManager and SSLContext to use specified KeyStore and TrustStore. In application.properties file defined environment specified KeyStore and TrustStore: 123456...keystore.location=classpath:certificates/client-certs.jkskeystore.password=client123truststore.location=classpath:certificates/trusted-cacerts.jkstruststore.password=changeit... Without Connection Managers like PoolingHttpClientConnectionManager and BasicHttpClientConnectionManager in Apache HTTPClient 4.x, Apache Camel Route can be written in this way, binding programmatically specified KeyStore and TrustStore. References Apache Camel HTTP4 Component, http://camel.apache.org/http4.html Java SSL with Multiple KeyStores, http://codyaray.com/2013/04/java-ssl-with-multiple-keystores Multiple Keystores in Apache Camel/HttpClient, http://codyaray.com/2013/05/multiple-keystores-in-apache-camelhttpclient","tags":[]},{"title":"Inspirational Thought","date":"2018-11-21T22:56:10.000Z","path":"2018/11/22/Inspirational-Thought/","text":"Inspirational Thought from Jeff Bezos.","tags":[]},{"title":"After new Macbook Air, Mac Mini, iPad Pro 2018","date":"2018-11-06T01:02:29.000Z","path":"2018/11/06/After-new-Macbook-Air-Mac-Mini-iPad-Pro-2018/","text":"ÊúÄÊñ∞ÁöÑËãπÊûúÂèëÂ∏É‰ºöÊòØ‰∏ÄÊ¨°Âõ¢ÁªìÁöÑÂ§ß‰ºöÔºåÊ±ÇÂÆûÁöÑÂ§ß‰ºöÔºåËÉúÂà©ÁöÑÂ§ß‰ºö„ÄÇÂú®‰ª•ËãπÊûúÊÄª‰π¶ËÆ∞Â∫ìÂÖãÂêåÂøó‰∏∫Ê†∏ÂøÉÁöÑÈ¢ÜÂØº‰∏ãÔºåApple Design Êã®‰π±ÂèçÊ≠£ÔºåÁªßÂæÄÂºÄÊù•ÔºåÈáçÊãæÁªèÂÖ∏„ÄÇ Macbook Air Âæó‰ª•ÁªßÁª≠ÔºåMac Mini ÂæóÂà∞ÈáçÁîü„ÄÇiPad Pro Âú®ÁªèËøá‰∏çÊñ≠ÁöÑÊé¢Á¥¢„ÄÅÂ§±Ë¥•ÂêéÔºåÁªà‰∫éÊãøÂá∫‰∏ÄÊ¨æÈúáÊíºÂøÉÁÅµÁöÑËÆæËÆ°Ôºå‰ª•Âèä‰∏ÄÊ¨æ‰∏éÊó∂ÂÖ±ËøõÁöÑ Apple Pencil„ÄÇ Êñ∞ iPad Pro ÁöÑÊú∫Ë∫´ËÉåÈù¢ÂÜÖÁΩÆ‰∫Ü102 ÂùóÁ£ÅÈìÅÔºå‰øùËØÅ‰∫Ü flat ÊâÅÂπ≥ÁöÑËøôÊ¨æ Apple Pencil ÂèØÁâ¢Âõ∫Âê∏ÈôÑÂú®Êú∫Ë∫´‰∏äÔºåÂêåÊó∂‰πüËÉΩÁªô Apple Pencil ËøõË°åÊó†Á∫øÂÖÖÁîµ„ÄÇËøô‰∏™ËÆæËÆ°‰ºòÈõÖÔºåÂÆûÁî®ÔºåÁÇπËµûÂøÖÈ°ª„ÄÇFurthermore, ËæπÊ°ÜÂ°ëÊÄßÊç¢Êàê‰∫ÜÊñπÊ≠£ÁöÑÈÄ†ÂûãÔºåÈáçÂõû iPhone 5 ÊñπÊ≠£ËæπÊ°ÜÁöÑÁ≤æÂÖ∏ËÆæËÆ°„ÄÇ‰ªéÂ±èÂπïÂà∞Â§ñÂΩ¢Ôºå‰ªéÂ§ñËÆæÂà∞ËøûÊé•ÊÄßÔºåÊñ∞ iPad Pro ÁöÑÊâÄÊúâÂäüËÉΩÈÉΩÊòØÊúùÁùÄÈ´òÁîü‰∫ßÂäõÁ¨îËÆ∞Êú¨ÁîµËÑëÁöÑ ecosystem ÂâçËøõ„ÄÇ ‰ªäÂ§©Â¢®Â∞îÊú¨ËµõÈ©¨ËäÇÔºåÂÖ®Áª¥Â§öÂà©‰∫öÂ∑û‰∫∫Ê∞ëÂú®Êò•Â§©ÁöÑËçâÂú∞‰∏äÊííÈáé„ÄÇ‰ø°‰∏ª‰πüÂáÜÂ§áÊΩáÊ¥í‰∏ÄÊää„ÄÇ Áôª‰∏ä‰∫ÜËãπÊûúÁΩëÁ´ôÔºåÂèëÁé∞Êñ∞ Apple Pencil Êèê‰æõ‰∏™‰∫∫ÂÆöÂà∂ÊøÄÂÖâÂàªÂ≠óÊúçÂä°„ÄÇËæìÂÖ•Ê¥ãÊñá ‚ÄúBest there ever will be‚Äú ÔºàÂêéÊó†Êù•ËÄÖÁöÑÊÑèÊÄùÔºâÔºåËãπÊûúÂ´åÂºÉÂ§™Èïø„ÄÇÊç¢ÊàêÂõΩËØ≠ ‚ÄúÊ∞ëÊóèËã±ÈõÑ Â∞èÂπ≥Ëµ†‚ÄúÔºåËãπÊûúÂèà handle ‰∏ç‰∫Ü„ÄÇÊó†Â•àÂè™Â•ΩÂèñÊ∂à $2,349.00 Êñ∞ iPad Pro Âíå $199.00 Êñ∞ Apple Pencil ÁöÑËÆ¢Âçï „ÄÇ ÊúâÈí±Ëä±‰∏çÂá∫ÂéªÔºåÈÉÅÈó∑Âïä ‚Ä¶ ‚Ä¶","tags":[]},{"title":"Setup Lambda migrate & sync AWS DynamoDB to new table","date":"2018-10-24T03:29:00.000Z","path":"2018/10/24/Setup-Lambda-function-sync-AWS-DynamoDB-to-a-new-table/","text":"AWS DynamoDB is a good persistence solution for a specific solution. However, it‚Äôs not for a growing and changing application that could need new indexes and queries for its ever expanding features at any time. At this moment it is where the flexibility and speed of a relational database really shined through. Now, a DynamoDB table with Consumers Preferences data urgently needs to update: RENAME one EXISTING attribute ADD a new attribute SET a value in the new attribute for ALL EXISTING items in DynamoDB‚Äôs new table AWS lambda function plays handy here to migrate data, and sync newly inserted, modified / updated, deleted items between existing and new DynamoDB tables. Create new DynamoDB table 123456789101112131415161718192021222324252627282930313233343536373839404142$ aws dynamodb create-table \\ --table-name userpreferences-ptest-02-USER_PREFERENCESV2 \\ --attribute-definitions AttributeName=id,AttributeType=S AttributeName=preferenceType,AttributeType=S \\ --key-schema AttributeName=id,KeyType=HASH AttributeName=preferenceType,KeyType=RANGE \\ --provisioned-throughput ReadCapacityUnits=100,WriteCapacityUnits=100&#123; \"TableDescription\": &#123; \"TableArn\": \"arn:aws:dynamodb:ap-southeast-2:123456789012:table/userpreferences-ptest-02-USER_PREFERENCESV2\", \"AttributeDefinitions\": [ &#123; \"AttributeName\": \"id\", \"AttributeType\": \"S\" &#125;, &#123; \"AttributeName\": \"preferenceType\", \"AttributeType\": \"S\" &#125; ], \"ProvisionedThroughput\": &#123; \"NumberOfDecreasesToday\": 0, \"WriteCapacityUnits\": 100, \"ReadCapacityUnits\": 100 &#125;, \"TableSizeBytes\": 0, \"TableName\": \"userpreferences-ptest-02-USER_PREFERENCESV2\", \"TableStatus\": \"CREATING\", \"TableId\": \"d116efdc-1234-5678-90ab-011de3e124fe\", \"KeySchema\": [ &#123; \"KeyType\": \"HASH\", \"AttributeName\": \"id\" &#125;, &#123; \"KeyType\": \"RANGE\", \"AttributeName\": \"preferenceType\" &#125; ], \"ItemCount\": 0, \"CreationDateTime\": 1540273906.1059999 &#125;&#125; Migrate Data Create Migrate Data Lambda function Increase Memory and Runtime Timeout https://docs.aws.amazon.com/lambda/latest/dg/limits.html in case of execution pre-maturely ended without finishing the migration. Furthermore, in case of overcharging DynamoDB due to its limits https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html add time delay in Lambda function. migrate.js Add AWS DynamoDB Lambda execution role userpreferences-ptest-02-migrateRole Create a simple test event that can kick off function 12345&#123; \"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\"&#125; Trigger run the function. Should see the data migrated from existing DynamoDB table into new table. Log can be found at AWS CloudWatch Log Groups /aws/lambda/userpreferences-ptest-02-migrate Sync Data Enable Stream on the existing DynamoDB table Add a new trigger for DynamoDB table Create a new Lambda function linked to trigger sync.js Trigger Testing AWS Lambda built-in test can test trigger: Logging Lambda function log can be found on AWS CloudWatch Log Groups /aws/lambda/userpreferences-ptest-02-sync Counter DataThis Lambda function can count the number of items in DynamoDB table. counter.js Async call, callback and Non-blocking, it‚Äôs very hard implement so in every applications. In addition, reject promises or async functions, don‚Äôt handle them with a catch, NodeJS will raise a warning. In a large complex applications with lots of async, having a single unhandled promise or await function terminate NodeJS, or have to handle them with try and catch in every place (spaghetti code again?) would be very bad. An example of AWS DynamoDB error: 12345678910111213141516172018-11-14T02:20:50.742Z 715f18fb-e7b3-11e8-b5c4-d75f9089dd50 Error thrown: &#123; ProvisionedThroughputExceededException: The level of configured provisioned throughput for the table was exceeded. Consider increasing your provisioning level with the UpdateTable API.at Request.extractError (/var/runtime/node_modules/aws-sdk/lib/protocol/json.js:48:27)at Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:105:20)at Request.emit (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:77:10)at Request.emit (/var/runtime/node_modules/aws-sdk/lib/request.js:683:14)at Request.transition (/var/runtime/node_modules/aws-sdk/lib/request.js:22:10)at AcceptorStateMachine.runTo (/var/runtime/node_modules/aws-sdk/lib/state_machine.js:14:12)at /var/runtime/node_modules/aws-sdk/lib/state_machine.js:26:10at Request.&lt;anonymous&gt; (/var/runtime/node_modules/aws-sdk/lib/request.js:38:9)at Request.&lt;anonymous&gt; (/var/runtime/node_modules/aws-sdk/lib/request.js:685:12)at Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:115:18)message: 'The level of configured provisioned throughput for the table was exceeded. Consider increasing your provisioning level with the UpdateTable API.',code: 'ProvisionedThroughputExceededException',time: 2018-11-14T02:20:50.687Z,requestId: 'C38MODOISAJEGTVPI2ISOPFGDBVV4KQNSO5AEMVJF66Q9ASUAAJG',statusCode: 400,retryable: true &#125; AWS example doesn‚Äôt throw the error in the catch block, it returns error instead, so any errors end up in the catch block. And return promises early and use Promise.all() method. References DynamoDB: Changing table schema, https://www.abhayachauhan.com/2018/01/dynamodb-changing-table-schema/ Tutorial: Processing New Items in a DynamoDB Table, https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.Tutorial.html How to escape async/await hell, https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c Node.js 8.10 runtime now available in AWS Lambda, https://aws.amazon.com/blogs/compute/node-js-8-10-runtime-now-available-in-aws-lambda/","tags":[]},{"title":"Apple Designs That Inspire / ÂêêÊßΩËãπÊûú","date":"2018-10-13T09:27:43.000Z","path":"2018/10/13/Apple-Designs-That-Inspire/","text":"Âàó‰∏æ‰∏Ä‰∏ãÊàëËÆ§‰∏∫ÁöÑËãπÊûú‰∫ßÂìÅËÆæËÆ°ÁöÑÁªèÂÖ∏„ÄÇÊàëÂπ∂‰∏çÊòØËãπÊûúÁöÑÁ≤â‰∏ùÔºå‰πü‰ªéÊù•Ê≤°ÊúâÊã•ÊúâËøá‰ªª‰Ωï‰∏Ä‰ª£ iPhone ‰∫ßÂìÅÔºåfrom first generation iPhone, to latest iPhone XS„ÄÇ ÁªèÂÖ∏ÁöÑ iPhone 5 / 5s ÈÄÇÂêàÂçïÊâãÊìç‰ΩúÔºå‰ΩìÈáçÈÄÇ‰∏≠Ôºå‰∏çÊâìÊªëÔºåÊúâÊè°ÊåÅÊÑü„ÄÇ Êñ∞ iPhone Êó©Â∑≤Ê≤°Êúâ‰∫ÜÊñ∞È≤úÊÑü„ÄÇÂÖ®Èù¢Â±èÔºåÊó†Á∫øÂÖÖÁîµÔºåÂèåÂç°ÂèåÂæÖÔºåÂ±è‰∏ãÊåáÁ∫πËØÜÂà´ÔºåÂâçÂêéÂèåÂ±è ‚Ä¶ Ëøô‰∫õÈÉΩÂ∑≤‰∏çÂÜçÊàê‰∏∫ËãπÊûúÁöÑ‰∏ìÂà©„ÄÇ ÊâãÊú∫ËÆæËÆ°ËøòÊòØÊúâÂæàÂ§öÊΩúÂäõÂºÄÂèë„ÄÇËøòÊ≤°Ëµ∞Âà∞Â∞ΩÂ§¥„ÄÇIn other words, ÊâãÊú∫ÊòØÁé∞Âú®ÊúÄÂÖ∑ÂàõÊñ∞ÂíåÊúâÊúÄÂ§öÂàõÊñ∞ÁöÑ‰∫ßÂìÅ‰∫Ü„ÄÇ‰ΩÜËãπÊûúÁé∞Âú®Â∑≤ÁªèÂèòÂæó‰øùÂÆàÔºå‰∏≠Â∫∏Ôºå‰∏çÊÄùËøõÂèñ‰∫Ü„ÄÇ BTWÔºåËÄ≥Êú∫ maybe ‰∏ã‰∏Ä‰∏™Êô∫ËÉΩ‰∫ßÂìÅÁ´û‰∫âÈ¢ÜÂüü„ÄÇHeadphones Â∑≤ÁªèÊàê‰∏∫ÊâãÊú∫‰ª•Â§ñÁ¨¨‰∫å‰∏™‰∫∫ÊâãÂøÖÂ§áÁöÑËÆæÂ§á‰∫Ü„ÄÇ ËøôÊòØÊàëÂú® October 23, 2012Ôºåthe first generation iPad Mini was announced Êó∂ÂÜôÁöÑËØÑËÆ∫Ôºö ‚ÄúIt takes 30 months and 4 generatons since first release of iPad on April 3rd 2010, Apple finally gets the right size, right weight, right price, right design, right OS, right applications, right market niche, right balanced, almost no annoying public complainted issues, nearly all bugs been fixed iPad delivered‚Äù iPad Mini 2 ‰ΩøÁî®‰∏ä Retina Display. Ëá≥‰ªä‰ªçÁÑ∂ÊòØËΩª‰æøÁöÑ‰∏çË°åÔºå‰ªçÁÑ∂ÊµÅÁïÖÁöÑ‰∏çË°å„ÄÇ Êñ∞ÁöÑ‚ÄúÂÖ®‚ÄùÈù¢Â±è iPad Pro Êú¨ÊúàË¶ÅÂèëÂ∏É‰∫Ü„ÄÇ‰∏çÊòéÁôΩ‚ÄúÂÖ®‚ÄùÈù¢Â±èÂú®Â§ßÂ±èÂπïËÆæÂ§á‰∏äÁöÑÊÑè‰πâ„ÄÇ‰∏™‰∫∫ËøòÊòØÂñúÊ¨¢Áé∞Âú®ÁöÑ iPad pro 10.5. ‚ÄúÂÖ®‚ÄùÈù¢Â±è iPad Pro ËøΩÊ±ÇÈÄºÊ†ºÔºåBigger Than BiggerÔºåÁâ∫Áâ≤Êéâ home buttonÔºåÂ∞ë‰∫Ü‰∏Ä‚ÄúÈîÆ‚ÄùÈíüÊÉÖ„ÄÇ Why the hell MacBook has removed sleep light / ÂëºÂê∏ÁÅØ? Think about it after you have a look Transformers Mac lightÔºö ‰∏∫Áîö turn off ‰ø°‰ª∞ÁÅØÔºå‰ø°‰ª∞ÁöÑÁÅØÂ°îÔºüÊúâÂ§öÂ∞ëÁî®Êà∑‰ºöÂú®‰πéÂ§öË¥πÈÇ£‰πà‰∏ÄÁÇπÁÇπÁî®Áîµ„ÄÇÁïô‰∏ãÁöÑÂè™ÊòØÊ∑±Ê∑±ÁöÑÊâßÂøµÔºåËõãËõãÁöÑÂøß‰º§Ôºü Magsafe Á£ÅÂê∏ÂÖÖÁîµÊé•Âè£‰∏ÄÁõ¥Ë¢´ËÆ§‰∏∫ÊòØÈ•±Âê´ÂàõÊñ∞ÂíåÊô∫ÊÖßËÆæËÆ°„ÄÇËÆ∫ÂÆâÂÖ®ÊÄß‰∏é‰æøÊç∑ÊÄßËøòÊúâ‰ªÄ‰πàÊØî MagSafe ÂÅöÁöÑÊõ¥Â•ΩÔºü Why small is beautiful? ÁúãÁúã Mac Mini ÁöÑÁªìÊûÑ„ÄÇ ËÉΩÊää‰∏Ä‰∏™ÂäüËÉΩÂÆåÊï¥ÁöÑ PC ‰∏ªÊú∫ÔºåÊîæËøõÂ¶ÇÊ≠§Áã≠Â∞èÁöÑÁ©∫Èó¥ÂÜÖÔºåÂäüËÄó‰ΩéÂèàÂÆâÈùôÔºåÈô§‰∫Ü brilliant ËøòËÉΩÁî®‰ªÄ‰πàÊù•ÂΩ¢ÂÆπÔºü Mac Mini Â∑≤ÁªèÂ•ΩÈïøÊó∂Èó¥Ê≤°ÊúâÊõ¥Êñ∞Êç¢‰ª£„ÄÇ‰∏çÁü•ÈÅìËãπÊûúÊòØÂê¶Âú®ËÄÉËôëÁ†çÊéâËøô‰∏™‰∫ßÂìÅ„ÄÇ ËøëÂá†Âπ¥ËãπÊûúÁöÑÊñ∞‰∫ßÂìÅËÆæËÆ°ÊòØÊÑüËßâÂú®ÂêÉËÄÅÊú¨Ôºågoing downhill. Â•ΩÁöÑËÆæËÆ°Ê≤°ÊúâÁªßÊâøÂèëÊâ¨ÔºåÂèçËÄåÂú®ÂÅöÂáèÊ≥ïË¢´‰∏Ä‰∏ÄÂéªÊéâ„ÄÇÊñ∞‰∫ßÂìÅ‰∫ÆÁõ∏ÂêéÊÄªÊÑüËßâÁº∫Â∞ëÁÇπ‰ªÄ‰πà„ÄÇ‰πüËÆ∏ÊòØ‰∏ÄÁßçÁ≤æÁ•ûÔºå‰πüËÆ∏ÊòØ‰∏ÄÈ¢óÁÅµÈ≠Ç„ÄÇ","tags":[]},{"title":"The 10 Commandments of Good Products","date":"2018-09-13T22:22:00.000Z","path":"2018/09/14/The-10-Commandments-of-Good-Products/","text":"The Vespa scooter is an example of how great design truly transcends time. The Vespa has been relatively unchanged in decades. The simplicity and style of it still make it a desirable item to this day. The 10 Commandments of Good Products, https://medium.com/swlh/the-10-commandments-of-good-products-d1d0a97b30ee","tags":[]},{"title":"A Python script which implements Mantua Cipher","date":"2018-08-30T05:54:36.000Z","path":"2018/08/30/A-Python-script-which-implements-Mantua-Cipher/","text":"Run output from Console: 1234567891011$ PycharmProjects/cipher/venv/bin/python PycharmProjects/cipher/src/cipher.py[ 60 31 53 33 33 53 23 ] : blossom[ 60 55 73 66 66 73 23 ] : blossom[ 20 37 12 0 0 12 23 ] : blossom[ 60 37 82 14 14 82 89 ] : blossom[ 20 31 82 95 95 82 89 ] : blossom[ 60 36 90 0 0 90 23 ] : blossom[ 20 37 90 94 94 90 23 ] : blossom[ 20 55 90 94 94 90 89 ] : blossom[ 20 36 97 94 94 97 89 ] : blossom[ 60 36 82 0 0 82 23 ] : blossom","tags":[]},{"title":"Step by step resetting Bluetooth on Mac OS","date":"2018-08-23T10:30:49.000Z","path":"2018/08/23/Step-by-step-resetting-Bluetooth-on-Mac-OS/","text":"Latest Mac OS High Sierra version 10.13.6. Open Terminal and login as user ‚Äúroot‚Äù: 1# rm /Library/Preferences/com.apple.Bluetooth.plist Reset the Bluetooth Module with Option + Shift + click on bluetooth icon in taskbar. Click on Debug -&gt; Reset the Bluetooth Module Reset PRAM / NVRAM: Shut down; power on, immediately press Command + Option + P + R until it resets itself a couple times. Official guide https://support.apple.com/en-us/HT204063 Reset SMC: Shut down; hold down Shift + Control + Option while holding the power button for 10 seconds. Official guide https://support.apple.com/en-us/HT201295","tags":[]},{"title":"Cloudcraft - visualise AWS environment as isometric architecture diagrams","date":"2018-08-14T00:05:03.000Z","path":"2018/08/14/Cloudcraft-visualise-AWS-environment-as-isometric-architecture-diagrams/","text":"References CloudCraft, https://cloudcraft.co/","tags":[]},{"title":"An bash, curl and awk example","date":"2018-08-02T23:00:06.000Z","path":"2018/08/03/An-bash-curl-and-awk-example/","text":"This is an example how in a bash script, curl and awk work together, on gist.","tags":[]},{"title":"Assumptions and Conditional Test execution, ignoring in JUnit","date":"2018-07-06T21:40:20.000Z","path":"2018/07/07/Assumptions-and-Conditional-Test-execution-ignoring-in-JUnit/","text":"Sometime you want to ignore some test depends on environment settings. Now both JUnit 4 and JUnit 5 support the concept of assumptions. Unit Test like this: 1234567@Testpublic void testRun() &#123; Assume.assumeTrue(BooleanUtils.toBoolean(System.getProperty(\"runtest\"))); // Rest of testcase&#125; With Gradle, pass in parameter like this: 1$ gradle test -Pruntest=false References Assumptions and Conditional Test Execution with JUnit 4 and 5, https://reflectoring.io/conditional-junit4-junit5-tests/","tags":[]},{"title":"Making VSCode like IntelliJ after line commented the cursor automatically moved to next line","date":"2018-06-16T05:44:06.000Z","path":"2018/06/16/Making-VSCode-like-IntelliJ-after-line-commented-the-cursor-automatically-moved-to-next-line/","text":"Want to make VSCode key bindings as closed as IntelliJ key bindings like. Firstly, install VSCode extension macros. Open Code -&gt; Preferences -&gt; Settings. Add following configuration into User Settings. 123456\"macros\": &#123; \"commentLine\": [ \"editor.action.commentLine\", \"cursorDown\" ]&#125; Open Code -&gt; Preferences -&gt; Keyboard Shortcuts. Add following configuration into keybindings.json file. 12345678// Place your key bindings in this file to overwrite the defaults[ &#123; \"key\": \"cmd+/\", \"command\": \"macros.commentLine\", \"when\": \"editorTextFocus &amp;&amp; !editorReadonly\" &#125;] That‚Äôs newly added Toggle Line Comment looks like after the change:","tags":[]},{"title":"Take over Mac OS X Bluetooth Control","date":"2018-06-09T01:45:17.000Z","path":"2018/06/09/Take-over-Mac-OS-X-Bluetooth-Control/","text":"Quite annoying when Bluetooth on Mac OS X is off, you can‚Äôt turn it on manually via Systme Preferences interface. Now you can install blueutil from https://github.com/toy/blueutil to solve this issue. 1234567891011121314151617igloo:cheatsheets root# blueutil --helpblueutil v2.1.0Usage: blueutil [options]Without options outputs current state -p, --power output power state as 1 or 0 -p, --power STATE set power state -d, --discoverable output discoverable state as 1 or 0 -d, --discoverable STATE set discoverable state -h, --help this help -v, --version show versionSTATE can be one of: 1, on, 0, off, toggle Firstly, turn off Bluetooth service via command line: 12igloo:cheatsheets root# blueutil -p 0igloo:cheatsheets root# blueutil -d 0 Then turn on Bluetooth service via command line: 12igloo:cheatsheets root# blueutil -d 1igloo:cheatsheets root# blueutil -p 1","tags":[]},{"title":"Setup and run DEVHINTS.IO cheatsheets on localhost","date":"2018-06-08T07:32:39.000Z","path":"2018/06/08/Setup-and-run-DEVHINTS-IO-cheatsheets-on-localhost/","text":"This is a static website based on Jekyll framework https://jekyllrb.com/. Need install Jekyll and . Login as user ‚Äúroot‚Äù due to write permission required into /Library/Ruby/Gems directory. Install bundler and Jekyll at first: 1igloo:cheatsheets root# gem install bundler jekyll Then install all this application dependent libraries: 1igloo:cheatsheets root# bundler install Start up Jekyll website on localhost, with user ‚Äúterrence‚Äù this time: 123456789101112131415terrence@igloo ~/Projects/cheatsheets (master ‚ò°=)17:28:56 ùúÜ bundle exec jekyll serve --incrementalConfiguration file: /Users/terrence/Projects/cheatsheets/_config.yml Source: /Users/terrence/Projects/cheatsheets Destination: /Users/terrence/Projects/cheatsheets/_site Incremental build: enabled Generating...DEPRECATION WARNING on line 83, column 12 of /Users/terrence/Projects/cheatsheets/_sass/vendor/modularscale/_modularscale.scss:Unescaped multiline strings are deprecated and will be removed in a future version of Sass.To include a newline in a string, use \"\\a\" or \"\\a \" as in CSS. done in 3.163 seconds. Auto-regeneration: enabled for '/Users/terrence/Projects/cheatsheets' Server address: http://127.0.0.1:4000 Server running... press ctrl-c to stop. Go to URL: http://127.0.0.1:4000 start searching and using cheatsheets in localhost environment: To generate static web content ONLY: 12345678910111213terrence@igloo ~/Projects/cheatsheets (master ‚ò°=)17:28:56 ùúÜ bundle exec jekyll buildConfiguration file: /Users/terrence/Projects/cheatsheets/_config.yml Source: /Users/terrence/Projects/cheatsheets Destination: ../terrencemiao.github.io/cheatsheets Incremental build: disabled. Enable with --incremental Generating...DEPRECATION WARNING on line 83, column 12 of /Users/terrence/Projects/cheatsheets/_sass/vendor/modularscale/_modularscale.scss:Unescaped multiline strings are deprecated and will be removed in a future version of Sass.To include a newline in a string, use \"\\a\" or \"\\a \" as in CSS. done in 43.269 seconds. Auto-regeneration: disabled. Use --watch to enable. Then can upload published website content from ../terrencemiao.github.io/cheatsheets directory to https://terrencemiao.github.io.","tags":[]},{"title":"The Evolution of Mobile Phones","date":"2018-05-12T09:16:00.000Z","path":"2018/05/12/The-Evolution-of-Mobile-Phones/","text":"Bigger and bigger screen, fewer and fewer buttons, more and more entertaining, less and less thinking. Â±èÂπïË∂äÊù•Ë∂äÂ§ßÔºåÊåâÈîÆË∂äÊù•Ë∂äÂ∞ë„ÄÇÂ®±‰πêË∂äÊù•Ë∂äÂ§öÔºåÊÄùËÄÉË∂äÊù•Ë∂äÂ∞ë„ÄÇ","tags":[]},{"title":"The Evolution of Communication","date":"2018-05-12T09:00:19.000Z","path":"2018/05/12/The-Evolution-of-Communication/","text":"","tags":[]},{"title":"Serenity, powered by Simple Design","date":"2018-05-02T22:43:08.000Z","path":"2018/05/03/Serenity-powered-by-Simple-Design/","text":"","tags":[]},{"title":"Data Science Knowledge Graph","date":"2018-04-28T12:14:35.000Z","path":"2018/04/28/Data-Science-Knowledge-Graph/","text":"","tags":[]},{"title":"Always safe, Always fun","date":"2018-04-17T11:42:41.000Z","path":"2018/04/17/Always-safe-Always-fun/","text":"If you‚Äôre not paying for the product, you are the product. Durex - Always safe, Always fun.","tags":[]},{"title":"ÂøÉÊµÅ / ÂøÉÊµÅ„Çå / Flow","date":"2018-04-06T14:27:24.000Z","path":"2018/04/07/Flow/","text":"A feeling of complete absorption when you‚Äôre engaged in something you love to do without being disrupted by anxiety or boredom. References Flow (psychology), https://en.wikipedia.org/wiki/Flow_(psychology)","tags":[]},{"title":"The longest official place name in Australia","date":"2018-03-28T11:16:57.000Z","path":"2018/03/28/The-longest-official-place-name-in-Australia/","text":"Mamungkukumpurangkuntjunya Hill, is a hill in South Australia. The name means ‚Äúwhere the devil urinates‚Äù in the regional Pitjantjatjara language. The name is the longest official place name in Australia. The hill is located approximately 108.8 km west north-west of Marla.","tags":[]},{"title":"House Prices Down Under","date":"2018-03-26T08:59:11.000Z","path":"2018/03/26/House-Prices-Down-Under/","text":"A look at historical house prices in Sydney and Melbourne from 1880 to 2010. Melbourne Median vs Average Wage 1965 - 2010. It must be remembered that house prices are determined by the demand and supply of credit, not the demand for and supply of housing. Êàø‰ª∑‰∏ç‰∏éÂõΩÊ∞ëÊî∂ÂÖ•ÔºåÁ§æ‰ºöÁ¶èÂà©ÊîæÂú®‰∏ÄËµ∑ËøõË°åËÆ®ËÆ∫ÔºåÊó†ÂºÇ‰∫éÂÖâÂ§©ÂåñÊó•ÈáåËÄçÊµÅÊ∞ì„ÄÇ","tags":[]},{"title":"AlphaGo movie","date":"2018-03-25T08:45:06.000Z","path":"2018/03/25/AlphaGo-movie/","text":"AlphaGo is an intriguing movie, full of striking imagery. Proud of witnessing DeepMind and Google are making history ‚Ä¶","tags":[]},{"title":"The A.I. Revolution Will Not Be Supervised","date":"2018-03-11T09:22:21.000Z","path":"2018/03/11/The-A-I-Revolution-Will-Not-Be-Supervised/","text":"‚ÄúThe A.I. Revolution Will Not Be Supervised.‚Äù - Yann LeCun","tags":[]},{"title":"RESTful calls to create Index and Mappings in ElasticSearch","date":"2018-03-09T23:58:36.000Z","path":"2018/03/10/RESTful-calls-to-create-Index-and-Mappings-in-ElasticSearch/","text":"There is a simple way, using RESTful client to create Index and Mappings in ElasticSearch, for example, with ElasticSearch Head plugin. Create Index in ElasticSearch with Settings JSON file. URL: http://localhost:9200/orders/, Method: PUT 123456789101112131415161718192021222324252627282930313233&#123; \"settings\": &#123; \"index\": &#123; \"number_of_shards\": 1, \"number_of_replicas\": 0, \"analysis\": &#123; \"filter\": &#123; \"partial_matching_filter\": &#123; \"type\": \"edge_ngram\", \"min_gram\": 1, \"max_gram\": 40 &#125; &#125;, \"normalizer\": &#123; \"lowercase_normalizer\": &#123; \"type\": \"custom\", \"filter\": [\"lowercase\"] &#125; &#125;, \"analyzer\": &#123; \"partial_matcher\": &#123; \"type\": \"custom\", \"tokenizer\": \"standard\", \"filter\": [ \"lowercase\", \"partial_matching_filter\" ] &#125; &#125; &#125; &#125; &#125;&#125; Create Mappings in ElasticSearch with Mappings JSON file. URL: http://localhost:9200/orders/_mapping/order, Method: PUT 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&#123; \"dynamic\": \"false\", \"_all\": &#123; \"enabled\": false&#125;, \"properties\": &#123; \"customer_id\": &#123; \"type\": \"keyword\" &#125;, \"encryption_key_id\": &#123; \"type\": \"keyword\", \"index\": \"false\" &#125;, \"metadata_tags\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"category\": &#123; \"type\": \"keyword\" &#125;, \"order_creation_date\": &#123; \"type\": \"date\", \"format\": \"date_optional_time\" &#125;, \"order_reference\": &#123; \"type\": \"text\" &#125;, \"order_id\": &#123; \"type\": \"keyword\", \"normalizer\": \"lowercase_normalizer\" &#125;, \"to_name\": &#123; \"type\": \"text\", \"analyzer\": \"partial_matcher\", \"search_analyzer\": \"standard\" &#125;, \"to_suburb\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"to_state\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"to_postcode\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"to_email\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125; &#125;&#125; To add a new fields to ElasticSearch, while dynamic mapping is off: 123&#123; \"dynamic\": \"false\"&#125; Run with additional fields JSON file, with URL: http://localhost:9200/orders/_mapping/order, Method: PUT 1234567891011121314151617181920212223242526272829303132333435363738&#123; \"properties\": &#123; \"from_name\": &#123; \"type\": \"text\", \"analyzer\": \"partial_matcher\", \"search_analyzer\": \"standard\" &#125;, \"from_business_name\": &#123; \"type\": \"text\", \"analyzer\": \"partial_matcher\", \"search_analyzer\": \"standard\" &#125;, \"from_suburb\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"from_state\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"from_postcode\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"from_country\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"from_email\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125;, \"from_phone\": &#123; \"type\": \"text\", \"analyzer\": \"whitespace\" &#125; &#125;&#125; An ElasticSearch query example, with URL: http://localhost:9200/orders/_search, Method: POST 123456789101112131415161718192021222324252627282930313233343536373839404142434445&#123; \"query\": &#123; \"bool\": &#123; \"must\": [ &#123;\"match\": &#123;\"customer_id\": \"1234567890\"&#125; &#125;, &#123;\"simple_query_string\": &#123; \"query\": \"unlabelled+unmanifested\", \"fields\": [\"metadata_tags\"] &#125; &#125;, &#123; \"bool\": &#123; \"should\": [ &#123; \"multi_match\": &#123; \"query\": \"TerrenceMiao\", \"fields\": [ \"name\", \"business_name\", \"order_id\", \"shipment_id\", \"sender_references\", \"article_ids\" ] &#125; &#125;, &#123;\"match\": &#123;\"phone\": \"abracadbravvv5/vv70qBu+/ve+/ve6EuA7vv70g77+9Su+/ve+/vX5y77+95JuV\"&#125; &#125;, &#123; \"multi_match\": &#123; \"query\": \"gdgdggddvvv75/vv70qBu+/ve+/ve6EuA7vv70g77+9Su+/ve+/vX5y77+95JuV\", \"fields\": [ \"suburb\", \"state\", \"country\", \"postcode\", \"email\" ] &#125; &#125; ] &#125; &#125;, &#123;\"simple_query_string\": &#123; \"query\": \"DESPATCH\", \"fields\": [\"movement_type\"] &#125; &#125; ] &#125; &#125;, \"sort\": [ &#123;\"order_creation_date\": &#123;\"order\": \"desc\", \"unmapped_type\": \"date\"&#125; &#125;, &#123;\"shipment_creation_date\": &#123;\"order\": \"desc\"&#125; &#125; ], \"from\": \"0\",\"size\": \"1\"&#125; An example query with date/time type in a range: 12345678910111213141516&#123; \"query\": &#123; \"range\": &#123; \"shipment_creation_date\": &#123; \"gte\": \"2018-04-19T15:30:00\", \"lte\": \"now\", \"time_zone\": \"+10:00\" &#125; &#125; &#125;, \"from\": 0, \"size\": 10, \"sort\": [], \"aggs\": &#123;&#125;&#125;","tags":[]},{"title":"AWS access key id and secret access key","date":"2018-03-09T23:28:06.000Z","path":"2018/03/10/AWS-access-key-id-and-secret-access-key/","text":"There are some secret of AWS credentials, i.e., its Access Key ID and Secret Access Key, which let you connect AWS services withouth authentication. In a quintessential project environment, you have dev, test, prod environment setup in AWS. Your local AWS_PROFILE is something like this so you can switch to different targeting end services while run your application on localhost: 12345678910111213141516ùúÜ cat ~/.aws/credentials[default]aws_access_key_id=dev-aws_access_key_idaws_secret_access_key=dev-aws_secret_access_key[dev]aws_access_key_id=dev-aws_access_key_idaws_secret_access_key=dev-aws_secret_access_key[test]aws_access_key_id=test-aws_access_key_idaws_secret_access_key=test-aws_secret_access_key[prod]aws_access_key_id=prod-aws_access_key_idaws_secret_access_key=prod-aws_secret_access_key When test Jest client in Test environment, a AWS ElasticSearch client library, error thrown: 1232018-02-27 15:18:19 INFO org.paradise.search.routes.ElasticSearchRoute - Body: io.searchbox.core.Index@4804b850[uri=orders/order/4SMK1UmbtqIAAAFhmYAFt9V7,method=PUT] message: searchIndexRoute - updating search index2018-02-27 15:18:19 INFO org.apache.camel.processor.interceptor.Tracer - &gt;&gt;&gt; (searchIndexRoute) org.paradise.search.routes.ElasticSearchRoute$$Lambda$137/819330075@119b837 --&gt; org.paradise.search.routes.ElasticSearchRoute$$Lambda$138/2035788375@2acacdf &lt;&lt;&lt; Pattern:InOnly, BodyType:io.searchbox.core.Index2018-02-27 15:18:19 ERROR org.paradise.search.routes.ElasticSearchRoute - Error while updating search index. 403 Forbidden &#123;\"Message\":\"User: arn:aws:iam::123456789012:user/svcbamboo is not authorized to perform: es:ESHttpPut on resource: paradise-esv5-test-esd\"&#125; at 'orders/order/4SMK1UmbtqIAAAFhmYAFt9V7' It turns out that WRONG Dev AWS_PROFILE applied in Test environment. Replacing ‚Äúaws_access_key_id‚Äù and ‚Äúaws_secret_access_key‚Äù from the default profile with ‚Äúaws_access_key_id‚Äù and ‚Äúaws_secret_access_key‚Äù from test profile: 12345678910111213141516ùúÜ cat ~/.aws/credentials[default]aws_access_key_id=test-aws_access_key_idaws_secret_access_key=test-aws_secret_access_key[dev]aws_access_key_id=dev-aws_access_key_idaws_secret_access_key=dev-aws_secret_access_key[test]aws_access_key_id=test-aws_access_key_idaws_secret_access_key=test-aws_secret_access_key[prod]aws_access_key_id=prod-aws_access_key_idaws_secret_access_key=prod-aws_secret_access_key Rerun the test and in log: 1232018-02-27 15:23:54 INFO org.paradise.search.routes.ElasticSearchRoute - Body: io.searchbox.core.Index@62b18125[uri=orders/order/RVwK1UIBXmoAAAFhdJkFo9WA,method=PUT] message: searchIndexRoute - updating search index2018-02-27 15:23:54 INFO org.apache.camel.processor.interceptor.Tracer - &gt;&gt;&gt; (searchIndexRoute) org.paradise.search.routes.ElasticSearchRoute$$Lambda$137/1716909005@a809a62 --&gt; org.paradise.search.routes.ElasticSearchRoute$$Lambda$138/612681832@4b2713b1 &lt;&lt;&lt; Pattern:InOnly, BodyType:io.searchbox.core.Index2018-02-27 15:23:55 INFO org.paradise.search.routes.ElasticSearchRoute - Finished updating search index at 'orders/order/RVwK1UIBXmoAAAFhdJkFo9WA'.","tags":[]},{"title":"AWS ElasticSearch and Kibana proxy setup","date":"2018-02-17T09:26:41.000Z","path":"2018/02/17/AWS-ElasticSearch-and-Kibana-proxy-setup/","text":"There are several ways to access Amazon AWS ElasticSearch and Kibana services, which are HTTP based, without inject into HTTP request headers with authentication key ‚Ä¶ AWS ES ProxyInstall a proxy application - AWS ES/Kibana Proxy. Download it from https://www.npmjs.com/package/aws-es-kibana and install: 1$ npm install -g aws-es-kibana Run AWS ES/Kibana Proxy then connect to ElasticSearch and Kibana services on AWS: 123456789101112131415161718192021222324252627$ cat ~/.aws/config[default]output = jsonregion = ap-southeast-2[profile sandy-test]output = jsonregion = ap-southeast-2$ cat ~/.aws/credentials[default]aws_access_key_id=Academyaws_secret_access_key=Dingly Ding[ap-test]aws_access_key_id=Abracadbraaws_secret_access_key=Somewhere Over The Rainbow$ AWS_PROFILE=ap-test aws-es-kibana search-paradise-esv5-test-01-esd-blah23dlaoed81nz890adle4.ap-southeast-2.es.amazonaws.com__________ _________ _________________ ________ _________ |_ | / /_ ___/ ___ ____/_ ___/ ___ __ \\________________ ______ ____ /__ /| |_ | /| / /_____ \\ __ __/ _____ \\ __ /_/ /_ ___/ __ \\_ |/_/_ / / /_ /_ ___ |_ |/ |/ / ____/ / _ /___ ____/ / _ ____/_ / / /_/ /_&gt; &lt; _ /_/ / /_//_/ |_|___/|__/ /____/ /_____/ /____/ /_/ /_/ \\____//_/|_| _\\__, / (_) /____/AWS ES cluster available at http://127.0.0.1:9200Kibana available at http://127.0.0.1:9200/_plugin/kibana/ With Fish Shell: 123456789ùúÜ env AWS_PROFILE=ap-test aws-es-kibana search-paradise-esv5-test-01-esd-blah23dlaoed81nz890adle4.ap-southeast-2.es.amazonaws.com__________ _________ _________________ ________ _________ |_ | / /_ ___/ ___ ____/_ ___/ ___ __ \\________________ ______ ____ /__ /| |_ | /| / /_____ \\ __ __/ _____ \\ __ /_/ /_ ___/ __ \\_ |/_/_ / / /_ /_ ___ |_ |/ |/ / ____/ / _ /___ ____/ / _ ____/_ / / /_/ /_&gt; &lt; _ /_/ / /_//_/ |_|___/|__/ /____/ /_____/ /____/ /_/ /_/ \\____//_/|_| _\\__, / (_) /____/AWS ES cluster available at http://127.0.0.1:9200Kibana available at http://127.0.0.1:9200/_plugin/kibana/ SSH TunnelSet up SSH Tunnel for AWS ElasticSearch https://search-paradise-esv5-test-01-esd-blah23dlaoed81nz890adle4.ap-southeast-2.es.amazonaws.com from 443 port to localhost 9200: 1ùúÜ ssh -L 9200:search-paradise-esv5-test-01-esd-blah23dlaoed81nz890adle4.ap-southeast-2.es.amazonaws.com:443 -l ec2-user aws-jump-box Then access AWS ElasticSearch at: https://localhost:9200, AWS Kibana at: https://localhost:9200/_plugin/kibana ElasticSearch HeadWith plugin ElasticSearch Head, to query ElasticSearch, using URL and index ‚Äúorders-search-box‚Äù e.g. https://localhost:9200/orders-search-test/, and context path ‚Äú_search‚Äù","tags":[]},{"title":"Good things come to those who could wait till the last","date":"2018-02-06T12:35:51.000Z","path":"2018/02/06/Good-things-come-to-those-who-could-wait-till-the-last/","text":"And good things come in two (Â•Ω‰∫ãÊàêÂèå)„ÄÇ ÊÉ≥ÂΩìÂàù‰π∞ËÄ≥Êú∫Êó∂ÂØπÂ∏ÇÂú∫ÂÅöËøáÁöÑ‰∏ÄÁï™Ë∞ÉÁ†îÔºåÂØπÊ¨ßÊ¥≤ÔºåÊó•Êú¨Â§ßÂéÇÁöÑ‰∫ßÂìÅ‰πüÁï•Áü•‰∏Ä‰∫å„ÄÇÂΩìÂêå‰∫ã‰ªãÁªç Bluedio (ËìùÂº¶)Ôºå‰∏ÄÂÆ∂‰ªéÊ≤°Âê¨ËØ¥ËøáÁöÑ‰∏≠ÂõΩÂπøÂ∑ûÂÖ¨Âè∏Áîü‰∫ßÁöÑËÄ≥Êú∫Êó∂Ôºå‰ª•‰∏∫‰ªÖÊòØ‰∏ÄÂÆ∂ Made In ChinaÔºå‰ª∑Âªâ‰ΩéË¥®ÁöÑÂ±±ÂØ®‰∫ßÂìÅ„ÄÇ‰ΩÜË¢´ÂëäÁü• Bluedio ËÄ≥Êú∫Âú®‰∫öÈ©¨ÈÄäÈîÄÈáèÊéíË°åÁ¨¨‰∫åÂêéÔºåÁùÄÂÆûÂú∞Â§ßÂêÉ‰∏ÄÊñ§„ÄÇ Si vous voyez un entrepreneur chinois sauter par la fen√™tre, suivez-le, il y a srement de bonnes affaires √† faire (If you see a Chinese entrepreneur jumping out the window, follow him, there is certainly of good bargains to be done). ‰∫öÈ©¨ÈÄäÁöÑÁî®Êà∑Â§öÈùûÂëÜÁìú„ÄÇÂΩìÂêÉÁìúÁæ§‰ºó‰∫âÂÖàÊÅêÂêéÂú∞ jumping out of window Êó∂Ôºåyou have to follow. There is certainly of good bargains to be done. Ë¥ßÊØî‰∏âÂÆ∂ÂêéÂú® Aliexpress ‰∏ã‰∫ÜÂçï„ÄÇ Bluedio Ai ‰ªéÊæ≥Ê¥≤Êú¨ÂúüÂèëË¥ß„ÄÇ‰∏âÂ§©ÂêéÊî∂Âà∞„ÄÇ ÊàëÂØπËøêÂä®ËÄ≥Êú∫Ë¶ÅÊ±Ç‰∏çÈ´ò„ÄÇËΩª‰æøÔºåËàíÈÄÇÔºåÈîªÁÇºÊó∂‰∏çË¶ÅÊÄªÂàÜÂøÉÂÆÉ‰ºöÊéâ‰∏ãÊù•„ÄÇÁî®Ëøá‰ªé $5 ÁöÑ cheapy Âà∞È´òÁ´Ø Apple EarPodsÔºåÊ≤°‰∏Ä‰∏™‰ª§‰∫∫Êª°ÊÑè„ÄÇ ÁªèËøá‰∏ÄÊÆµÊó∂Èó¥ÁöÑ‰ΩøÁî®ÔºåÂ∑≤ÊÑüËßâ Ai ÊòØÊàëÊâÄÊ±Ç„ÄÇË∑ëÊ≠•Êó∂Êà¥‰∏äÊÑüËßâ‰∏çÂà∞Â≠òÂú®„ÄÇËÄ≥Êú∫Ôºå‰∫∫‰∏éËá™ÁÑ∂ËææÊàêÂíåË∞êÔºåÂ∑≤Ëûç‰∏∫‰∏Ä‰Ωì‰∫Ü„ÄÇ ‰ªéÂõΩÂÜÖÁªèÈòøÈáåÁâπÂø´ÔºàÂÖçË¥πÁöÑÔºâÔºåBluedio F2 ‰∏§Âë®Âêé‰πüÂà∞‰∫Ü„ÄÇ‚ÄùF‚Äù ‰ª£Ë°® Faith (Âø†ËØö)„ÄÇF2 Âú®Â§ñËßÇËÆæËÆ°‰∏ä‰πüÂø†ËØöÂú∞Êã∑Ë¥ù‰∫ÜËëóÂêçÁöÑ Bose QC-35„ÄÇOne on one ÊØîËæÉÔºåF2 Âú®ÈáçÈáè‰∏äÊØî QC-35 ‰∏ä‰∫Ü‰∏Ä‰∏™Á∫ßÂà´„ÄÇ‰ΩÜÂÖ®ÈáëÂ±û frameÔºåËÆ©Âº∫ÁÉàÂéåÊÅ∂Â°ëÊñôÊÑüÁöÑÁî®Êà∑‰Ωì‰ºöÂà∞ÂéÇÂÆ∂ÁöÑÊ∏©Êöñ„ÄÇËÄ≥Êú∫ÂêÑ‰∏™ÊñπÈù¢ÂÅöÂ∑•‰ºòÂºÇÔºåÁî®ÊñôÂÆûË∂≥ÔºåÂ§öÂ§ÑÁªÜËäÇË°®Áé∞Âá∫Âå†‰∫∫Áî®ÂøÉ„ÄÇ ËØïÂê¨‰∫Ü a wild range ‰∏çÂêåÈ£éÊ†ºÁöÑÈü≥‰πê‰ΩúÂìÅÂêéÔºåyou could feel the rich bass, warmer tone, not overpowering highs, and very detailed clarity from F2. Èü≥Ë¥®‰∏éÈ´òÁ´ØËÄ≥Êú∫Ë∂≥Êúâ‰∏ÄÊãº„ÄÇ Active Noise Cancelation (ANC) ‰∏çÂ¶Ç QC-35. Â§ñÁïåÁöÑËúÇÈ∏£Â£∞Âú®ÁªèËøá noise cancelation ÂêéÁªüÁªüÊ∑πÊ≤°Âú®‰∏ÄÁâáÁôΩÂô™Â£∞‰∏≠„ÄÇ Ë∞àÂà∞Èü≥Ë¥®ÔºåF2 Ëøò‰∏çÊòØ Bluedio ÁöÑÊúÄÂº∫‰∫ßÂìÅ„ÄÇBluedio Êúâ‰∏ÄÊ¨æ Victory Á≥ªÂàóÁöÑ headphonesÔºåwith 12 driversÔºåÁõ∏ÂΩì‰∫éÊúâÂçÅ‰∫å‰∏™ speakers ÁöÑ‰∏ÄÂØπÈü≥ÁÆ± built-in Â∞èÂ∞èÁöÑ headphones ÈáåÔºåÊèê‰æõ‰∫Ü studio level ÁöÑÈü≥Ë¥®‰∫´Âèó„ÄÇÂØπÈ´òÂìÅË¥®ÁªßÁª≠ following. Final thought. $52 for a È´òÊÄß‰ª∑ÊØîÁöÑ wireless wheadphone plus ANC like this, nothing could go wrong. ÊÉäÂñú‰πã‰ΩôÔºå‰Ω†‰ºöËßâÂæóÂØπËøô‰∏™ËÄ≥Êú∫ÊØè‰∏ÄÂàÜÈí±ÁöÑÊäïËµÑÈÉΩÊòØÁâ©Ë∂ÖÊâÄÂÄº„ÄÇ Top range products on same market now like Sennheiser PXC 550 (Best Audio Quality), Sony WH1000XM2 (Most Elegant Design) and Bose QC 35 II (People‚Äôs Choice), cost 10x what you pay for Bluedio„ÄÇBluedio Âú®Êúâ‰∫õÊñπÈù¢‰∏éÈ°∂Á∫ß‰∫ßÂìÅËøòÊúâË∑ùÁ¶ªÔºåbut spend $500 for one ÊúâÈ¢ùÂ§ñ‰∫´ÂèóÁöÑ headphone ÊòØÂê¶ÁúüÊúâÊâÄÂÄº? Furthermore, think about if you wear them cross the road, and you are run over by car, that will seriously damage these expensive headphones. ÈïøÂüéÊ∞∏‰∏çÂÄíÔºåÂõΩË¥ßÂΩìËá™Âº∫„ÄÇ","tags":[]},{"title":"OnePlus 5T - a smartphone full of all the right ideas","date":"2018-01-12T08:13:47.000Z","path":"2018/01/12/OnePlus-5T-a-smartphone-full-of-all-the-right-ideas/","text":"Bought one OnePlus 5T Lava Red (ÁÜîÂ≤©Á∫¢) special edition from OnePlus China website - http://rush.oneplus.cn/ in December 2017, when this edition is first available and exclusively sale in mainland China, which Red Colour is very popular in China that means bringing you a good fortune. Un-boxing Dual SIMsDual SIMs support. Having two mobile network carriers ALL in active mode. Performance Testby AnTuTu Benchmark by Geekbench by SpeedTest - ADSL2 connection Shooting TestSupport Dual Cameras and Portrait mode OnePlus Family OnePlus OneÔºåOnePlus 2ÔºåOnePlus 3ÔºåOnePlus 5, along with OnePlus 5TÔºå‰∏ÄÈÉ®ÂÆåÂÖ®‰∏ÄÂä†ÊâãÊú∫ÁöÑÁºñÂπ¥Âè≤ÔºåÊõ¥ÊòæÁî®Êà∑ÂØπÈ´òË¥®ÈáèÔºåÈ´òÊÄß‰ª∑ÊØîÁöÑ‰∏ÄÂä†‰∫ßÂìÅÁöÑÂñúÁà±‰∏éÂø†ËØö„ÄÇ What OnePlus stands for is a no-gimmicks smartphone manufacturer build around a community. For a good example, OnePlus 5T, a phone is full of all the right ideas - hardware design, software responsiveness, and overall usability. ÊâìÂä®Áî®Êà∑ÁöÑÂ•Ω‰∫ßÂìÅËá™Â∑±‰ºöÁÉ≠ÈîÄÔºå‰∏çÂú®‰πéÂçñÂà∞Âì™Èáå„ÄÇ‰∏ÄÂä†ÊâÄÂÅöÁöÑ‰∏ÄÂàáÔºå‰∏çËøáÊòØÂä™ÂäõÊääËØ•ÂÅöÁöÑÂÅöÂæóÊõ¥Â•Ω„ÄÇ ÈïøÂüéÊ∞∏‰∏çÂÄíÔºåÂõΩË¥ßÂΩìËá™Âº∫„ÄÇ Never Settle.","tags":[]},{"title":"First ever half marathon trial","date":"2017-10-28T23:18:10.000Z","path":"2017/10/29/First-ever-half-marathon-trial/","text":"Try the first ever half marathon today - Yarra Boulevard run. New experience such routine, Yarra Boulevard from suburb Kew to Hawthorn, either by walking or cycling. Terrible weather condition today, windy and hot. Have to stop several time to get water supplied in case of dehydrated. After 17km, left leg calf muscles start cramping, force me to reduce the pace. After 19km, right leg calf muscles also start cramping, but I keep moving forward. New new personal best of Performance Level - 55 after run. Meanwhile, remind me there is limits inside me, but I know I can finish it. Quotes from Johnnie Walker commercial: ‚ÄúWhen the sun came shining and I was strolling and the wheat fields waving and the dust clouds rolling. As the fog was lifting, a voice was chanting, this land was made for you and me.‚Äù ‚ÄúAs I was walking that ribbon of highway, I saw above me that endless sky way. I saw below me that golden valley, Esta tierra fue hecha para ti y para m√≠.‚Äù ‚ÄúI‚Äôve roamed and rambled and I‚Äôve followed my footsteps to the sparkling sands over diamond deserts, and all around me a voice was sounding, this land was made for you and me.‚Äù Keep running!","tags":[]},{"title":"ÊµÖË∞àÁ®ãÂ∫èÂëòÁöÑÊï∞Â≠¶‰øÆÂÖª","date":"2017-09-23T13:46:22.000Z","path":"2017/09/23/ÊµÖË∞àÁ®ãÂ∫èÂëòÁöÑÊï∞Â≠¶‰øÆÂÖª/","text":"ÂèØËÉΩÊúâÂæàÂ§öÊúãÂèãÂú®ÁΩë‰∏äÁúãËøá Google ÂÖ¨Âè∏Êó©Âá†Âπ¥ÁöÑÊãõËÅòÂπøÂëäÔºåÂÆÉÁöÑÁ¨¨‰∏ÄÈ¢òÂ¶Ç‰∏ã‰∫Ü: {first 10-digit prime found in consecutive digits e}.com e ‰∏≠Âá∫Áé∞ÁöÑËøûÁª≠ÁöÑÁ¨¨‰∏Ä‰∏™10‰∏™Êï∞Â≠óÁªÑÊàêÁöÑË¥®Êï∞„ÄÇ ÊçÆËØ¥ÂΩìÊó∂Ëøô‰∏™ËØïÈ¢òÂú®ÁæéÂõΩÂæàÂ§öÂú∞ÈìÅÁöÑÂá∫Á´ôÂè£ÈÉΩÊúâÂ§ßÂπÖÂπøÂëäÔºåÂè™Ë¶ÅÊ≠£Á°ÆËß£Á≠î‰∫ÜËøôÈÅìÈ¢òÔºåÂú®ÊµèËßàÂô®ÁöÑÂú∞ÂùÄÊ†è‰∏≠ËæìÂÖ•Ëøô‰∏™Á≠îÊ°àÔºåÂ∞±ÂèØ‰ª•ËøõÂÖ•‰∏ã‰∏ÄËΩÆÁöÑÊµãËØïÔºåÊï¥‰∏™ÊµãËØïËøáÁ®ãÂ¶ÇÂêå‰∏Ä‰∏™Êï∞Â≠¶Ëø∑ÂÆ´ÔºåÁõ¥Âà∞‰Ω†Êàê‰∏∫ Google ÁöÑ‰∏ÄÂëò„ÄÇ ÂèàÂ¶Ç Intel ÊüêÂπ¥ÁöÑ‰∏ÄÈÅìÈù¢ËØïÈ¢òÁõÆ: Â∑¥ÊãøËµ´ÁóÖÊïÖ‰∫é 1945Âπ¥8Êúà31Êó•„ÄÇ‰ªñÁöÑÂá∫ÁîüÂπ¥‰ªΩÊÅ∞Â•ΩÊòØ‰ªñÂú®‰∏ñÊó∂ÊüêÂπ¥Âπ¥ÈæÑÁöÑÂπ≥Êñπ„ÄÇ ÈóÆ:‰ªñÊòØÂì™Âπ¥Âá∫ÁîüÁöÑ? ËøôÈÅìÁúã‰ººÂæàÁÆÄÂçïÁöÑÊï∞Â≠¶ÈóÆÈ¢òÔºå‰Ω†ËÉΩ‰∏çËÉΩËÉΩÂø´Âú∞Ëß£Á≠îÂë¢? ‰∏ãÈù¢ÂàôÊòØ‰∏ÄÈÅì‰∏ñÁïåÁ¨¨‰∏ÄÂ§ßËΩØ‰ª∂ÂÖ¨Âè∏ÂæÆËΩØÁöÑÊãõËÅòÊµãËØïÈ¢ò: ‰∏≠Èó¥Âè™Èöî‰∏Ä‰∏™Êï∞Â≠óÁöÑ‰∏§‰∏™Á¥†Êï∞Ë¢´Áß∞‰∏∫Á¥†Êï∞ÂØπÔºåÊØîÂ¶Ç 5 Âíå 7Ôºå17 Âíå 19ÔºåËØÅÊòéÁ¥†Êï∞ÂØπ‰πãÈó¥ÁöÑÊï∞Â≠óÊÄªËÉΩË¢´ 6 Êï¥Èô§ (ÂÅáËÆæËøô‰∏§‰∏™Á¥†Êï∞ÈÉΩÂ§ß‰∫é 6)ÔºåÁé∞Âú®ËØÅÊòéÊ≤°ÊúâÁî±‰∏â‰∏™Á¥†Êï∞ÁªÑÊàêÁöÑÁ¥†Êï∞ÂØπ„ÄÇ ËøôÊ†∑ÁöÑËØïÈ¢òËøòÊúâÂæàÂ§öÂæàÂ§öÔºåËøô‰∫õÈ¢òÁõÆ‰πçÂàùÁúã‰∏äÂéªÈÉΩÊòØ‰∏Ä‰∫õÊï∞Â≠¶ÈóÆÈ¢ò„ÄÇ‰ΩÜÊòØ‰∏ñÁïå‰∏ä‰∏Ä‰∫õËëóÂêçÁöÑÂÖ¨Âè∏ÈÉΩÊääÂÆÉ‰ª¨Áî®‰∫éÊãõËÅòÊµãËØïÔºåÂèØËßÅÂÆÉ‰ª¨ÂØπÊñ∞ÂëòÂ∑•Êï∞Â≠¶Âü∫Á°ÄÁöÑÈáçËßÜ„ÄÇÊï∞Â≠¶ËØïÈ¢ò‰∏éÂ∫îÁî®Á®ãÂ∫èËØïÈ¢òÊòØËÆ∏Â§öÂ§ßÂûãËΩØ‰ª∂ÂÖ¨Âè∏Èù¢ËØï‰∏≠ÊåáÂêëÊÄßÊúÄÊòéÊòæÁöÑ‰∏ÄÁ±ªËØïÈ¢òÔºåËøô‰∫õËØïÈ¢òÂ∞±ÊòØËÄÉÂØüÂ∫îËÅòËÄÖÁöÑÊï∞Â≠¶ËÉΩÂäõ‰∏éËÆ°ÁÆóÊú∫ËÉΩÂäõ„ÄÇÊüêÂí®ËØ¢ÂÖ¨Âè∏ÁöÑ‰∏ÄÂêçÈ´òÁ∫ßÈ°æÈóÆÊõæËØ¥: ÂæÆËΩØÊòØ‰∏ÄÂÆ∂ÁîµËÑëËΩØ‰ª∂ÂÖ¨Âè∏ÔºåÂΩìÁÑ∂Ë¶ÅÊ±ÇÂÖ∂ÂëòÂ∑•Êúâ‰∏ÄÂÆöÁöÑËÆ°ÁÆóÊú∫ÂíåÊï∞Â≠¶ËÉΩÂäõÔºåÈù¢ËØï‰∏≠Ëá™ÁÑ∂Â∞±‰ºöËÄÉÂØüËøôÁ±ªËÉΩÂäõ„ÄÇÂæÆËΩØÁöÑÈù¢ËØïÈ¢òÁõÆÂ∞±ËÄÉÂØü‰∫ÜÂ∫îËÅò‰∫∫ÂëòÂØπÂü∫Á°ÄÁü•ËØÜÁöÑÊéåÊè°Á®ãÂ∫¶„ÄÅÂØπÂü∫Á°ÄÁü•ËØÜÁöÑÂ∫îÁî®ËÉΩÂäõÔºåÁîöËá≥ÊöóÂê´‰∫ÜÂØπËÆ°ÁÆóÊú∫Âü∫Êú¨ÂéüÁêÜÁöÑËÄÉÂØü„ÄÇÊâÄ‰ª•ÔºåËøôÊ†∑ÁöÑÈù¢ËØïÈ¢òÁõÆÁöÑÁ°ÆÂæà‚ÄúÊØíËæ£‚ÄùÔºåË∂≥‰ª•Á≠õÈÄâÂà∞ÂêàÈÄÇÁöÑ‰∫∫„ÄÇ ÂõõÂ∑ùÂ§ßÂ≠¶Êï∞Â≠¶Â≠¶Èô¢ÁöÑÊõπÂπøÁ¶èÊïôÊéàÊõæËØ¥Ëøá: ‚Äú‰∏Ä‰∏™Â§ßÂ≠¶ÁîüÂ∞ÜÊù•ÁöÑ‰Ωú‰∏∫‰∏é‰ªñÁöÑÊï∞Â≠¶‰øÆÂÖªÊúâÂæàÂ§ßÁöÑÂÖ≥Á≥ª‚Äù„ÄÇ Â§ßÂ≠¶ËÆ°ÁÆóÊú∫‰∏ì‰∏öÂ≠¶ÁîüÈÉΩÊúâÊÑüËß¶ÔºåËÆ°ÁÆóÊú∫‰∏ì‰∏öËØæÁ®ã‰∏≠ÊúÄÈöæÁöÑÂá†Èó®ËØæÁ®ãËé´Ëøá‰∫éÁ¶ªÊï£Êï∞Â≠¶„ÄÅÁºñËØëÂéüÁêÜ„ÄÅÊï∞ÊçÆÁªìÊûÑÔºåÂΩìÁÑ∂ÂÉèÁªÑÂêàÊï∞Â≠¶„ÄÅÂØÜÁ†ÅÂ≠¶„ÄÅËÆ°ÁÆóÊú∫ÂõæÂΩ¢Â≠¶Á≠âËØæÁ®ã‰πü‰ª§ËÆ∏Â§ö‰∫∫Â≠¶Ëµ∑Êù•Áõ∏ÂΩìÂêÉÂäõÔºåÂæàÂ§öËá™ËÆ§‰∏∫Êï∞ÊçÆÂ∫ìÂ≠¶ÂæóÂæàÂ•ΩÁöÑÂ≠¶ÁîüÂú®ËåÉÂºè„ÄÅÂáΩÊï∞‰æùËµñ„ÄÅ‰º†ÈÄí‰æùËµñÁ≠âÊï∞Â≠¶ÊÄßÊØîËæÉÂº∫ÁöÑÊ¶ÇÂøµÈù¢ÂâçÊÑüÂà∞Âäõ‰∏ç‰ªéÂøÉÔºåËøô‰∫õÈÉΩÊòØÂõ†‰∏∫Êï∞Â≠¶Âü∫Á°ÄÊàñËÄÖËØ¥Êï∞Â≠¶Áü•ËØÜÁöÑÁº∫‰πèÊâÄÈÄ†ÊàêÁöÑ„ÄÇÊï∞Â≠¶ÊòØËÆ°ÁÆóÊú∫ÁöÑÂü∫Á°ÄÔºåËøô‰πüÊòØ‰∏∫‰ªÄ‰πàËÄÉËÆ°ÁÆóÊú∫‰∏ì‰∏öÁ†îÁ©∂ÁîüÊï∞Â≠¶ÈÉΩÈááÁî®ÊúÄÈöæËØïÈ¢ò (Êï∞Â≠¶‰∏Ä) ÁöÑÂéüÂõ†ÔºåÂΩìÁÑ∂Ëøô‰πüËÉΩ‰øÉ‰Ωø‰∏Ä‰∫õÊñ∞ÁöÑ‰∫§ÂèâÂ≠¶ÁßëÂ¶ÇÊï∞Â≠¶‰∏éÂ∫îÁî®ËΩØ‰ª∂„ÄÅ‰ø°ÊÅØ‰∏éËÆ°ÁÆóÁßëÂ≠¶‰∏ì‰∏öÁ≠âÈ£ûÈÄüÂèëÂ±ï„ÄÇ ËÆ∏Â§öÂ§©ÊâçÁ®ãÂ∫èÂëòÊú¨Ë∫´Â∞±ÊòØÊï∞Â≠¶Â∞ñÂ≠êÔºå‰ºóÊâÄÂë®Áü•ÔºåBill Gates ÁöÑÊï∞Â≠¶ÊàêÁª©‰∏ÄÁõ¥ÈÉΩÂæàÊ£íÔºå‰ªñÁîöËá≥ÊõæÁªèÊúüÊúõÂΩì‰∏ÄÂêçÊï∞Â≠¶ÊïôÊéàÔºå‰ªñÁöÑÊØçÊ†° ‚Äî ÊπñÊª®‰∏≠Â≠¶ÁöÑÊï∞Â≠¶Á≥ª‰∏ª‰ªªÂºóÈõ∑Á¶è¬∑ËµñÁâπÊõæËøôÊ†∑Ë∞àËµ∑Ëøá‰ªñÁöÑÂ≠¶Áîü: ‚Äú‰ªñËÉΩÁî®‰∏ÄÁßçÊúÄÁÆÄÂçïÁöÑÊñπÊ≥ïÊù•Ëß£ÂÜ≥Êüê‰∏™‰ª£Êï∞ÊàñËÆ°ÁÆóÊú∫ÈóÆÈ¢òÔºå‰ªñÂèØ‰ª•Áî®Êï∞Â≠¶ÁöÑÊñπÊ≥ïÊù•ÊâæÂà∞‰∏ÄÊù°Â§ÑÁêÜÈóÆÈ¢òÁöÑÊç∑ÂæÑÔºåÊàëÊïô‰∫ÜËøô‰πàÂ§öÂπ¥ÁöÑ‰π¶ÔºåÊ≤°ËßÅËøáÂÉè‰ªñËøôÊ†∑Â§©ÂàÜÁöÑÊï∞Â≠¶Â•áÊâç„ÄÇ‰ªñÁîöËá≥ÂèØ‰ª•ÂíåÊàëÂ∑•‰ΩúËøáÂ§öÂπ¥ÁöÑÈÇ£‰∫õ‰ºòÁßÄÊï∞Â≠¶ÂÆ∂Â™≤Áæé„ÄÇÂΩìÁÑ∂ÔºåÊØîÂ∞î‰πüÂêÑÊñπÈù¢Ë°®Áé∞ÂæóÈÉΩÂæà‰ºòÁßÄÔºå‰∏ç‰ªÖ‰ªÖÊòØÊï∞Â≠¶Ôºå‰ªñÁöÑÁü•ËØÜÈù¢ÈùûÂ∏∏ÂπøÊ≥õÔºåÊï∞Â≠¶‰ªÖÊòØ‰ªñ‰ºóÂ§öÁâπÈïø‰πã‰∏Ä„ÄÇ‚Äù ÂΩ±Âìç‰∏Ä‰ª£‰∏≠ÂõΩÁ®ãÂ∫è‰∫∫ÁöÑÈáëÂ±±ËΩØ‰ª∂ËÇ°‰ªΩÊúâÈôêÂÖ¨Âè∏Ëë£‰∫ãÈïøÊ±Ç‰ºØÂêõÂΩìÂπ¥È´òËÄÉÊï∞Â≠¶ÊàêÁª©Êª°ÂàÜËøõ‰∏ÄÊ≠•ËØ¥Êòé‰∫ÜÈóÆÈ¢ò„ÄÇÂæàÂ§öÊï∞Â≠¶Âü∫Á°ÄÂæàÂ•ΩÁöÑ‰∫∫Ôºå‰∏ÄÊó¶ÁÜüÊÇâ‰∫ÜÊüêÁßçËÆ°ÁÆóÊú∫ËØ≠Ë®ÄÔºå‰ªñÂèØ‰ª•ÂæàÂø´Âú∞ÁêÜËß£‰∏Ä‰∫õÁÆóÊ≥ïÁöÑÁ≤æÈ´ìÔºå‰Ωø‰πãËÉΩÂ§üËøêÁî®Ëá™Â¶ÇÔºåÂπ∂ÂèØËÉΩÂÜôÂá∫Êó∂Èó¥‰∏éÁ©∫Èó¥Â§çÊùÇÂ∫¶ÈÉΩÊúâÊòéÊòæÊîπÂñÑÁöÑÁÆóÊ≥ï„ÄÇ Á®ãÂ∫èËÆæËÆ°ÂΩì‰∏≠Ëß£ÂÜ≥ÁöÑÁõ∏ÂΩì‰∏ÄÈÉ®ÂàÜÈóÆÈ¢òÈÉΩ‰ºöÊ∂âÂèäÂêÑÁßçÂêÑÊ†∑ÁöÑÁßëÂ≠¶ËÆ°ÁÆóÔºåËøôÈúÄË¶ÅÁ®ãÂ∫èÂëòÂÖ∑Êúâ‰ªÄ‰πàÊ†∑ÁöÑÂü∫Á°ÄÂë¢? ÂÆûÈôÖÈóÆÈ¢òËΩ¨Êç¢‰∏∫Á®ãÂ∫èÔºåË¶ÅÁªèËøá‰∏Ä‰∏™ÂØπÈóÆÈ¢òÊäΩË±°ÁöÑËøáÁ®ãÔºåÂª∫Á´ãËµ∑ÂÆåÂñÑÁöÑÊï∞Â≠¶Ê®°ÂûãÔºåÂè™ÊúâËøôÊ†∑ÔºåÊàë‰ª¨ÊâçËÉΩÂª∫Á´ã‰∏Ä‰∏™ËÆæËÆ°ËâØÂ•ΩÁöÑÁ®ãÂ∫è„ÄÇ‰ªé‰∏≠Êàë‰ª¨‰∏çÈöæÁúãÂá∫Êï∞Â≠¶Âú®Á®ãÂ∫èËÆæËÆ°È¢ÜÂüüÁöÑÈáçË¶ÅÊÄß„ÄÇÁÆóÊ≥ï‰∏éËÆ°ÁÆóÁêÜËÆ∫ÊòØËÆ°ÁÆóÊú∫Á®ãÂ∫èËÆæËÆ°È¢ÜÂüüÁöÑÁÅµÈ≠ÇÊâÄÂú®ÔºåÊòØÂèëÊå•Á®ãÂ∫èËÆæËÆ°ËÄÖ‰∏•Ë∞®ÔºåÊïèÈîêÊÄùÁª¥ÁöÑÊúâÊïàÂ∑•ÂÖ∑Ôºå‰ªª‰ΩïÁöÑÁ®ãÂ∫èËÆæËÆ°ËØ≠Ë®ÄÈÉΩËØïÂõæÂ∞Ü‰πãÂèëÊå•ÂæóÊ∑ãÊºìÂ∞ΩËá¥„ÄÇÁ®ãÂ∫èÂëòÈúÄË¶Å‰∏ÄÂÆöÁöÑÊï∞Â≠¶‰øÆÂÖªÔºå‰∏ç‰ΩÜÊòØÁºñÁ®ãÊú¨Ë∫´ÁöÑÈúÄË¶ÅÔºåÂêåÊó∂‰πüÊòØÂüπÂÖªÈÄªËæëÊÄùÁª¥‰ª•Âèä‰∏•Ë∞®ÁöÑÁºñÁ®ã‰ΩúÈ£éÁöÑÈúÄË¶Å„ÄÇÊï∞Â≠¶ÂèØ‰ª•ÈîªÁÇºÊàë‰ª¨ÁöÑÊÄùÁª¥ËÉΩÂäõÔºåÂèØ‰ª•Â∏ÆÂä©Êàë‰ª¨Ëß£ÂÜ≥Áé∞ÂÆû‰∏≠ÁöÑÈóÆÈ¢ò„ÄÇÂèØ‰ª•Â∏ÆÂä©Êàë‰ª¨Êõ¥È´òÁöÑÂ≠¶‰π†Âì≤Â≠¶„ÄÇ‰∏∫‰ªÄ‰πàÁªèÂ∏∏Êúâ‰∫∫ÂØπ‰∏Ä‰∫õÁßëÂ≠¶ËÆ°ÁÆóÁ®ãÂ∫è‰∏ÄÁ≠πËé´Â±ïÔºå‰ªñÂèØ‰ª•ËØªÊáÇÊØè‰∏ÄË°å‰ª£Á†ÅÔºå‰ΩÜÊòØÂç¥Êó†Ê≥ïÈ¢ÑÊµãÁ®ãÂ∫èÁöÑÈ¢ÑÊµãÁªìÊûúÔºåÁîöËá≥ÂØπÁ®ãÂ∫èÁöÑÁªìÊûÑ‰∏éÂäüËÉΩ‰πü‰∏ÄÁü•ÂçäËß£ÔºåÁªô‰ªñ‰∏Ä‰∏™Á®çÂæÆÂ§çÊùÇÁÇπÁöÑÊï∞Â≠¶ÂÖ¨ÂºèÔºå‰ªñÂèØËÉΩÂ∞±‰∏çÁü•ÈÅìÊÄé‰πàÊääÂÆÉÂèòÊàêËÆ°ÁÆóÊú∫Á®ãÂ∫è„ÄÇÂæàÂ§öÁ®ãÂ∫èÂëòËøòÂÅúÁïôÂú®ÂÅöÂÅöÁÆÄÂçïÁöÑ MISÔºåËÆæËÆ°‰∏Ä‰∏ã MDIÔºåÂÜôÂÜôÁÆÄÂçïÁöÑ Class ÊàñÁî® SQL ËØ≠Âè•ÂÆûÁé∞Êü•ËØ¢Á≠âÂü∫Á°ÄÁöÑÁºñÁ®ãÂ∑•‰Ωú‰∏äÔºåÂØπ‰∫é‰∏Ä‰∫õÈúÄË¶ÅÁî®Âà∞Êï∞Â≠¶Áü•ËØÜÁöÑÁºñÁ®ãÂ∑•‰ΩúÂ∞±ÈÅøËÄåËøú‰πãÔºåÂΩìÁÑ∂ÂÆûÁé∞‰∏Ä‰∏™Á¥ØÂä†Á®ãÂ∫èÊàñËÄÖ‰∏Ä‰∏™Á®éÁéáÁöÑÊç¢ÁÆóÁ®ãÂ∫èËøòÊòØÂæàÂÆπÊòìÁöÑÔºåÂõ†‰∏∫ÂÆÉ‰ª¨Âπ∂‰∏çÈúÄË¶Å‰ªÄ‰πàÈ´òÊ∑±ÁöÑÊï∞Â≠¶Áü•ËØÜ„ÄÇ ‰∏ÄÂêçÊúâËøá 10 Â§öÂπ¥ÂºÄÂèëÁªèÈ™åÁöÑËÄÅÁ®ãÂ∫èÂëòÊõæËØ¥Ëøá: ‚ÄúÊâÄÊúâÁ®ãÂ∫èÁöÑÊú¨Ë¥®Â∞±ÊòØÈÄªËæë„ÄÇÊäÄÊúØ‰Ω†Â∑≤ÁªèËæÉÂ•ΩÂú∞ÊéåÊè°‰∫ÜÔºå‰ΩÜÂè™ÊúâÂÆåÊàêÈÄªËæëËÉΩÂäõÁöÑÊèêÈ´òÔºå‰Ω†ÊâçËÉΩÊàê‰∏∫‰∏ÄÂêçËÅå‰∏öÁ®ãÂ∫èÂëò„ÄÇÊâì‰∏Ä‰∏™ÊØîÊñπÂêßÔºå‰Ω†‰ºöÂçÅÂÖ´Ëà¨Ê≠¶Ëâ∫ÔºåÂàÄÊû™Ê£çÊ£íÈÉΩÂæàÁ≤æÈÄöÔºå‰ΩÜÂ∞±ÊòØÂäõÊ∞î‰∏çÂ§üÔºåÊâÄ‰ª•Ê∞∏ËøúÈÉΩ‰∏ä‰∏ç‰∫ÜÊàòÂú∫ÔºåËøô‰∏™ÂäõÊ∞îÂØπÁ®ãÂ∫èÂëòËÄåË®ÄÂ∞±ÊòØÈÄªËæëËÉΩÂäõ (ÂÖ∂Êú¨Ë¥®ÊòØ‰∏Ä‰∏™‰∫∫ÁöÑÊï∞Â≠¶‰øÆÂÖªÔºåÊ≥®ÊÑèÔºå‰∏çÊòØÊï∞Â≠¶Áü•ËØÜ)„ÄÇ‚Äù Á®ãÂ∫èÂëòÁöÑÊï∞Â≠¶‰øÆÂÖª‰∏çÊòØ‰∏ÄÊúù‰∏ÄÂ§ïÂ∞±ÂèØ‰ª•ÂüπÂÖªÁöÑ„ÄÇÊï∞Â≠¶‰øÆÂÖª‰∏éÊï∞Â≠¶Áü•ËØÜ‰∏ç‰∏ÄÊ†∑Ôºå‰øÆÂÖªÈúÄË¶Å‰∏Ä‰∏™ÈïøÊúüÁöÑËøáÁ®ãÔºåËÄåÁü•ËØÜÁöÑÂ≠¶‰π†ÂèØËÉΩÂè™ÊòØ‰∏ÄÊÆµÁü≠ÊöÇÁöÑÊó∂Èó¥„ÄÇ‰∏ãÈù¢ÊòØ‰∏Ä‰∫õÊàë‰∏™‰∫∫ÂØπ‰∫éÁ®ãÂ∫èÂëòÂ¶Ç‰ΩïÊèêÈ´ò‰∏éÂüπÂÖªËá™Â∑±ÁöÑÊï∞Â≠¶‰øÆÂÖªÁöÑÂü∫Êú¨ÁúãÊ≥ï„ÄÇ È¶ñÂÖàÔºåÂ∫îËØ•ÊÑèËØÜÂà∞Êï∞Â≠¶‰øÆÂÖªÁöÑÈáçË¶ÅÊÄß„ÄÇ‰Ωú‰∏∫‰∏Ä‰∏™‰ºòÁßÄÁöÑÁ®ãÂ∫èÂëòÔºå‰∏ÄÂÆöÁöÑÊï∞Â≠¶‰øÆÂÖªÊòØÂçÅÂàÜÈáçË¶Å‰πüÊòØÂøÖË¶ÅÁöÑ„ÄÇÊï∞Â≠¶ÊòØËá™ÁÑ∂ÁßëÂ≠¶ÁöÑÂü∫Á°ÄÔºåËÆ°ÁÆóÊú∫ÁßëÂ≠¶ÂÆûÈôÖ‰∏äÊòØÊï∞Â≠¶ÁöÑ‰∏Ä‰∏™ÂàÜÊîØ„ÄÇËÆ°ÁÆóÊú∫ÁêÜËÆ∫ÂÖ∂ÂÆûÊòØÂæàÂ§öÊï∞Â≠¶Áü•ËØÜÁöÑËûçÂêàÔºåËΩØ‰ª∂Â∑•Á®ãÈúÄË¶ÅÂõæËÆ∫ÔºåÂØÜÁ†ÅÂ≠¶ÈúÄË¶ÅÊï∞ËÆ∫ÔºåËΩØ‰ª∂ÊµãËØïÈúÄË¶ÅÁªÑÂêàÊï∞Â≠¶ÔºåËÆ°ÁÆóÊú∫Á®ãÂ∫èÁöÑÁºñÂà∂Êõ¥ÈúÄË¶ÅÂæàÂ§öÁöÑÊï∞Â≠¶Áü•ËØÜÔºåÂ¶ÇÈõÜÂêàËÆ∫„ÄÅÊéíÈòüËÆ∫„ÄÅÁ¶ªÊï£Êï∞Â≠¶„ÄÅÁªüËÆ°Â≠¶ÔºåÂΩìÁÑ∂ËøòÊúâÂæÆÁßØÂàÜ„ÄÇËÆ°ÁÆóÊú∫ÁßëÂ≠¶‰∏Ä‰∏™ÊúÄÂ§ßÁöÑÁâπÂæÅÊòØ‰ø°ÊÅØ‰∏éÁü•ËØÜÊõ¥Êñ∞ÈÄüÂ∫¶ÂæàÂø´ÔºåÈöèÁùÄÊï∞Â≠¶Áü•ËØÜ‰∏éËÆ°ÁÆóÊú∫ÁêÜËÆ∫ÁöÑËøõ‰∏ÄÊ≠•ÁªìÂêàÔºåÊï∞ÊçÆÊåñÊéò„ÄÅÊ®°ÂºèËØÜÂà´„ÄÅÁ•ûÁªèÁΩëÁªúÁ≠âÂàÜÊîØÁßëÂ≠¶ÂæóÂà∞‰∫ÜËøÖÈÄüÂèëÂ±ïÔºåÊéßÂà∂ËÆ∫„ÄÅÊ®°Á≥äÊï∞Â≠¶„ÄÅËÄóÊï£ÁêÜËÆ∫„ÄÅÂàÜÂΩ¢ÁßëÂ≠¶ÈÉΩ‰øÉËøõ‰∫ÜËÆ°ÁÆóÊú∫ËΩØ‰ª∂ÁêÜËÆ∫„ÄÅ‰ø°ÊÅØÁÆ°ÁêÜÊäÄÊúØÁöÑÂèëÂ±ï„ÄÇ‰∏•Ê†ºÁöÑËØ¥Ôºå‰∏Ä‰∏™Êï∞Â≠¶Âü∫Á°Ä‰∏çÊâéÂÆûÁöÑÁ®ãÂ∫è‰∏çËÉΩÁÆó‰∏Ä‰∏™ÂêàÊ†ºÁöÑÁ®ãÂ∫èÂëòÔºåÂæàÂ§ö‰ªãÁªçËÆ°ÁÆóÊú∫ÁÆóÊ≥ïÁöÑ‰π¶Á±çÊú¨Ë∫´‰πüÂ∞±ÊòØÊï∞Â≠¶Áü•ËØÜÁöÑÂ∫îÁî®‰∏éËÆ°ÁÆóÊú∫ÂÆûÁé∞ÊâãÂÜå„ÄÇ ÂÖ∂Ê¨°ÔºåËá™Ë∫´Êï∞Â≠¶Áü•ËØÜÁöÑÁßØÁ¥ØÔºåÂüπÂÖªËá™Â∑±ÁöÑÁ©∫Èó¥ÊÄùÁª¥ËÉΩÂäõÂíåÈÄªËæëÂà§Êñ≠ËÉΩÂäõ„ÄÇÊï∞Â≠¶ÊòØ‰∏ÄÈó®ÂàÜÊîØ‰ºóÂ§öÁöÑÂ≠¶ÁßëÔºåÊàë‰ª¨Êó†Ê≥ïÂú®Áü≠ÊöÇÁöÑ‰∏ÄÁîü‰∏≠Â≠¶‰ºöÊâÄÊúâÁöÑÊï∞Â≠¶Áü•ËØÜÔºåÂÉèÊ≥õÂáΩÁêÜËÆ∫„ÄÅÊ∑∑Ê≤åÁêÜËÆ∫‰ª•Âèä‰∏Ä‰∫õÈùûÁ∫øÊÄßÊï∞Â≠¶ÈóÆÈ¢ò‰∏çÊòØ‰∏â‰∫îÂá†Â§©Â∞±ÂèØ‰ª•ÊéåÊè°ÁöÑ„ÄÇÊï∞Â≠¶‰øÆÂÖªÁöÑÂüπÂÖªÂπ∂‰∏çÂú®‰∏éÊï∞Â≠¶Áü•ËØÜÁöÑÂ§öÂ∞ëÔºå‰ΩÜË¶ÅÊ±ÇÁ®ãÂ∫èÂëòÊúâËâØÂ•ΩÁöÑÊï∞Â≠¶Â≠¶‰π†ËÉΩÂäõÔºåËÉΩÂ§üÂæàÂø´Âú∞Êää‰∏Ä‰∫õÊï∞Â≠¶Áü•ËØÜÂíåËá™Â∑±Ê≠£Âú®Ëß£ÂÜ≥ÁöÑÈóÆÈ¢òËÅîÁ≥ªËµ∑Êù•ÔºåÂæàÂ§öÁêÜÂ≠¶Â§ßÂ∏àËôΩÁÑ∂‰∏çÊòØÊï∞Â≠¶Âá∫Ë∫´Ôºå‰ΩÜÊòØ‰ªñ‰ª¨ÂØπÊï∞Â≠¶ÊúâÂæàÂº∫ÁöÑÁêÜËß£ËÉΩÂäõÂíåÊïèÈîêÁöÑËßÇÂØüÂäõÔºå‰∫éÊòØ‰∏ÄÁ≥ªÂàóÊñ∞ÁöÑÂ≠¶ÁßëËØûÁîü‰∫ÜÔºåÂ¶ÇËÆ°ÁÆóÂåñÂ≠¶„ÄÅËÆ°ÁÆóÁîüÁâ©Â≠¶„ÄÅÁîüÁâ©‰ø°ÊÅØÂ≠¶„ÄÅÂåñÂ≠¶‰ø°ÊÅØÂ≠¶„ÄÅËÆ°ÁÆóÁâ©ÁêÜÂ≠¶ÔºåËÆ°ÁÆóÊùêÊñôÂ≠¶Á≠âÁ≠â„ÄÇÊï∞Â≠¶ÊòØËá™ÁÑ∂Â≠¶ÁßëÁöÑÂü∫Á°ÄÔºåËÆ°ÁÆóÊú∫ÊäÄÊúØ‰Ωú‰∏∫ÁêÜËÆ∫‰∏éÂÆûË∑µÁöÑÁªìÂêàÔºåÊõ¥ÈúÄË¶ÅÊääÊï∞Â≠¶ÁöÑ‰∏Ä‰∫õÁ≤æÈ´ìËûçÂÖ•ÂÖ∂‰∏≠„ÄÇ‰ªéËÆ°ÁÆóÊú∫ÁöÑËØûÁîüÊù•ÁúãÂÆÉÂ∞±ÊòØÂú®Êï∞Â≠¶ÁöÑÂü∫Á°Ä‰∏ä‰∫ßÁîüÁöÑÔºåÊúÄÁÆÄÂçïÁöÑ 0„ÄÅ1 ËøõÂà∂Â∞±ÊòØ‰∏Ä‰∏™Âè§ËÄÅÁöÑÊï∞Â≠¶ÈóÆÈ¢ò„ÄÇÁ®ãÂ∫èËÆæËÆ°‰Ωú‰∏∫‰∏ÄÈ°πÂàõÈÄ†ÊÄßÂæàÂº∫ÁöÑËÅå‰∏öÔºåÂÆÉÈúÄË¶ÅÁ®ãÂ∫èÂëòÊúâ‰∏ÄÂÆöÁöÑÊï∞Â≠¶‰øÆÂÖªÔºå‰πüÂÖ∑Êúâ‰∏ÄÂÆöÁöÑÊï∞Â≠¶Áü•ËØÜÁöÑÁßØÁ¥ØÔºåÂèØ‰ª•Êõ¥Â•ΩÂú∞Êää‰∏Ä‰∫õÊï∞Â≠¶ÂéüÁêÜ‰∏éÊÄùÊÉ≥Â∫îÁî®‰∫éÂÆûÈôÖÁöÑÁºñÁ®ãÂ∑•‰Ωú‰∏≠Âéª„ÄÇÂ≠¶Êó†Ê≠¢Â¢ÉÔºå‰∏çÊñ≠ÁöÑÂ≠¶‰π†ÊòØÊèêÈ´ò‰øÆÂÖªÁöÑÂøÖÁªè‰πãË∑Ø„ÄÇ Á¨¨‰∏âÔºåÂ§öÂú®ÂÆûË∑µ‰∏≠ËøêÁî®Êï∞Â≠¶„ÄÇÊúâ‰∫õÈ´òÁ≠âÂ≠¶Ê†°ÂºÄËÆæ‰∫Ü‰∏ÄÈó®ËøôÊ†∑ÁöÑËØæÁ®ã ‚Äî„ÄäÊï∞Â≠¶Âª∫Ê®°„Äã„ÄÇÊàëÂú®Â§ßÂ≠¶Êó∂Êúü‰πüÊõæÂ≠¶ËøáÔºåËøôÊòØ‰∏ÄÈó®ÂÜÖÂÆπÂæà‰∏∞ÂØåÁöÑËØæÁ®ã„ÄÇÂÆÉÊääÂæàÂ§öÁõ∏ÂÖ≥ÁöÑÂ≠¶Áßë‰∏éÊï∞Â≠¶ÈÉΩËÅîÁ≥ªÂú®‰∏ÄËµ∑ÔºåÈÄöËøáÂæàÂ§öÊï∞Â≠¶Ê®°ÂûãÊù•Ëß£ÂÜ≥ÂÆûÈôÖÁöÑÁîü‰∫ßÁîüÊ¥ªÈóÆÈ¢òÔºåÂæàÂ§öÈóÆÈ¢òÁöÑËß£ÂÜ≥ÈúÄË¶ÅËÆ°ÁÆóÊú∫Á®ãÂ∫èÊù•ÂÆûÁé∞„ÄÇÊàëÂú®Â§ßÂ≠¶ÂíåÁ†îÁ©∂ÁîüÈò∂ÊÆµÈÉΩÂèÇÂä†ËøáÊï∞Â≠¶Âª∫Ê®°Á´ûËµõÔºåËé∑Âæó‰∫Ü‰∏çÂ∞ëÁöÑÁªèÈ™åÔºåÂêåÊó∂‰πüËøõ‰∏ÄÊ≠•ÊèêÈ´ò‰∫ÜËá™Â∑±ÁöÑÊï∞Â≠¶‰øÆÂÖª„ÄÇÂÆûÈôÖ‰∏äÔºåÁé∞Âú®ÁöÑÁ®ãÂ∫èËÆæËÆ°‰ªéÊüê‰∫õËßíÂ∫¶Êù•ÁúãÂ∞±ÊòØ‰∏Ä‰∏™Êï∞Â≠¶Âª∫Ê®°ÁöÑËøáÁ®ãÔºåÊ®°ÂûãÁöÑÂ•ΩÂùèÂÖ≥Á≥ªÂà∞Á≥ªÁªüÁöÑÊàêË¥•ÔºåÁé∞Âú®Êï∞Â≠¶Âª∫Ê®°ÁöÑÊÄùÊÉ≥Â∑≤ÁªèÁî®‰∫éËÆ°ÁÆóÊú∫ÁöÑËÆ∏Â§öÁõ∏ÂÖ≥Â≠¶Áßë‰∏≠Ôºå‰∏çÂçïÂè™ÊòØËÆ°ÁÆóÊú∫Á®ãÂ∫èËÆæËÆ°‰∏éÁÆóÊ≥ïÂàÜÊûê„ÄÇÂ∫îËØ•Áü•ÈÅìÔºåÊï∞Â≠¶ÊòØ‰∏ÄÈó®ÈúÄË¶ÅÂú®ÂÆûË∑µ‰∏≠Â±ïÁ§∫ÂÖ∂È≠ÖÂäõÁöÑÁßëÂ≠¶ÔºåËÄåËÆ°ÁÆóÊú∫Á®ãÂ∫è‰πüÊòØ‰∏∫Â∏ÆÂä©Ëß£ÂÜ≥ÂÆûÈôÖÈóÆÈ¢òËÄåÁºñÂà∂ÁöÑÔºåÂõ†Ê≠§ÔºåÂ∫îËØ•Â∞ΩÈáè‰ΩøÂÆÉ‰ª¨ÁªìÂêàËµ∑Êù•ÔºåÂú®Ëøô‰∏™ÊñπÈù¢ÔºåËÆ°ÁÆóÊú∫ÂØÜÁ†ÅÂ≠¶ÊòØÊàëËÆ§‰∏∫ËøêÁî®Êï∞Â≠¶Áü•ËØÜÊúÄÊ∑±ÊúÄÂπøÊ≥õÁöÑÔºåÊØè‰∏Ä‰∏™Â•ΩÁöÑÂä†ÂØÜÁÆóÊ≥ïÂêéÈù¢ÈÉΩÊúâ‰∏Ä‰∏™Êï∞Â≠¶ÁêÜËÆ∫ÁöÑÊîØÊåÅÔºåÂ¶ÇÊ§≠ÂúÜÊõ≤Á∫ø„ÄÅËÉåÂåÖÈóÆÈ¢ò„ÄÅÁ¥†Êï∞ÁêÜËÆ∫Á≠â„ÄÇ‰Ωú‰∏∫‰∏ÄÂêç‰ºòÁßÄÁöÑÁ®ãÂ∫èÂëòÔºåÂ∫îËØ•Âú®ÂÆûÈôÖÂ∑•‰Ωú‰∏≠Ê†πÊçÆÈúÄË¶ÅÁÅµÊ¥ªËøêÁî®Êï∞Â≠¶Áü•ËØÜÔºåÂüπÂÖª‰∏ÄÂÆöÁöÑÊï∞Â≠¶Âª∫Ê®°ËÉΩÂäõÔºåÂñÑ‰∫éÂΩíÁ∫≥ÊÄªÁªìÔºåÊÖ¢ÊÖ¢‰ΩøËá™Â∑±ÁöÑÊï∞Â≠¶Áü•ËØÜÊõ¥Âä†ÂÖ®Èù¢ÔºåÊï∞Â≠¶‰øÆÂÖªÂæóÂà∞Ëøõ‰∏ÄÊ≠•ÊèêÈ´ò„ÄÇ Á¨¨ÂõõÔºåÁ®ãÂ∫èÂëòÂüπÂÖªÂà∂Â∫¶‰∏éÊïôÂ≠¶ÁöÑÊîπÈù©„ÄÇËÆ∏Â§öÁ®ãÂ∫èÂëòÂüπÂÖª‰ΩìÂà∂Â≠òÂú®ÂæàÂ§öÁº∫Èô∑Ôºå‰∏ÄÂºÄÂßãÂ∞±Ë¶ÅÊ±ÇÂ≠¶ÂëòËÉΩÂ§üÂø´ÈÄüÁ≤æÈÄöÊüêÁßçËØ≠Ë®ÄÔºå‰ª•ËØ≠Ë®Ä‰∏∫‰∏≠ÂøÉÔºåÂØπÁÆóÊ≥ïÁöÑÊ†∏ÂøÉÊÄùÊÉ≥‰∏éÁõ∏ÂÖ≥ÁöÑÊï∞Â≠¶Áü•ËØÜÈÉΩ‰∏ÄÁ¨îÂ∏¶ËøáÔºåËÆ≤ÂæóÂæàÂ∞ëÔºåËøôÈÄ†ÊàêÂæàÂ§öÁ®ãÂ∫èÂëòÊàê‰∏∫ËÉåÁ®ãÂ∫èÁöÑÊú∫Âô®ÔºåËøôÊ†∑‰∏çÂà©‰∫éÁ®ãÂ∫èÂëòËá™Ë∫´ÁöÑÂø´ÈÄüÊàêÈïøÔºå‰πü‰∏çÂà©‰∫éÁ®ãÂ∫èÂëòËß£ÂÜ≥Êñ∞ÈóÆÈ¢ò„ÄÇÊàëÂú®ÈïøÊúüÁöÑÁ®ãÂ∫èÂëòÂüπËÆ≠‰∏éËÆ°ÁÆóÊú∫ÊïôÂ≠¶Â∑•‰ΩúÈááÁî®‰∫Ü‰∏Ä‰∫õ‰∏é‰º†ÁªüÊñπÂºè‰∏ç‰∏ÄËá¥ÁöÑÊñπÊ≥ïÔºåÊî∂Âà∞‰∫Ü‰∏ÄÂÆöÁöÑÊïàÊûú„ÄÇÂæàÂ§öÂàùÂ≠¶Á®ãÂ∫èÁöÑ‰∫∫ÂæÄÂæÄÂÜôÁ®ãÂ∫èÊó∂ÊúâÊó∂ÂÄô‰ºöÊúâÊÄùÁª¥‰∏≠Êñ≠ÔºåÊàñËÄÖÂØπ‰∏Ä‰∫õÁ®çÈöæÁöÑÁ®ãÂ∫èËßâÂæóÊó†Ê≥ï‰∏ãÊâãÔºåÊàëÈááÁî®‰∫Ü‰∏Ä‰∫õËØæÂâçËß£ÂÜ≥Êï∞Â≠¶Â∞èÈóÆÈ¢òÁöÑÊñπÊ≥ïÊù•ÊøÄÂä±Â§ßÂÆ∂ÁöÑÂ≠¶‰π†ÂÖ¥Ë∂£ÔºåËøô‰∫õÂ∞èÈóÆÈ¢ò‰∏çÂçïÂçïÊòØËÑëÁ≠ãÊÄ•ËΩ¨ÂºØÔºåÂÖ∂‰∏≠‰∏çÂ∞ëÊòØÂæàÊúâ‰ª£Ë°®ÊÑè‰πâÁöÑÊï∞Â≠¶ÊÄùËÄÉÈ¢ò„ÄÇÈÄöËøáÊï∞Â≠¶ÈóÆÈ¢òÊù•ÂÅöÁºñÁ®ãÁöÑÁÉ≠Ë∫´ËøêÂä®ÔºåËÆ©Â≠¶ÂëòÂú®Êï∞Â≠¶ËØïÈ¢ò‰∏≠ÊøÄÂèëËá™Â∑±ÁöÑÊÄùÁª¥ËÉΩÂäõÔºåËÆ∞ÂæóÊúâ‰Ωç‰∏ìÂÆ∂ÊõæÁªèËØ¥ËøáÔºåÁªèÂ∏∏ÂÅöÂÅöÊï∞Â≠¶È¢òÁõÆ‰ºö‰ΩøËá™Â∑±ÂèòËÅ™ÊòéÔºåÂæàÈïøÊó∂Èó¥‰∏çÂéªÊé•Ëß¶Êï∞Â≠¶ÈóÆÈ¢ò‰ºö‰ΩøËá™Â∑±ÊÄùÁª¥ËøüÈíù„ÄÇÈÄöËøá‰∏Ä‰∫õÁªèÂÖ∏ÁöÑÊï∞Â≠¶ÈóÆÈ¢òÊù•ÂüπÂÖªÂ≠¶ÂëòÁöÑÊÄùÁª¥ÁöÑ‰∏•Ë∞®ÊÄßÂíåË∑≥Ë∑ÉÊÄß„ÄÇÂæàÂ§ö‰∫∫ÂèØËÉΩ‰∏ç‰ª•‰∏∫ÁÑ∂ÔºåÂÖ∂ÂÆûÊúâ‰∫õÁúã‰ººÁÆÄÂçïÁöÑÈóÆÈ¢òÂπ∂‰∏ç‰∏ÄÂÆöËÉΩÂ§üÂø´ÈÄüÁªôÂá∫Á≠îÊ°àÔºåÂ§ßËÑë‰πüÊòØÂú®‰∏çÊñ≠ÁöÑËøêÁî®‰∏≠ÂèòÊõ¥Âä†ÁÅµÊ¥ªÁöÑ„ÄÇ‰∏ç‰ø°Âêó? Â§ßÂÆ∂ÊúâÂÖ¥Ë∂£ÂèØ‰ª•ÂÅöÂÅö‰∏ãÈù¢ËøôÈÅìÈ¢òÁõÆÔºåÁúãÁúãËÉΩ‰∏çËÉΩÂú®1ÂàÜÈíü‰πãÂÜÖÊÉ≥Âà∞Á≠îÊ°àÔºåËøôÂè™ÊòØ‰∏ÄÈÅìÂ∞èÂ≠¶Êï∞Â≠¶ËØæÂêé‰π†È¢ò„ÄÇÂæàÂ§ö‰∫∫ËÆ§‰∏∫Ëá™Â∑±ÁöÑÊï∞Â≠¶Âü∫Á°ÄÂæàÂ•ΩÔºå‰ΩÜÊòØÊçÆËØ¥ËøôÈÅìÈ¢òÁõÆ 90% ‰ª•‰∏äÁöÑ‰∫∫‰∏çËÉΩÂú®‰∏Ä‰∏™Â∞èÊó∂ÂÜÖÁªôÂá∫Ê≠£Á°ÆÁ≠îÊ°à„ÄÇËØïËØïÔºåÂ¶ÇÊûú‰Ω†ËßâÂæóÊàëËØ¥ÁöÑÊòØÈîôÁöÑ„ÄÇ ËØÅÊòé: AB + AC &gt; DB + DC (D ‰∏∫‰∏âËßíÂΩ¢ ABC ÁöÑ‰∏Ä‰∏™ÂÜÖÁÇπ) ÊúÄÂêéÔºåÂ§öÂ≠¶Â§öÈóÆÔºåÂ§öÁúãÂ•Ω‰π¶ÔºåÁúãÁªèÂÖ∏„ÄÇÊàëÂú®ËøôÈáåÂêëÂ§ßÂÆ∂Êé®Ëçê‰∏§ÈÉ®ÂèØËÉΩÂ§ßÂÆ∂Â∑≤ÁªèÂæàÁÜüÊÇâÁöÑÁªèÂÖ∏ÁöÑËÆ°ÁÆóÊú∫ÁÆóÊ≥ïÊïôÊùêÔºåÂÆÉ‰ª¨‰∏≠Èó¥ÂæàÂ§öÂÜÖÂÆπÂÖ∂ÂÆûÂ∞±ÊòØÊï∞Â≠¶Áü•ËØÜÁöÑ‰ªãÁªç„ÄÇ Á¨¨‰∏ÄÈÉ®ÊòØ„ÄäÁÆóÊ≥ïÂØºËÆ∫„ÄãÔºåËã±ÊñáÂêçÁß∞: Introduction to AlgorithmsÔºå‰ΩúËÄÖ: Thomas H. Cormen ÔºåCharles E. Leiserson ÔºåRonald L. Rivest ÔºåClifford Stein„ÄÇÊú¨‰π¶ÁöÑ‰∏ªË¶Å‰ΩúËÄÖÊù•Ëá™È∫ªÁúÅÁêÜÂ∑•Â§ßÂ≠¶ËÆ°ÁÆóÊú∫Ôºå‰ΩúËÄÖ‰πã‰∏Ä Ronald L. Rivest Áî±‰∫éÂÖ∂Âú®ÂÖ¨ÂºÄÁßòÈí•ÂØÜÁ†ÅÁÆóÊ≥ï RSA ‰∏äÁöÑË¥°ÁåÆËé∑Âæó‰∫ÜÂõæÁÅµÂ•ñ„ÄÇËøôÊú¨‰π¶ÁõÆÂâçÊòØÁÆóÊ≥ïÁöÑÊ†áÂáÜÊïôÊùêÔºåÁæéÂõΩËÆ∏Â§öÂêçÊ†°ÁöÑËÆ°ÁÆóÊú∫Á≥ªÈÉΩ‰ΩøÁî®ÂÆÉÔºåÂõΩÂÜÖÊúâ‰∫õÈô¢Ê†°‰πüÂ∞ÜÊú¨‰π¶‰Ωú‰∏∫ÁÆóÊ≥ïËØæÁ®ãÁöÑÊïôÊùê„ÄÇÂè¶Â§ñËÆ∏Â§ö‰∏ì‰∏ö‰∫∫Âëò‰πüÁªèÂ∏∏ÂºïÁî®ÂÆÉ„ÄÇÊú¨‰π¶Âü∫Êú¨ÂåÖÂê´‰∫ÜÊâÄÊúâÁöÑÁªèÂÖ∏ÁÆóÊ≥ïÔºåÁ®ãÂ∫èÂÖ®ÈÉ®Áî±‰º™‰ª£Á†ÅÂÆûÁé∞ÔºåËøôÊõ¥Â¢ûÊ∑ª‰∫ÜÊú¨‰π¶ÁöÑÈÄöÁî®ÊÄßÔºå‰ΩøÂæóÂà©Áî®ÂêÑÁßçÁ®ãÂ∫èËÆæËÆ°ËØ≠Ë®ÄËøõË°åÁ®ãÂ∫èÂºÄÂèëÁöÑÁ®ãÂ∫èÂëòÈÉΩÂèØ‰ª•‰Ωú‰∏∫ÂèÇËÄÉ„ÄÇËØ≠Ë®ÄÊñπÈù¢ÈÄö‰øóÔºåÂæàÈÄÇÂêà‰Ωú‰∏∫ÁÆóÊ≥ïÊïôÊùêÂíåËá™Â≠¶ÁÆóÊ≥ï‰πãÁî®„ÄÇ Âè¶‰∏ÄÈÉ®ÊòØÂæàÂ§ö‰∫∫ÈÉΩÂ∫îËØ•Áü•ÈÅìÁöÑ Donald E. Knuth ÊâÄËëó„ÄäËÆ°ÁÆóÊú∫Á®ãÂ∫èËÆæËÆ°Ëâ∫ÊúØ„ÄãÔºåËã±ÊñáÂêçÁß∞: The Art of Computer Programming„ÄÇ Donald E. Knuth ‰∫∫ÁîüÊúÄËæâÁÖåÁöÑÊó∂ÂàªÂú®ÊñØÂù¶Á¶èÂ§ßÂ≠¶ËÆ°ÁÆóÊú∫Á≥ªÊ∏°ËøáÔºåÁæéÂõΩËÆ°ÁÆóÊú∫Âçè‰ºöÂõæÁÅµÂ•ñÁöÑËé∑ÂæóËÄÖÔºåÊòØÊú¨È¢ÜÂüüÂÜÖÂΩì‰πãÊó†ÊÑßÁöÑÊ≥∞Êñó„ÄÇÊúâÊàèË®ÄÁß∞ÊêûËÆ°ÁÆóÊú∫Á®ãÂ∫èËÆæËÆ°ÁöÑ‰∏çËÆ§ËØÜ Knuth Â∞±Á≠â‰∫éÊêûÁâ©ÁêÜÁöÑ‰∏çÁü•ÈÅìÁà±Âõ†ÊñØÂù¶ÔºåÊêûÊï∞Â≠¶ÁöÑ‰∏çÁü•ÈÅìÊ¨ßÊãâÔºåÊêûÂåñÂ≠¶ÁöÑ‰∏çÁü•ÈÅìÈÅìÂ∞îÈ°ø„ÄÇË¢´ÁÆÄÁß∞‰∏∫ TAOCP ÁöÑËøôÊú¨Â∑®ËëóÂÜÖÂÆπÂçöÂ§ßÁ≤æÊ∑±ÔºåÂá†‰πéÊ∂µÁõñ‰∫ÜËÆ°ÁÆóÊú∫Á®ãÂ∫èËÆæËÆ°ÁÆóÊ≥ï‰∏éÁêÜËÆ∫ÊúÄÈáçË¶ÅÁöÑÂÜÖÂÆπ„ÄÇÁé∞Âú®ÂèëË°åÁöÑÂè™Êúâ‰∏âÂç∑ÔºåÂàÜÂà´‰∏∫Âü∫Á°ÄËøêÁÆóÊ≥ïÂàôÔºåÂçäÊï∞ÂÄºÁÆóÊ≥ïÔºå‰ª•ÂèäÊéíÂ∫èÂíåÊêúÁ¥¢ (Âú®ÂÜôÊú¨Êñá‰πãÈôÖÔºåÁ¨¨ÂõõÂç∑Â∑≤ÁªèÂá∫Êù•‰∫ÜÔºåÊàë‰πüÂú®Á¨¨‰∏ÄÊó∂Èó¥Êä¢Ë¥≠‰∫Ü‰∏ÄÊú¨)„ÄÇÊú¨‰π¶ÁªìÂêàÂ§ßÈáèÊï∞Â≠¶Áü•ËØÜÔºåÂàÜÊûê‰∏çÂêåÂ∫îÁî®È¢ÜÂüü‰∏≠ÁöÑÂêÑÁßçÁÆóÊ≥ïÔºåÁ†îÁ©∂ÁÆóÊ≥ïÁöÑÂ§çÊùÇÊÄßÔºåÂç≥ÁÆóÊ≥ïÁöÑÊó∂Èó¥„ÄÅÁ©∫Èó¥ÊïàÁéáÔºåÊé¢ËÆ®ÂêÑÁßçÈÄÇÁî®ÁÆóÊ≥ïÁ≠âÔºåÂÖ∂ÁêÜËÆ∫ÂíåÂÆûË∑µ‰ª∑ÂÄºÂæóÂà∞‰∫ÜÂÖ®‰∏ñÁïåËÆ°ÁÆóÊú∫Â∑•‰ΩúËÄÖÁöÑÂÖ¨ËÆ§„ÄÇ‰π¶‰∏≠ÂºïÂÖ•ÁöÑËÆ∏Â§öÊúØËØ≠„ÄÅÂæóÂà∞ÁöÑËÆ∏Â§öÁªìËÆ∫ÈÉΩÂèòÊàê‰∫ÜËÆ°ÁÆóÊú∫È¢ÜÂüüÁöÑÊ†áÂáÜÊúØËØ≠ÂíåË¢´ÂπøÊ≥õÂºïÁî®ÁöÑÁªìÊûú„ÄÇÂè¶Â§ñÔºå‰ΩúËÄÖÂØπÊúâÂÖ≥È¢ÜÂüüÁöÑÁßëÂ≠¶ÂèëÂ±ïÂè≤‰πüÊúâÊ∑±ÂÖ•Á†îÁ©∂ÔºåÂõ†Ê≠§Êú¨‰π¶‰ªãÁªç‰ºóÂ§öÁ†îÁ©∂ÊàêÊûúÁöÑÂêåÊó∂Ôºå‰πüÂØπÂÖ∂ÂéÜÂè≤Ê∏äÊ∫êÂíåÂèëÂ±ïËøáÁ®ãÂÅö‰∫ÜÂæàÂ•ΩÁöÑ‰ªãÁªçÔºåËøôÁßçÁâπËâ≤Âú®ÂÖ®ÁêÉÁßëÂ≠¶Ëëó‰Ωú‰∏≠ÊòØ‰∏çÂ§öËßÅÁöÑ„ÄÇËá≥‰∫éÊú¨‰π¶ÁöÑ‰ª∑ÂÄºÊàëËßâÂæó Bill Gates ÂÖàÁîüÁöÑËØùË∂≥‰ª•ËØ¥ÊòéÈóÆÈ¢ò: ‚ÄúÂ¶ÇÊûú‰Ω†ËÆ§‰∏∫‰Ω†ÊòØ‰∏ÄÂêçÁúüÊ≠£‰ºòÁßÄÁöÑÁ®ãÂ∫èÂëòËØª Knuth ÁöÑ„ÄäËÆ°ÁÆóÊú∫Á®ãÂ∫èËÆæËÆ°Ëâ∫ÊúØ„ÄãÔºåÂ¶ÇÊûú‰Ω†ËÉΩËØªÊáÇÊï¥Â•ó‰π¶ÁöÑËØùÔºåËØ∑ÁªôÊàëÂèë‰∏Ä‰ªΩ‰Ω†ÁöÑÁÆÄÂéÜ‚Äù„ÄÇ‰ΩúËÄÖÊï∞Â≠¶ÊñπÈù¢ÁöÑÂäüÂ∫ïÈÄ†Â∞±‰∫ÜÊú¨‰π¶‰∏•Ë∞®ÁöÑÈ£éÊ†ºÔºåËôΩÁÑ∂Êú¨‰π¶‰∏çÊòØÁî®ÂΩì‰ªäÊµÅË°åÁöÑÁ®ãÂ∫èËÆæËÆ°ËØ≠Ë®ÄÊèèËø∞ÁöÑÔºå‰ΩÜËøô‰∏ùÊØ´‰∏çÊçü‰º§ÂÆÉ ‚ÄúÁ®ãÂ∫èËÆæËÆ°Âè≤ËØó‚Äù ÁöÑÂú∞‰Ωç„ÄÇÈÅìÁêÜÂæàÁÆÄÂçïÔºåÂÆÉÂÜÖÊ∂µÁöÑËÆæËÆ°ÊÄùÊÉ≥ÊòØÊ∞∏Ëøú‰∏ç‰ºöËøáÊó∂ÁöÑ„ÄÇÈô§ÈùûËã±ËØ≠ÂÆûÂú®ÊúâÂõ∞ÈöæÔºåÂê¶ÂàôÂª∫ËÆÆËØªËÄÖÈÄâÁî®Ëã±ÊñáÁâà„ÄÇÊàë‰∏™‰∫∫Â∞±ÊòØÈòÖËØªÁöÑËØ•‰π¶ÁöÑËã±ÊñáÁâàÔºåËôΩÁÑ∂Ëä±‰∫Ü‰∏çÂ∞ë money ÂíåÊó∂Èó¥Ôºå‰ΩÜÊòØÊî∂Ëé∑È¢á‰∏∞ÔºåÂÄºÂæó„ÄÇ ÊÄª‰πãÔºåË¶ÅÊÉ≥Êàê‰∏∫‰∏ÄÂêçÊúâÊΩúÂäõÊúâÂèëÂ±ïÂâçÈÄîÁöÑÁ®ãÂ∫èÂëòÔºåÊàñËÄÖÊÉ≥Êàê‰∏∫Á®ãÂ∫èÂëò‰∏≠ÁöÑ‰Ωº‰ΩºËÄÖÔºå‰Ω†‰∏ÄÂÆöË¶ÅÂüπÂÖªËâØÂ•ΩÁöÑÊï∞Â≠¶‰øÆÂÖª„ÄÇÂàáËÆ∞: ÂØπ‰∫é‰∏ÄÂêçËÉΩÂ§üÁÅµÊ¥ªËá™Â¶ÇÁºñÂÜôÂêÑÁßçÁ®ãÂ∫èÁöÑ‰∫∫Ôºå Êï∞Â≠¶ÊòØÁ®ãÂ∫èÁöÑÁÅµÈ≠Ç„ÄÇ Reference http://www.cs.xmu.edu.cn/cs/node/213","tags":[]},{"title":"Geoffrey Hinton interview","date":"2017-09-20T13:29:03.000Z","path":"2017/09/20/Geoffrey-Hinton-interview/","text":"About this courseIf you want to break into cutting-edge AI, this course will help you do so. Deep learning engineers are highly sought after, and mastering deep learning will give you numerous new career opportunities. Deep learning is also a new ‚Äúsuperpower‚Äù that will let you build AI systems that just were not possible a few years ago. In this course, you will learn the foundations of deep learning. When you finish this class, you will: Understand the major technology trends driving Deep Learning Be able to build, train and apply fully connected deep neural networks Know how to implement efficient (vectorized) neural networks Understand the key parameters in a neural network‚Äôs architecture This course also teaches you how Deep Learning actually works, rather than presenting only a cursory or surface-level description. So after completing it, you will be able to apply deep learning to a your own applications. If you are looking for a job in AI, after this course you will also be able to answer basic interview questions. This is the first course of the Deep Learning Specialization. Lecture transcriptAs part of this course by deeplearning.ai, hope to not just teach you the technical ideas in deep learning, but also introduce you to some of the people, some of the heroes in deep learning. The people that invented so many of these ideas that you learn about in this course or in this specialization. In these videos, I hope to also ask these leaders of deep learning to give you career advice for how you can break into deep learning, for how you can do research or find a job in deep learning. As the first of this interview series, I am delighted to present to you an interview with Geoffrey Hinton. AN: I think that at this point you more than anyone else on this planet has invented so many of the ideas behind deep learning. And a lot of people have been calling you the godfather of deep learning. Although it was not until we were chatting a few minutes ago, until I realized you think I‚Äôm the first one to call you that, which I‚Äôm quite happy to have done. But what I want to ask is, many people know you as a legend, I want to ask about your personal story behind the legend. So how did you get involved in, going way back, how did you get involved in AI and machine learning and neural networks? So when I was at high school, I had a classmate who was always better than me at everything, he was a brilliant mathematician. And he came into school one day and said, did you know the brain uses holograms? And I guess that was about 1966, and I said, sort of what‚Äôs a hologram? And he explained that in a hologram you can chop off half of it, and you still get the whole picture. And that memories in the brain might be distributed over the whole brain. And so I guess he‚Äôd read about Lashley‚Äôs experiments, where you chop off bits of a rat‚Äôs brain and discover that it‚Äôs very hard to find one bit where it stores one particular memory. So that‚Äôs what first got me interested in how does the brain store memories. And then when I went to university, I started off studying physiology and physics. I think when I was at Cambridge, I was the only undergraduate doing physiology and physics. And then I gave up on that and tried to do philosophy, because I thought that might give me more insight. But that seemed to me actually lacking in ways of distinguishing when they said something false. And so then I switched to psychology. And in psychology they had very, very simple theories, and it seemed to me it was sort of hopelessly inadequate to explaining what the brain was doing. So then I took some time off and became a carpenter. And then I decided that I‚Äôd try AI, and went of to Edinburgh, to study AI with Langer Higgins. And he had done very nice work on neural networks, and he‚Äôd just given up on neural networks, and been very impressed by Winograd‚Äôs thesis. So when I arrived he thought I was kind of doing this old fashioned stuff, and I ought to start on symbolic AI. And we had a lot of fights about that, but I just kept on doing what I believed in. AN: And then what? I eventually got a PhD in AI, and then I couldn‚Äôt get a job in Britain. But I saw this very nice advertisement for Sloan Fellowships in California, and I managed to get one of those. And I went to California, and everything was different there. So in Britain, neural nets was regarded as kind of silly, and in California, Don Norman and David Rumelhart were very open to ideas about neural nets. It was the first time I‚Äôd been somewhere where thinking about how the brain works, and thinking about how that might relate to psychology, was seen as a very positive thing. And it was a lot of fun there, in particular collaborating with David Rumelhart was great. AN: I see, great. So this was when you were at UCSD, and you and Rumelhart around what, 1982, wound up writing the seminal back prop paper, right? Actually, it was more complicated than that. In, I think, early 1982, David Rumelhart and me, and Ron Williams, between us developed the back prop algorithm, it was mainly David Rumelhart‚Äôs idea. We discovered later that many other people had invented it. David Parker had invented, it probably after us, but before we‚Äôd published. Paul Werbos had published it already quite a few years earlier, but nobody paid it much attention. And there were other people who‚Äôd developed very similar algorithms, it‚Äôs not clear what‚Äôs meant by back prop. But using the chain rule to get derivatives was not a novel idea. AN: I see, why do you think it was your paper that helped so much the community latch on to back prop? It feels like your paper marked an infection in the acceptance of this algorithm, whoever accepted it. So we managed to get a paper into Nature in 1986. And I did quite a lot of political work to get the paper accepted. I figured out that one of the referees was probably going to be Stuart Sutherland, who was a well known psychologist in Britain. And I went to talk to him for a long time, and explained to him exactly what was going on. And he was very impressed by the fact that we showed that back prop could learn representations for words. And you could look at those representations, which are little vectors, and you could understand the meaning of the individual features. So we actually trained it on little triples of words about family trees, like Mary has mother Victoria. And you‚Äôd give it the first two words, and it would have to predict the last word. And after you trained it, you could see all sorts of features in the representations of the individual words. Like the nationality of the person there, what generation they were, which branch of the family tree they were in, and so on. That was what made Stuart Sutherland really impressed with it, and I think that‚Äôs why the paper got accepted. AN: Very early word embeddings, and you‚Äôre already seeing learned features of semantic meanings emerge from the training algorithm. Yes, so from a psychologist‚Äôs point of view, what was interesting was it unified two completely different strands of ideas about what knowledge was like. So there was the old psychologist‚Äôs view that a concept is just a big bundle of features, and there‚Äôs lots of evidence for that. And then there was the AI view of the time, which is a formal structurist view. Which was that a concept is how it relates to other concepts. And to capture a concept, you‚Äôd have to do something like a graph structure or maybe a semantic net. And what this back propagation example showed was, you could give it the information that would go into a graph structure, or in this case a family tree. And it could convert that information into features in such a way that it could then use the features to derive new consistent information, ie generalize. But the crucial thing was this to and fro between the graphical representation or the tree structured representation of the family tree, and a representation of the people as big feature vectors. And in fact that from the graph-like representation you could get feature vectors. And from the feature vectors, you could get more of the graph-like representation. AN: So this is 1986? In the early 90s, Bengio showed that you can actually take real data, you could take English text, and apply the same techniques there, and get embeddings for real words from English text, and that impressed people a lot. AN: I guess recently we‚Äôve been talking a lot about how fast computers like GPUs and supercomputers that‚Äôs driving deep learning. I didn‚Äôt realize that back between 1986 and the early 90‚Äôs, it sounds like between you and Bengio there was already the beginnings of this trend. Yes, it was a huge advance. In 1986, I was using a list machine which was less than a tenth of a mega flop. And by about 1993 or thereabouts, people were seeing ten mega flops. So there was a factor of 100, and that‚Äôs the point at which is was easy to use, because computers were just getting faster. AN: Over the past several decades, you‚Äôve invented so many pieces of neural networks and deep learning. I‚Äôm actually curious, of all of the things you‚Äôve invented, which of the ones you‚Äôre still most excited about today? So I think the most beautiful one is the work I do with Terry Sejnowski on Boltzmann machines. So we discovered there was this really, really simple learning algorithm that applied to great big density connected nets where you could only see a few of the nodes. So it would learn hidden representations and it was a very simple algorithm. And it looked like the kind of thing you should be able to get in a brain because each synapse only needed to know about the behavior of the two neurons it was directly connected to. And the information that was propagated was the same. There were two different phases, which we called wake and sleep. But in the two different phases, you‚Äôre propagating information in just the same way. Where as in something like back propagation, there‚Äôs a forward pass and a backward pass, and they work differently. They‚Äôre sending different kinds of signals. So I think that‚Äôs the most beautiful thing. And for many years it looked just like a curiosity, because it looked like it was much too slow. But then later on, I got rid of a little bit of the beauty, and it started letting me settle down and just use one iteration, in a somewhat simpler net. And that gave restricted Boltzmann machines, which actually worked effectively in practice. So in the Netflix competition, for example, restricted Boltzmann machines were one of the ingredients of the winning entry. AN: And in fact, a lot of the recent resurgence of neural net and deep learning, starting about 2007, was the restricted Boltzmann machine, and de-restricted Boltzmann machine work that you and your lab did. Yes so that‚Äôs another of the pieces of work I‚Äôm very happy with, the idea of that you could train your restricted Boltzmann machine, which just had one layer of hidden features and you could learn one layer of feature. And then you could treat those features as data and do it again, and then you could treat the new features you learned as data and do it again, as many times as you liked. So that was nice, it worked in practice. And then UY Tay realized that the whole thing could be treated as a single model, but it was a weird kind of model. It was a model where at the top you had a restricted Boltzmann machine, but below that you had a Sigmoid belief net which was something that invented many years early. So it was a directed model and what we‚Äôd managed to come up with by training these restricted Boltzmann machines was an efficient way of doing inferences in Sigmoid belief nets. So, around that time, there were people doing neural nets, who would use densely connected nets, but didn‚Äôt have any good ways of doing probabilistic imprints in them. And you had people doing graphical models, unlike my children, who could do inference properly, but only in sparsely connected nets. And what we managed to show was the way of learning these deep belief nets so that there‚Äôs an approximate form of inference that‚Äôs very fast, it‚Äôs just hands in a single forward pass and that was a very beautiful result. And you could guarantee that each time you learn that extra layer of features there was a band, each time you learned a new layer, you got a new band, and the new band was always better than the old band. AN: The variational bands, showing as you add layers. Yes, I remember that video. So that was the second thing that I was really excited about. And I guess the third thing was the work I did with on variational methods. It turns out people in statistics had done similar work earlier, but we didn‚Äôt know about that. So we managed to make EN work a whole lot better by showing you didn‚Äôt need to do a perfect E step. You could do an approximate E step. And EN was a big algorithm in statistics. And we‚Äôd showed a big generalization of it. And in particular, in 1993, I guess, with Van Camp. I did a paper, with I think, the first variational Bayes paper, where we showed that you could actually do a version of Bayesian learning that was far more tractable, by approximating the true posterior with a guessing. And you could do that in neural net. And I was very excited by that. AN: I see. Wow, right. Yep, I think I remember all of these papers. You and Hinton, approximate paper, spent many hours reading over that. And I think some of the algorithms you use today, or some of the algorithms that lots of people use almost every day, are what, things like dropouts, or I guess activations came from your group? Yes and no. So other people have thought about rectified linear units. And we actually did some work with restricted Boltzmann machines showing that a ReLU was almost exactly equivalent to a whole stack of logistic units. And that‚Äôs one of the things that helped ReLUs catch on. AN: I was really curious about that. The value paper had a lot of math showing that this function can be approximated with this really complicated formula. Did you do that math so your paper would get accepted into an academic conference, or did all that math really influence the development of max of 0 and x? That was one of the cases where actually the math was important to the development of the idea. So I knew about rectified linear units, obviously, and I knew about logistic units. And because of the work on Boltzmann machines, all of the basic work was done using logistic units. And so the question was, could the learning algorithm work in something with rectified linear units? And by showing the rectified linear units were almost exactly equivalent to a stack of logistic units, we showed that all the math would go through. ANÔºö I see. And it provided the inspiration for today, tons of people use ReLU and it just works without without necessarily needing to understand the same motivation. Yeah, one thing I noticed later when I went to Google. I guess in 2014, I gave a talk at Google about using ReLUs and initializing with the identity matrix. because the nice thing about ReLUs is that if you keep replicating the hidden layers and you initialize with the identity, it just copies the pattern in the layer below. And so I was showing that you could train networks with 300 hidden layers and you could train them really efficiently if you initialize with their identity. But I didn‚Äôt pursue that any further and I really regret not pursuing that. We published one paper with showing you could initialize an active showing you could initialize recurringness like that. But I should have pursued it further because Later on these residual networks is really that kind of thing. AN: Over the years I‚Äôve heard you talk a lot about the brain. I‚Äôve heard you talk about relationship being back prop and the brain. What are your current thoughts on that? I‚Äôm actually working on a paper on that right now. I guess my main thought is this. If it turns out the back prop is a really good algorithm for doing learning. Then for sure evolution could‚Äôve figured out how to prevent it. I mean you have cells that could turn into either eyeballs or teeth. Now, if cells can do that, they can for sure implement back propagation and presumably this huge selective pressure for it. So I think the neuroscientist idea that it doesn‚Äôt look plausible is just silly. There may be some subtle implementation of it. And I think the brain probably has something that may not be exactly be back propagation, but it‚Äôs quite close to it. And over the years, I‚Äôve come up with a number of ideas about how this might work. So in 1987, working with Jay McClelland, I came up with the recirculation algorithm, where the idea is you send information round a loop. And you try to make it so that things don‚Äôt change as information goes around this loop. So the simplest version would be you have input units and hidden units, and you send information from the input to the hidden and then back to the input, and then back to the hidden and then back to the input and so on. And what you want, you want to train an auto-encoder, but you want to train it without having to do back propagation. So you just train it to try and get rid of all variation in the activities. So the idea is that the learning rule for synapse is change the weighting proportion to the pre-synaptic input and in proportion to the rate of change at the post synaptic input. But in recirculation, you‚Äôre trying to make the post synaptic input, you‚Äôre trying to make the old one be good and the new one be bad, so you‚Äôre changing in that direction. We invented this algorithm before neuroscientists come up with spike-timing-dependent plasticity. Spike-timing-dependent plasticity is actually the same algorithm but the other way round, where the new thing is good and the old thing is bad in the learning rule. So you‚Äôre changing the weighting proportions to the preset outlook activity times the new person outlook activity minus the old one. Later on I realized in 2007, that if you took a stack of Restricted Boltzmann machines and you trained it up. After it was trained, you then had exactly the right conditions for implementing back propagation by just trying to reconstruct. If you looked at the reconstruction era, that reconstruction era would actually tell you the derivative of the discriminative performance. And at the first deep learning workshop at in 2007, I gave a talk about that. That was almost completely ignored. Later on, Yoshua Bengio, took up the idea and that‚Äôs actually done quite a lot of more work on that. And I‚Äôve been doing more work on it myself. And I think this idea that if you have a stack of auto-encoders, then you can get derivatives by sending activity backwards and locate reconstructionaires, is a really interesting idea and may well be how the brain does it. AN: One other topic that I know you follow about and that I hear you‚Äôre still working on is how to deal with multiple time skills in deep learning? So, can you share your thoughts on that? Yes, so actually, that goes back to my first years of graduate student. The first talk I ever gave was about using what I called fast weights. So weights that adapt rapidly, but decay rapidly. And therefore can hold short term memory. And I showed in a very simple system in 1973 that you could do true recursion with those weights. And what I mean by true recursion is that the neurons that is used in representing things get re-used for representing things in the recursive core. And the weights that is used for actually knowledge get re-used in the recursive core. And so that leads the question of when you pop out your recursive core, how do you remember what it was you were in the middle of doing? Where‚Äôs that memory? because you used the neurons for the recursive core. And the answer is you can put that memory into fast weights, and you can recover the activities neurons from those fast weights. And more recently working with Jimmy Ba, we actually got a paper in it by using fast weights for recursion like that. I see. So that was quite a big gap. The first model was unpublished in 1973 and then Jimmy Ba‚Äôs model was in 2015, I think, or 2016. So it‚Äôs about 40 years later. AN: And, I guess, one other idea of quite a few years now, over five years, I think is capsules, where are you with that? Okay, so I‚Äôm back to the state I‚Äôm used to being in. Which is I have this idea I really believe in and nobody else believes it. And I submit papers about it and they would get rejected. But I really believe in this idea and I‚Äôm just going to keep pushing it. So it hinges on, there‚Äôs a couple of key ideas. One is about how you represent multi dimensional entities, and you can represent multi-dimensional entities by just a little backdoor activities. As long as you know there‚Äôs any one of them. So the idea is in each region of the image, you‚Äôll assume there‚Äôs at most, one of the particular kind of feature. And then you‚Äôll use a bunch of neurons, and their activities will represent the different aspects to that feature, like within that region exactly what are its x and y coordinates? What orientation is it at? How fast is it moving? What color is it? How bright is it? And stuff like that. So you can use a whole bunch of neurons to represent different dimensions of the same thing. Provided there‚Äôs only one of them. That‚Äôs a very different way of doing representation from what we‚Äôre normally used to in neuronettes. Normally in neuronettes, we just have a great big layer, and all the units go off and do whatever they do. But you don‚Äôt think of bundling them up into little groups that represent different coordinates of the same thing. So I think we should beat this extra structure. And then the other idea that goes with that. AN: So this means in the truth of the representation, you partition the representation to different subsets, to represent, right, rather than I call each of those subsets a capsule. And the idea is a capsule is able to represent an instance of a feature, but only one. And it represents all the different properties of that feature. It‚Äôs a feature that has a lot of properties as opposed to a normal neuron and a normal neuronette, which has just one scale of property. And then what you can do if you‚Äôve got that, is you can do something that normal neuronettes are very bad at, which is you can do what I call routine by agreement. So let‚Äôs suppose you want to do segmentation and you have something that might be a mouth and something else that might be a nose. And you want to know if you should put them together to make one thing. So the idea should have a capsule for a mouth that has the parameters of the mouth. And you have a capsule for a nose that has the parameters of the nose. And then to decipher whether to put them together or not, you get each of them to vote for what the parameters should be for a face. Now if the mouth and the nose are in the right spacial relationship, they will agree. So when you get two captures at one level voting for the same set of parameters at the next level up, you can assume they‚Äôre probably right, because agreement in a high dimensional space is very unlikely. And that‚Äôs a very different way of doing filtering, than what we normally use in neural nets. So I think this routing by agreement is going to be crucial for getting neural nets to generalize much better from limited data. I think it‚Äôd be very good at getting the changes in viewpoint, very good at doing segmentation. And I‚Äôm hoping it will be much more statistically efficient than what we currently do in neural nets. Which is, if you want to deal with changes in viewpoint, you just give it a whole bunch of changes in view point and training on them all. AN: I see, right, so rather than FIFO learning, supervised learning, you can learn this in some different way. Well, I still plan to do it with supervised learning, but the mechanics of the forward paths are very different. It‚Äôs not a pure forward path in the sense that there‚Äôs little bits of iteration going on, where you think you found a mouth and you think you found a nose. And use a little bit of iteration to decide whether they should really go together to make a face. And you can do back props from that iteration. So you can try and do it a little discriminatively, and we‚Äôre working on that now at my group in Toronto. So I now have a little Google team in Toronto, part of the Brain team. That‚Äôs what I‚Äôm excited about right now. AN: I see, great, yeah. Look forward to that paper when that comes out. You worked in deep learning for several decades. I‚Äôm actually really curious, how has your thinking, your understanding of AI changed over these years? So I guess a lot of my intellectual history has been around back propagation, and how to use back propagation, how to make use of its power. So to begin with, in the mid 80s, we were using it for discriminative learning and it was working well. I then decided, by the early 90s, that actually most human learning was going to be unsupervised learning. And I got much more interested in unsupervised learning, and that‚Äôs when I worked on things like the Wegstein algorithm. AN: And your comments at that time really influenced my thinking as well. So when I was leading Google Brain, our first project spent a lot of work in unsupervised learning because of your influence. Right, and I may have misled you. Because in the long run, I think unsupervised learning is going to be absolutely crucial. But you have to sort of face reality. And what‚Äôs worked over the last ten years or so is supervised learning. Discriminative training, where you have labels, or you‚Äôre trying to predict the next thing in the series, so that acts as the label. And that‚Äôs worked incredibly well. I still believe that unsupervised learning is going to be crucial, and things will work incredibly much better than they do now when we get that working properly, but we haven‚Äôt yet. AN: Yeah, I think many of the senior people in deep learning, including myself, remain very excited about it. It‚Äôs just none of us really have almost any idea how to do it yet. Maybe you do, I don‚Äôt feel like I do. Variational altering code is where you use the reparameterization tricks. Seemed to me like a really nice idea. And generative adversarial nets also seemed to me to be a really nice idea. I think generative adversarial nets are one of the sort of biggest ideas in deep learning that‚Äôs really new. I‚Äôm hoping I can make capsules that successful, but right now generative adversarial nets, I think, have been a big breakthrough. AN: What happened to sparsity and slow features, which were two of the other principles for building unsupervised models? I was never as big on sparsity as you were, buddy. But slow features, I think, is a mistake. You shouldn‚Äôt say slow. The basic idea is right, but you shouldn‚Äôt go for features that don‚Äôt change, you should go for features that change in predictable ways. So here‚Äôs a sort of basic principle about how you model anything. You take your measurements, and you‚Äôre applying nonlinear transformations to your measurements until you get to a representation as a state vector in which the action is linear. So you don‚Äôt just pretend it‚Äôs linear like you do with common filters. But you actually find a transformation from the observables to the underlying variables where linear operations, like matrix multipliers on the underlying variables, will do the work. So for example, if you want to change viewpoints. If you want to produce the image from another viewpoint, what you should do is go from the pixels to coordinates. And once you got to the coordinate representation, which is a kind of thing I‚Äôm hoping captures will find. You can then do a matrix multiplier to change viewpoint, and then you can map it back to pixels. AN: Right, that‚Äôs why you did all that. I think that‚Äôs a very, very general principle. AN: That‚Äôs why you did all that work on face synthesis, right? Where you take a face and compress it to very low dimensional vector, and so you can fiddle with that and get back other faces. I had a student who worked on that, I didn‚Äôt do much work on that myself. AN: Now I‚Äôm sure you still get asked all the time, if someone wants to break into deep learning, what should they do? So what advice would you have? I‚Äôm sure you‚Äôve given a lot of advice to people in one on one settings, but for the global audience of people watching this video. What advice would you have for them to get into deep learning? Okay, so my advice is sort of read the literature, but don‚Äôt read too much of it. So this is advice I got from my advisor, which is very unlike what most people say. Most people say you should spend several years reading the literature and then you should start working on your own ideas. And that may be true for some researchers, but for creative researchers I think what you want to do is read a little bit of the literature. And notice something that you think everybody is doing wrong, I‚Äôm contrary in that sense. You look at it and it just doesn‚Äôt feel right. And then figure out how to do it right. And then when people tell you, that‚Äôs no good, just keep at it. And I have a very good principle for helping people keep at it, which is either your intuitions are good or they‚Äôre not. If your intuitions are good, you should follow them and you‚Äôll eventually be successful. If your intuitions are not good, it doesn‚Äôt matter what you do. AN: Inspiring advice, might as well go for it. You might as well trust your intuitions. There‚Äôs no point not trusting them. AN: I usually advise people to not just read, but replicate published papers. And maybe that puts a natural limiter on how many you could do, because replicating results is pretty time consuming. Yes, it‚Äôs true that when you‚Äôre trying to replicate a published you discover all over little tricks necessary to make it work. The other advice I have is, never stop programming. Because if you give a student something to do, if they‚Äôre botching, they‚Äôll come back and say, it didn‚Äôt work. And the reason it didn‚Äôt work would be some little decision they made, that they didn‚Äôt realize is crucial. And if you give it to a good student, like UY Tay for example. You can give him anything and he‚Äôll come back and say, it worked. I remember doing this once, and I said, but wait a minute UY. Since we last talked, I realized it couldn‚Äôt possibly work for the following reason. And said, yeah, I realized that right away, so I assumed you didn‚Äôt mean that. AN: I see, yeah, that‚Äôs great, yeah. Let‚Äôs see, any other advice for people that want to break into AI and deep learning? I think that‚Äôs basically, read enough so you start developing intuitions. And then, trust your intuitions and go for it, don‚Äôt be too worried if everybody else says it‚Äôs nonsense. AN: And I guess there‚Äôs no way to know if others are right or wrong when they say it‚Äôs nonsense, but you just have to go for it, and then find out. Right, but there is one thing, which is, if you think it‚Äôs a really good idea, and other people tell you it‚Äôs complete nonsense, then you know you‚Äôre really on to something. So one example of that is when and I first came up with variational methods. I sent mail explaining it to a former student of mine called Peter Brown, who knew a lot about. And he showed it to people who worked with him, called the brothers, they were twins, I think. And he then told me later what they said, and they said, either this guy‚Äôs drunk, or he‚Äôs just stupid, so they really, really thought it was nonsense. Now, it could have been partly the way I explained it, because I explained it in intuitive terms. But when you have what you think is a good idea and other people think is complete rubbish, that‚Äôs the sign of a really good idea. AN: I see, and research topics, new grad students should work on capsules and maybe unsupervised learning, any other? One good piece of advice for new grad students is, see if you can find an advisor who has beliefs similar to yours. Because if you work on stuff that your advisor feels deeply about, you‚Äôll get a lot of good advice and time from your advisor. If you work on stuff your advisor‚Äôs not interested in, all you‚Äôll get is, you get some advice, but it won‚Äôt be nearly so useful. AN: I see, and last one on advice for learners, how do you feel about people entering a PhD program? Versus joining a top company, or a top research group? Yeah, it‚Äôs complicated, I think right now, what‚Äôs happening is, there aren‚Äôt enough academics trained in deep learning to educate all the people that we need educated in universities. There just isn‚Äôt the faculty bandwidth there, but I think that‚Äôs going to be temporary. I think what‚Äôs happened is, most departments have been very slow to understand the kind of revolution that‚Äôs going on. I kind of agree with you, that it‚Äôs not quite a second industrial revolution, but it‚Äôs something on nearly that scale. And there‚Äôs a huge sea change going on, basically because our relationship to computers has changed. Instead of programming them, we now show them, and they figure it out. That‚Äôs a completely different way of using computers, and computer science departments are built around the idea of programming computers. And they don‚Äôt understand that sort of, this showing computers is going to be as big as programming computers. Except they don‚Äôt understand that half the people in the department should be people who get computers to do things by showing them. So my department refuses to acknowledge that it should have lots and lots of people doing this. They think they got a couple, maybe a few more, but not too many. And in that situation, you have to remind the big companies to do quite a lot of the training. So Google is now training people, we call brain residence, I suspect the universities will eventually catch up. AN: In fact, maybe a lot of students have figured this out. A lot of top 50 programs, over half of the applicants are actually wanting to work on showing, rather than programming. Yeah, cool, AN: yeah, in fact, to give credit where it‚Äôs due, whereas a deep learning AI is creating a deep learning specialization. As far as I know, their first deep learning MOOC was actually yours taught on Coursera, back in 2012, as well. And somewhat strangely, that‚Äôs when you first published the RMS algorithm, which also is a rough. Right, yes, well, as you know, that was because you invited me to do the MOOC. And then when I was very dubious about doing, you kept pushing me to do it, so it was very good that I did, although it was a lot of work. AN: Yes, and thank you for doing that, I remember you complaining to me, how much work it was. And you staying out late at night, but I think many, many learners have benefited for your first MOOC, so I‚Äôm very grateful to you for it, so, over the years, I‚Äôve seen you embroiled in debates about paradigms for AI, and whether there‚Äôs been a paradigm shift for AI. What are your, can you share your thoughts on that? Yes, happily, so I think that in the early days, back in the 50s, people like von Neumann and didn‚Äôt believe in symbolic AI, they were far more inspired by the brain. Unfortunately, they both died much too young, and their voice wasn‚Äôt heard. And in the early days of AI, people were completely convinced that the representations you need for intelligence were symbolic expressions of some kind. Sort of cleaned up logic, where you could do nomeratonic things, and not quite logic, but something like logic, and that the essence of intelligence was reasoning. What‚Äôs happened now is, there‚Äôs a completely different view, which is that what a thought is, is just a great big vector of neural activity, so contrast that with a thought being a symbolic expression. And I think the people who thought that thoughts were symbolic expressions just made a huge mistake. What comes in is a string of words, and what comes out is a string of words. And because of that, strings of words are the obvious way to represent things. So they thought what must be in between was a string of words, or something like a string of words. And I think what‚Äôs in between is nothing like a string of words. I think the idea that thoughts must be in some kind of language is as silly as the idea that understanding the layout of a spatial scene must be in pixels, pixels come in. And if we could, if we had a dot matrix printer attached to us, then pixels would come out, but what‚Äôs in between isn‚Äôt pixels. And so I think thoughts are just these great big vectors, and that big vectors have causal powers. They cause other big vectors, and that‚Äôs utterly unlike the standard AI view that thoughts are symbolic expressions. AN: I see, good, I guess AI is certainly coming round to this new point of view these days. Some of it, I think a lot of people in AI still think thoughts have to be symbolic expressions. AN: Thank you very much for doing this interview. It was fascinating to hear how deep learning has evolved over the years, as well as how you‚Äôre still helping drive it into the future, so thank you, Jeff. Well, thank you for giving me this opportunity. AN: Thank you. References Geoffrey Hinton interview, https://www.coursera.org/learn/neural-networks-deep-learning/lecture/dcm5r/geoffrey-hinton-interview","tags":[]},{"title":"ÁîªËôæ","date":"2017-09-03T06:31:32.000Z","path":"2017/09/03/ÁîªËôæ/","text":"‰ªäË¥≠Âæó‰∏ÄÁîªÔºåÁîöÂñú„ÄÇ ÊûÑÂõæ‰∏•Ë∞®ËÄå‰∏çÂ§±Â§ßÊ∞îÔºåÁñèÂØÜÊúâËá¥‰∏îÈÅ•Áõ∏ÂëºÂ∫îÔºåÁ¨îÂ¢®ÁÅµÂä®ÁäπÂ¶ÇÊ¥ªÁâ©Ë∑ÉÁÑ∂Á∫∏‰∏ä„ÄÇÈΩêÁôΩÁü≥‰∏âÂ≠óÂ≠óËøπÈÅíÂä≤ÊúâÂäõÔºåÂç¥ÂèàÈÄèÈú≤Âá∫ÂÑøÁ´•Ëà¨ÁöÑÂ§©ÁúüÁÉÇÊº´„ÄÇ Â≠óÔºåÁîªÁõ∏Â∫îÂæóÁ´†ÔºåÁñèÂèØËµ∞È©¨ÂØÜ‰∏çÈÄèÈ£éÔºåË£ÖË£±Êõ¥ÊòØÂà´ÂÖ∑‰∏ÄÊ†ºÔºåËæπ‰∏äÂúÜÁÇπÁñèÂØÜ‰∏ÄËá¥ÔºåÊ∑±Ëâ≤ËÉåÊôØ‰∏éÊµÖËâ≤ÁîªÈù¢Áõ∏‰∫íÊò†Ë°¨„ÄÇ ÂÆû‰∏∫ÈöæÂæó‰Ω≥‰ΩúÔºåÂπ∂ÁªèÁ†ñÂÆ∂Èâ¥ÂÆöÁúüËøπÊó†Áñë„ÄÇ Ê≠§ÁîªËøòÊúâ‰∏ÄÁ•ûÂ•á‰πãÂ§ÑÔºåËã•ÊîæÁ¨ºÂ±âËí∏ 10 ÂàÜÈíüÔºåÁîªÈù¢ÁîüÂΩ©ÔºåËß¶ËßâËÇåÁêÜÔºåÊÑèÂ¢ÉÊõ¥‰Ω≥„ÄÇ","tags":[]},{"title":"‰∏∫‰ªÄ‰πàË¶ÅËØª‰π¶","date":"2017-09-03T06:09:19.000Z","path":"2017/09/03/‰∏∫‰ªÄ‰πàË¶ÅËØª‰π¶/","text":"Áà∂Â≠ê‰∫å‰∫∫È•ÆËå∂ÔºåÂÑøÈóÆÔºö‚Äú‰∏∫‰ªÄ‰πàË¶ÅÊàëËØª‰π¶Ôºü‚Äù Áà∂Á≠îÔºö‚ÄúÊàëËøô‰πàË∑ü‰Ω†ËØ¥ÂêßÔºÅ‰Ω†ËØª‰∫Ü‰π¶ÔºåÂñùËøôËå∂Êó∂Â∞±‰ºöËØ¥Ôºö‚ÄòÊ≠§Ëå∂Ê±§Ëâ≤ÊæÑÁ∫¢ÈÄè‰∫ÆÔºåÊ∞îÂë≥ÂπΩÈ¶ôÂ¶ÇÂÖ∞ÔºåÂè£ÊÑüÈ•±Êª°Á∫ØÊ≠£ÔºåÂúÜÊ∂¶Â¶ÇËØóÔºåÂõûÂë≥ÁîòÈÜáÔºåÈΩøÈ¢äÁïôËä≥ÔºåÈüµÂë≥ÂçÅË∂≥ÔºåÈ°øËßâÂ¶ÇÊ¢¶‰ººÂπªÔºå‰ªø‰ΩõÂ§©‰∏ä‰∫∫Èó¥ÔºåÁúü‰πÉËå∂‰∏≠ÊûÅÂìÅÔºÅ‚Äô‚Äù ËÄåÂ¶ÇÊûú‰Ω†Ê≤°ÊúâËØª‰π¶Ôºå‰Ω†Â∞±‰ºöËØ¥ÔºöÔºö‚Äú‚ÄòÂçßÊìçÔºÅËøôËå∂‰∏çËµñ‚Äô‚Äù ËøëÊó•ÂØπ„Ää‰∏≠ÂõΩËØóËØçÂ§ß‰ºö„Äã‰∏äÁòæÔºå‰∫éÊòØÊÄùËÄÉ‰∫∫‰∏∫‰ªÄ‰πàË¶ÅËØª‰π¶ÔºüÂèàÂ¶Ç‰ΩïÁî®Â•ΩÁöÑËØçËØ≠Êù•ÊèèËø∞ÂøÉÊÉÖÂíåÊÑüÂèóÂë¢Ôºü Êúâ‰∫∫ÊõæÊèêÂá∫ËøôÊ†∑‰∏Ä‰∏™ÈóÆÈ¢òÔºöÂ§ßÈÉ®ÂàÜËØªËøáÁöÑ‰π¶ÊúÄÂêéÈÉΩ‰ºöÂøòÊéâÔºåÈÇ£ËØª‰π¶ÁöÑÊÑè‰πâ‰ΩïÂú®ÔºüËøôÊòØÊàëËßÅËøáÊúÄÂ•ΩÁöÑÂõûÁ≠îÔºö‚ÄúÂ∞èÁöÑÊó∂ÂÄôÊàëÂêÉ‰∫ÜÂæàÂ§ö‰∏úË•øÔºåÂÖ∂‰∏≠ÁöÑÂ§ßÈÉ®ÂàÜÊàëÂ∑≤ËÆ∞‰∏çÊ∏ÖÊòØ‰ªÄ‰πàÔºå‰ΩÜÊàëÁü•ÈÅìÔºå‰ªñ‰ª¨Â∑≤ÁªèÊàê‰∫ÜÊàëÁé∞Âú®ÁöÑÈ™®ÂíåËÇâ‚Äù„ÄÇËØª‰π¶Ôºå‰πüÊòØÂ¶ÇÊ≠§„ÄÇÂÆÉÂú®‰∏çÁü•‰∏çËßâ‰∏≠Â∞±Â∑≤ÁªèÂΩ±Âìç‰∫Ü‰Ω†ÁöÑÊÄùÊÉ≥Ôºå‰Ω†ÁöÑË®ÄË°åÔºå‰Ω†ÁöÑÂΩ¢Ë±°„ÄÇ 1ÔºåÂΩì‰Ω†ÂºÄÂøÉÁöÑÊó∂ÂÄô‰Ω†ÂèØ‰ª•ËØ¥ÔºöÊò•È£éÂæóÊÑèÈ©¨ËπÑÁñæ‰∏ÄÊó•ÁúãÂ∞ΩÈïøÂÆâËä± ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÂìàÂìà, ÂìàÂìà, ÂìàÂìà, ÂìàÂìà, ÂìàÂìàÂìà 2ÔºåÂΩì‰Ω†‰º§ÂøÉÁöÑÊó∂ÂÄô‰Ω†ÂèØ‰ª•ËØ¥ÔºöÈóÆÂêõËÉΩÊúâÂá†Â§öÊÑÅÔºåÊÅ∞‰ºº‰∏ÄÊ±üÊò•Ê∞¥Âêë‰∏úÊµÅ ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÊàëÁöÑÂøÉÂ•ΩÁóõ 3ÔºåÂΩì‰Ω†ÁúãÂà∞Â∏ÖÂì•Êó∂‰Ω†ÂèØ‰ª•ËØ¥ÔºöÈôå‰∏ä‰∫∫Â¶ÇÁéâÂÖ¨Â≠ê‰∏ñÊó†Âèå ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÊàëÈù†ÔºåÂ•ΩÂ∏ÖÔºÅÊàëÈù†Èù†Èù†ÔºåÂ§™Â∏Ö‰∫Ü 4ÔºåÂΩì‰Ω†ÁúãÂà∞ÁæéÂ•≥Êó∂‰Ω†ÂèØ‰ª•ËØ¥ÔºöÂåóÊñπÊúâ‰Ω≥‰∫∫ÔºåÁªù‰∏ñËÄåÁã¨Á´ã ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÊàëÂéªÔºåÂ•πÂ•ΩÁæéÊàëÂéªÔºåÂ•πÁúüÁæé 5ÔºåÂΩì‰Ω†ÈÅáËßÅÊ∏£Áî∑Êó∂‰Ω†ÂèØ‰ª•ËØ¥ÔºöÈÅá‰∫∫‰∏çÊ∑ë ÔºåËØÜ‰∫∫‰∏çÂñÑ ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÁûé‰∫ÜËÄÅÂ≠êÁöÑÁãóÁúº 6ÔºåÂΩì‰Ω†Âêë‰∏Ä‰∏™‰∫∫Ë°®ËææÁà±ÊÑèÊó∂‰Ω†ÂèØ‰ª•ËØ¥ÔºöÂ±±ÊúâÊú®ÂÖÆÊú®ÊúâÊûùÂøÉÊÇ¶ÂêõÂÖÆÂêõ‰∏çÁü• ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÊàëÂñúÊ¨¢‰Ω†ÔºåÂ§©ËçíÂú∞ËÄÅÔºåÊµ∑ÊûØÁü≥ÁÉÇ 7ÔºåÂΩì‰Ω†ÊÄùÂøµ‰∏Ä‰∏™‰∫∫ÁöÑÊó∂ÂÄô‰Ω†ÂèØ‰ª•ËØ¥ÔºöË°£Â∏¶Ê∏êÂÆΩÁªà‰∏çÊÇî‰∏∫‰ºäÊ∂àÂæó‰∫∫ÊÜîÊÇ¥ ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÊàëÊÉ≥Ê≠ª‰Ω†Âï¶ 8ÔºåÂΩì‰Ω†Â§±ÊÅãÁöÑÊó∂ÂÄô‰Ω†ÂèØ‰ª•ËØ¥Ôºö‰∫∫ÁîüËã•Âè™Â¶ÇÂàùËßÅ‰Ωï‰∫ãÁßãÈ£éÊÇ≤ÁîªÊâáÁ≠âÈó≤ÂèòÂç¥ÊïÖ‰∫∫ÂøÉÂç¥ÈÅìÊïÖ‰∫∫ÂøÉÊòìÂèò ËÄå‰∏çÊòØÂè™‰ºöÂçÉ‰∏áÈÅçÁöÑÂëºÂñäÔºöËìùÁò¶ÔºåÈ¶ôËèá 9ÔºåÁªìÂ©öÁöÑÊó∂ÂÄô‰Ω†ÂèØ‰ª•ËØ¥ÔºöÊò•ÂÆµ‰∏ÄÂàªÂÄºÂçÉÈáëËä±ÊúâÊ∏ÖÈ¶ôÊúàÊúâÈò¥ ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÂòøÂòø, ÂòøÂòø, ÂòøÂòøÂòø 10ÔºåÂàÜÊâãÁöÑÊó∂ÂÄô‰Ω†ÂèØ‰ª•ËØ¥ÔºöÁõ∏Êø°‰ª•Ê≤´‰∏çÂ¶ÇÁõ∏Âøò‰∫éÊ±üÊπñ ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÊàë‰ª¨‰∏çÂêàÈÄÇ 11ÔºåÁúãËßÅÂ§ßÊº†ÊààÂ£ÅÁöÑÊó∂ÂÄô‰Ω†ÂèØ‰ª•ËØ¥ÔºöÂ§ßÊº†Â≠§ÁÉüÁõ¥ÔºåÈïøÊ≤≥ËêΩÊó•ÂúÜ ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÂîâÂëÄÂ¶àÂëÄÔºåËøôÂÖ®ÈÉΩÊòØÊ≤ôÂ≠ê 12ÔºåÁúãËßÅÂ§ïÈò≥‰ΩôÊôñÁöÑÊó∂ÂÄô‰Ω†ÂèØ‰ª•ËØ¥ÔºöËêΩÈúû‰∏éÂ≠§ÈπúÈΩêÈ£ûÁßãÊ∞¥ÂÖ±ÈïøÂ§©‰∏ÄËâ≤ ËÄå‰∏çÊòØÂè™‰ºöËØ¥ÔºöÂçßÊßΩËøô‰πàÂ§öÈ∏üÁúüÂ•ΩÁúãÁúü‰ªñÂ¶àÂ§™Â•ΩÁúã‰∫Ü","tags":[]},{"title":"C10k / C10M Challenge","date":"2017-09-03T04:38:45.000Z","path":"2017/09/03/C10k-C10M-Challenge/","text":"C10k / C10M Challenge ÊåëÊàò HistoryThe term was coined in 1999 by Dan Kegel, citing the Simtel FTP host, cdrom.com, serving 10,000 clients at once over 1 gigabit per second Ethernet in that year. The term has since been used for the general issue of large number of clients, with similar numeronyms for larger number of connections, most recently C10M in the 2010s. By the early 2010s millions of connections on a single commodity 1U server became possible: over 2 million connections (WhatsApp, 24 cores, using Erlang on FreeBSD), 10‚Äì12 million connections (MigratoryData, 12 cores, using Java on Linux). C10kÔºàconcurrently handling 10k connectionsÔºâÊòØ‰∏Ä‰∏™Âú® 1999 Âπ¥Ë¢´ÊèêÂá∫Êù•ÁöÑÊäÄÊúØÊåëÊàòÔºåÂ¶Ç‰ΩïÂú®‰∏ÄÈ¢ó 1GHz CPUÔºå2G ÂÜÖÂ≠òÔºå1Gbps ÁΩëÁªúÁéØÂ¢É‰∏ãÔºåËÆ©ÂçïÂè∞ÊúçÂä°Âô®ÂêåÊó∂‰∏∫ 1 ‰∏á‰∏™ÂÆ¢Êà∑Á´ØÊèê‰æõ FTP ÊúçÂä°„ÄÇËÄåÂà∞‰∫Ü 2010 Âπ¥ÂêéÔºåÈöèÁùÄÁ°¨‰ª∂ÊäÄÊúØÁöÑÂèëÂ±ïÔºåËøô‰∏™ÈóÆÈ¢òË¢´Âª∂‰º∏‰∏∫ C10MÔºåÂç≥Â¶Ç‰ΩïÂà©Áî® 8 Ê†∏ÂøÉ CPUÔºå64G ÂÜÖÂ≠òÔºåÂú® 10Gbps ÁöÑÁΩëÁªú‰∏ä‰øùÊåÅ 1000 ‰∏áÂπ∂ÂèëËøûÊé•ÔºåÊàñÊòØÊØèÁßíÈíüÂ§ÑÁêÜ 100 ‰∏áÁöÑËøûÊé•„ÄÇÔºà‰∏§ÁßçÁ±ªÂûãÁöÑËÆ°ÁÆóÊú∫ËµÑÊ∫êÂú®ÂêÑËá™ÁöÑÊó∂‰ª£ÈÉΩÁ∫¶‰∏∫ 1200 ÁæéÂÖÉÔºâ„ÄÇ C10k / C10M ÈóÆÈ¢òÂàôÊòØ‰ªéÊäÄÊúØËßíÂ∫¶Âá∫ÂèëÊåëÊàòËΩØÁ°¨‰ª∂ÊûÅÈôê„ÄÇC10k / C10M ÈóÆÈ¢òÂæóËß£ÔºåÊàêÊú¨ÈóÆÈ¢òÂíåÊïàÁéáÈóÆÈ¢òËøéÂàÉËÄåËß£„ÄÇ References C10k problem, https://en.wikipedia.org/wiki/C10k_problem The C10K problem, http://www.kegel.com/c10k.html The Secret To 10 Million Concurrent Connections - The Kernel Is The Problem Not The Solution, http://highscalability.com/blog/2013/5/13/the-secret-to-10-million-concurrent-connections-the-kernel-i.html Inside NGINX: How We Designed for Performance &amp; Scale, https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/ Êû∂ÊûÑÂ∏àÂÆûË∑µÊó•ÔΩú‰ªéC10KÂà∞C10MÈ´òÊÄßËÉΩÁΩëÁªúÁöÑÊé¢Á¥¢‰∏éÂÆûË∑µ, http://blog.qiniu.com/archives/4941","tags":[]},{"title":"Plato and Socrates - ÊüèÊãâÂõæÈ∫¶Á©óÈóÆÈ¢ò","date":"2017-09-02T03:58:00.000Z","path":"2017/09/02/Plato-and-Socrates-ÊüèÊãâÂõæÈ∫¶Á©óÈóÆÈ¢ò/","text":"One day, Plato asked his teacher Socrates, ‚ÄúWhat is love? How can I find it?‚Äù Socrates answered, ‚ÄúThere is a vast wheat field in front. Walk forward without turning back, and pick only one stalk. If you find the most magnificent stalk, then you have found love.‚Äù Plato walked forward, and before long, he returned with empty hands, having picked nothing. His teacher asked, ‚ÄúWhy did you not pick any stalk?‚Äù Plato answered, ‚ÄúBecause I could only pick once, and yet I could not turn back. I did find the most magnificent stalk, but did not know if there were any better ones ahead, so I did not pick it. As I walked further, the stalks that I saw were not as good as the earlier one, so! I did not pick any in the end.‚Äù Socrates then said, ‚ÄúAnd that is LOVE.‚Äù On another day, Plato asked Socrates: ‚ÄúWhat is marriage? How can I find it?‚Äù His teacher answered, ‚ÄúThere is a thriving forest in front. Walk forward without turning back, and chop down only one tree. If you find the tallest tree, then you have found marriage‚Äù. Plato walked forward, and before long, He returned with a tree. The tree was not bad but it was not tall, either. It was only an ordinary tree, not the best but just a good tree. His teacher asked, ‚ÄúWhy did you chop down such an ordinary tree?‚Äù Plato answered, ‚ÄúBased on my previous experience, I had walked through the field, but returned with empty hands. This time, I saw this tree, and I felt that it was the first good tree I had seen, so I chopped it down and brought it back. I did not want to miss the chance.‚Äù Socrates then said, ‚ÄúAnd that is MARRIAGE. On another day, Plato asked his teacher, ‚ÄúWhat is life?‚Äù Socrates asked him to go to the forest again, allowed back and forth as well, and pluck the most beautiful flower. Plato walked forward. However he hadn‚Äôt come back for 3 days. His teacher went to find him. When he saw Plato‚Äôs camping in the forest, he asked:‚Äù Have you found the most beautiful flower?‚Äù Plato pointed a flower near to his camp and answered, ‚ÄúThis is the most beautiful flower!‚Äù ‚ÄúWhy didn‚Äôt you take it out?‚Äù Socrates asked. ‚ÄúBecause if I pick it, it would be drooping. Even though I didn‚Äôt pick, it would die in a couple of days for sure. So I had been living by its side while it was blooming. When it‚Äôs drooped, I was up to find another one. This is the second most beautiful flower I have found!‚Äù Socrates then said, ‚ÄúYou‚Äôve got the truth of LIFE‚Äù ‚ÄúLove‚Äù is the most beautiful thing to happen to a person, it‚Äôs an opportunity you don‚Äôt realize its worth when you have it but only when it‚Äôs gone like the field of stalks. ‚ÄúMarriage‚Äù is like the tree you chopped, it‚Äôs a compromise; you pick the first best thing you see and learn to live a happy life with it. Having an affair is alluring. It‚Äôs like lightning - bright but disappeared so quickly that you cannot catch up with and keep it. ‚ÄúLife‚Äù is to follow and enjoy the every beautiful moment of living. That‚Äôs why you should enjoy your life wherever you live. Êúâ‰∏ÄÂ§©ÔºåÂè§Â∏åËÖäÂì≤Â≠¶ÂÆ∂ÊüèÊãâÂõæÈóÆ‰ªñÁöÑËÄÅÂ∏àËãèÊ†ºÊãâÂ∫ï‰ªÄ‰πàÊòØÁà±ÊÉÖÔºå‰ªñÁöÑËÄÅÂ∏àÂ∞±Âè´‰ªñÂÖàÂà∞È∫¶Áî∞ÈáåÔºåÊëò‰∏ÄÊ£µÂÖ®È∫¶Áî∞ÈáåÊúÄÂ§ßÊúÄÈáëÈªÑÁöÑÁöÑÈ∫¶Á©ó„ÄÇÊúüÈó¥Âè™ËÉΩÊëò‰∏ÄÊ¨°ÔºåÂπ∂‰∏îÂè™ÂèØ‰ª•ÂêëÂâçËµ∞Ôºå‰∏çËÉΩÂõûÂ§¥„ÄÇÊüèÊãâÂõæ‰∫éÊòØÁÖßÁùÄËÄÅÂ∏àÁöÑËØ¥ËØùÂÅö„ÄÇÁªìÊûúÔºå‰ªñ‰∏§ÊâãÁ©∫Á©∫ÁöÑËµ∞Âá∫È∫¶Áî∞„ÄÇËÄÅÂ∏àÈóÆ‰ªñ‰∏∫‰ªÄ‰πàÊëò‰∏çÂà∞Ôºå‰ªñËØ¥Ôºö‚ÄúÂõ†‰∏∫Âè™ËÉΩÊëò‰∏ÄÊ¨°ÔºåÂèà‰∏çËÉΩËµ∞ÂõûÂ§¥Ë∑ØÔºåÂÖ∂Èó¥Âç≥‰ΩøËßÅÂà∞‰∏ÄÊ£µÂèàÂ§ßÂèàÈáëÈªÑÁöÑÔºåÂõ†‰∏∫‰∏çÁü•ÂâçÈù¢ÊòØÂê¶ÊúâÊõ¥Â•ΩÔºåÊâÄ‰ª•Ê≤°ÊúâÊëòÔºõËµ∞Âà∞ÂâçÈù¢Êó∂ÔºåÂèàÂèëËßâÊÄª‰∏çÂèä‰πãÂâçËßÅÂà∞ÁöÑÂ•ΩÔºåÂéüÊù•È∫¶Áî∞ÈáåÊúÄÂ§ßÊúÄÈáëÈªÑÁöÑÈ∫¶Á©óÔºåÊó©Â∞±ÈîôËøá‰∫ÜÔºõ‰∫éÊòØÔºåÊàë‰ªÄ‰πà‰πüÊ≤°ÊëòÂà∞„ÄÇ‚Äù ËãèÊ†ºÊãâÂ∫ïËØ¥Ôºö‚ÄúËøôÂ∞±ÊòØÁà±ÊÉÖ„ÄÇ‚Äù ‰πãÂêéÂèàÊúâ‰∏ÄÂ§©ÔºåÊüèÊãâÂõæÈóÆ‰ªñÁöÑËÄÅÂ∏à‰ªÄ‰πàÊòØÂ©öÂßªÔºå‰ªñÁöÑËÄÅÂ∏àÂ∞±Âè´‰ªñÂÖàÂà∞Ê†ëÊûóÈáåÔºåÁ†ç‰∏ã‰∏ÄÊ£µÂÖ®Ê†ëÊûóÊúÄÂ§ßÊúÄËåÇÁõõ„ÄÅÊúÄÈÄÇÂêàÊîæÂú®ÂÆ∂‰ΩúÂú£ËØûÊ†ëÁöÑÊ†ë„ÄÇÂÖ∂Èó¥ÂêåÊ†∑Âè™ËÉΩÊëò‰∏ÄÊ¨°Ôºå‰ª•ÂèäÂêåÊ†∑Âè™ÂèØ‰ª•ÂêëÂâçËµ∞Ôºå‰∏çËÉΩÂõûÂ§¥„ÄÇÊüèÊãâÂõæ‰∫éÊòØÁÖßÁùÄËÄÅÂ∏àÁöÑËØ¥ËØùÂÅö„ÄÇ‰ªäÊ¨°Ôºå‰ªñÂ∏¶‰∫Ü‰∏ÄÊ£µÊôÆÊôÆÈÄöÈÄöÔºå‰∏çÊòØÂæàËåÇÁõõÔºå‰∫¶‰∏çÁÆóÂ§™Â∑ÆÁöÑÊ†ëÂõûÊù•„ÄÇËÄÅÂ∏àÈóÆ‰ªñÔºåÊÄé‰πàÂ∏¶ËøôÊ£µÊôÆÊôÆÈÄöÈÄöÁöÑÊ†ëÂõûÊù•„ÄÇ‰ªñËØ¥Ôºö‚ÄúÊúâ‰∫Ü‰∏ä‰∏ÄÊ¨°ÁªèÈ™åÔºåÂΩìÊàëËµ∞Âà∞Â§ßÂçäË∑ØÁ®ãÔºåÂ∑≤ÁªèÊÑüÂà∞Á¥Ø‰∫ÜÂç¥Ëøò‰∏§ÊâãÁ©∫Á©∫Êó∂ÔºåÊàëËßâÂæóËôΩÁÑ∂Ê†ëÊûóÈáåËøòÊúâÂæàÂ§öÊ†ëÔºå‰ΩÜËøôÊ£µÊ†ëËøòÊòØÊå∫‰∏çÈîôÁöÑÔºå‰æøÁ†ç‰∏ãÊù•ÔºåÂÖçÂæóÊúÄÂêéÂèà‰ªÄ‰πà‰πüÂ∏¶‰∏çÂá∫Êù•„ÄÇ‚Äù ËãèÊ†ºÊãâÂ∫ïËØ¥Ôºö‚ÄúËøôÂ∞±ÊòØÂ©öÂßª„ÄÇ‚Äù ÂèàÊúâ‰∏ÄÂ§©ÊüèÊãâÂõæÂèàÈóÆËÄÅÂ∏àËãèÊ†ºÊãâÂ∫ï‰ªÄ‰πàÊòØÁîüÊ¥ªÔºåËãèÊ†ºÊãâÂ∫ïËøòÊòØÂè´‰ªñÂà∞Ê†ëÊûóËµ∞‰∏ÄÊ¨°„ÄÇË¶ÅÊ±ÇÊòØÈöè‰æøËµ∞ÔºåÂú®ÈÄî‰∏≠Ë¶ÅÂèñ‰∏ÄÊîØÊúÄÂ•ΩÁúãÁöÑËä±„ÄÇÊüèÊãâÂõæÊúâ‰∫Ü‰ª•ÂâçÁöÑÊïôËÆ≠ÂèàÂÖÖÊª°‰ø°ÂøÉÂú∞Âá∫ÂéªËøá‰∫Ü‰∏âÂ§©‰∏âÂ§úÔºå‰ªñ‰πüÊ≤°ÊúâÂõûÊù•„ÄÇËãèÊ†ºÊãâÂ∫ïÂè™Â•ΩËµ∞ËøõÊ†ëÊûóÈáåÂéªÊâæ‰ªñÔºåÊúÄÂêéÂèëÁé∞ÊüèÊãâÂõæÂ∑≤Âú®Ê†ëÊûóÈáåÂÆâËê•ÊâéÂØ®„ÄÇËãèÊ†ºÊãâÂ∫ïÈóÆ‰ªñÔºö‚Äú‰Ω†ÊâæÁùÄÊúÄÂ•ΩÁúãÁöÑËä±‰πàÔºü‚Äù ÊüèÊãâÂõæÊåáÁùÄËæπ‰∏äÁöÑ‰∏ÄÊúµËä±ËØ¥Ôºö‚ÄúËøôÂ∞±ÊòØÊúÄÂ•ΩÁúãÁöÑËä±„ÄÇ‚Äù ËãèÊ†ºÊãâÂ∫ïÈóÆÔºö‚Äú‰∏∫‰ªÄ‰πà‰∏çÊääÂÆÉÂ∏¶Âá∫ÂéªÂë¢Ôºü‚Äù ÊüèÊãâÂõæÂõûÁ≠îËÄÅÂ∏àÔºö ‚ÄúÊàëÂ¶ÇÊûúÊääÂÆÉÊëò‰∏ãÊù•ÔºåÂÆÉÈ©¨‰∏äÂ∞±ÊûØËêé„ÄÇÂç≥‰ΩøÊàë‰∏çÊëòÂÆÉÔºåÂÆÉ‰πüËøüÊó©‰ºöÊûØ„ÄÇÊâÄ‰ª•ÊàëÂ∞±Âú®ÂÆÉËøòÁõõÂºÄÁöÑÊó∂ÂÄôÔºå‰ΩèÂú®ÂÆÉËæπ‰∏ä„ÄÇÁ≠âÂÆÉÂáãË∞¢ÁöÑÊó∂ÂÄôÔºåÂÜçÊâæ‰∏ã‰∏ÄÊúµ„ÄÇËøôÂ∑≤ÁªèÊòØÊàëÊâæÁùÄÁöÑÁ¨¨‰∫åÊúµÊúÄÂ•ΩÁúãÁöÑËä±‰∫Ü„ÄÇ‚Äù ËãèÊ†ºÊãâÂ∫ïËØ¥Ôºö ‚Äú‰Ω†Â∑≤ÁªèÊáÇÂæóÁîüÊ¥ªÁöÑÁúüË∞õ‰∫Ü„ÄÇ‚Äù Áà±ÊÉÖÁªô‰∫∫ÁªèÂéÜÂíåÂõûÂøÜÔºå‰πãÂêéÔºåÂ©öÂßªÈù†ÁöÑÊòØÊòéÊô∫ÁöÑÂÜ≥ÂÆöÂíåÂ•ΩÂ•ΩÁöÑÊääÊè°ÔºåÁªèËøá‰∫ÜËøô‰∫õËÄÉÈ™åÔºåÂà∞ÊúÄÂêéÊâç‰ºöÊòéÁôΩÁîüÊ¥ªÊòØ‰∏ÄÁßçÁèçÊÉúÂíåÂÆàÊä§„ÄÇ ÊüèÊãâÂõæÈ∫¶Á©óÈóÆÈ¢òÁöÑÊï∞Â≠¶Ëß£Á≠î Áé∞Âú®Êàë‰ª¨Áî®Êï∞Â≠¶ÁöÑËßíÂ∫¶Êù•ËÆ®ËÆ∫Ëøô‰∏™ÈóÆÈ¢ò„ÄÇ ÂÅáËÆæÊàë‰ª¨Á¢∞Âà∞ÁöÑÈ∫¶Á©óÊúâ n ‰∏™ÔºåÊàë‰ª¨Áî®ËøôÊ†∑ÁöÑÁ≠ñÁï•Êù•ÈÄâÈ∫¶Á©óÔºåÂâç k ‰∏™ÔºåËÆ∞‰Ωè‰∏Ä‰∏™ÊúÄÂ§ßÁöÑÈ∫¶Á©óËÆ∞‰∏∫ dÔºàÂèØËÉΩÊòØÈáçÈáèÔºå‰πüÂèØËÉΩÊòØ‰ΩìÁßØÔºâÔºåÁÑ∂Âêé k + 1 ‰∏™ÂºÄÂßãÔºåÂè™Ë¶ÅÂ§ß‰∫é d ÁöÑÔºåÂ∞±ÈÄâÊã©ÔºåÂê¶ÂàôÂ∞±‰∏çÈÄâÊã©„ÄÇ ÂØπ‰∫éÊüê‰∏™Âõ∫ÂÆöÁöÑ kÔºåÂ¶ÇÊûúÊúÄÂ§ßÁöÑÈ∫¶Á©óÂá∫Áé∞Âú®‰∫ÜÁ¨¨ i ‰∏™‰ΩçÁΩÆÔºàk &lt; i ‚â§ nÔºâÔºåË¶ÅÊÉ≥ËÆ©‰ªñÊúâÂπ∏Ê≠£Â•ΩË¢´ÈÄâ‰∏≠ÔºåÂ∞±ÂøÖÈ°ªÂæóÊª°Ë∂≥Ââç i - 1 ‰∏™È∫¶Á©ó‰∏≠ÁöÑÊúÄÂ•ΩÁöÑÈ∫¶Á©óÂú®Ââç k ‰∏™È∫¶Á©óÈáåÔºåËøôÊúâ k / (i - 1) ÁöÑÂèØËÉΩ„ÄÇËÄÉËôëÊâÄÊúâÂèØËÉΩÁöÑ iÔºåÊàë‰ª¨‰æøÂæóÂà∞‰∫ÜÂâç k ‰∏™È∫¶Á©ó‰Ωú‰∏∫ÂèÇËÄÉÔºåËÉΩÈÄâ‰∏≠ÊúÄÂ§ßÈ∫¶Á©óÁöÑÊÄªÊ¶ÇÁéá P(k)Ôºö ËÆæ k / n = xÔºåÂπ∂‰∏îÂÅáËÆæ n ÂÖÖÂàÜÂ§ßÔºåÂàô‰∏äËø∞ÂÖ¨ÂºèÂèØ‰ª•Êîπ‰∏∫Ôºö ÂØπ x¬∑ln(x) Ê±ÇÂØºÔºåÂπ∂‰ª§Ëøô‰∏™ÂØºÊï∞‰∏∫ 0ÔºåÂèØ‰ª•Ëß£Âá∫ x ÁöÑÊúÄ‰ºòÂÄºÔºåÂÆÉÂ∞±ÊòØÊ¨ßÊãâÁ†îÁ©∂ÁöÑÁ•ûÁßòÂ∏∏Êï∞ÁöÑÂÄíÊï∞ 1 / e. ÊâÄ‰ª• k = n / e. Â¶ÇÊûú‰Ω†ÊÉ≥ÊëòÂèñÊúÄÂ§ßÁöÑÈ∫¶Á©óÔºåÂÅáËÆæÊúâ n ‰∏™È∫¶Á©óÔºå‰Ω†Â∫îËØ•ÂÖàÂ∞ÜÂâç n / e ‰∏™È∫¶Á©ó‰Ωú‰∏∫ÂèÇËÄÉÔºåÁÑ∂ÂêéÂÜç k + 1 ‰∏™È∫¶Á©óÂºÄÂßãÈÄâÊã©ÊØîÂâçÈù¢ k ‰∏™ÊúÄÂ§ßÁöÑÈ∫¶Á©óÂç≥ÂèØ„ÄÇ e = 2.718281828459 1 / e = 0.36787944117144 ÂÖ∂‰ªñ‰æãÂ≠ê‰∏Ä„ÄÅ‰∏ÄÊ•ºÂà∞ÂçÅÊ•ºÁöÑÊØèÂ±ÇÁîµÊ¢ØÈó®Âè£ÈÉΩÊîæÁùÄ‰∏ÄÈ¢óÈíªÁü≥ÔºåÈíªÁü≥Â§ßÂ∞è‰∏ç‰∏Ä„ÄÇ‰Ω†‰πòÂùêÁîµÊ¢Ø‰ªé‰∏ÄÊ•ºÂà∞ÂçÅÊ•ºÔºåÊØèÂ±ÇÊ•ºÁîµÊ¢ØÈó®ÈÉΩ‰ºöÊâìÂºÄ‰∏ÄÊ¨°ÔºåÂè™ËÉΩÊãø‰∏ÄÊ¨°ÈíªÁü≥ÔºåÈóÆÊÄéÊ†∑ÊâçËÉΩÊãøÂà∞ÊúÄÂ§ßÁöÑ‰∏ÄÈ¢ó„ÄÇ È¶ñÂÖàÔºåËøô‰∏™È¢òÁõÆËØ¥ÁöÑÔºåÂπ∂‰∏çËÉΩÂÆåÂÖ®ÊãøÂà∞ÊúÄÂ§ßÁöÑÈíªÁü≥„ÄÇ‰ΩÜÂèØ‰ª•‰øùËØÅÊãøÂà∞ÊúÄÂ§ßÈíªÁü≥ÁöÑÊ¶ÇÁéáÊúÄÂ§ß„ÄÇ10 / e = 3.67ÔºåÂêë‰∏äÂèñÊï¥Âæó 4„ÄÇÂâçÂõõÂ±ÇÁöÜ‰∏çÂèñÔºåÂè™ËÆ∞‰∏ãÊúÄÂ§ßÁöÑ„ÄÇÂêéÈù¢ÈÅáÂà∞ÁöÑÔºåÂè™Ë¶ÅÊØîÂâçÈù¢ÊúÄÂ§ßÁöÑËøòÂ§ßÔºåÂèñ‰πãÂç≥ÂèØ„ÄÇ ‰∫å„ÄÅÁßò‰π¶ÈóÆÈ¢ò„ÄÇÂú®Êú∫ÁéáÂèäÂçöÂºàËÆ∫‰∏äÔºåÁßò‰π¶ÈóÆÈ¢òÔºàÁ±ª‰ººÂêçÁß∞ÊúâÁõ∏‰∫≤ÈóÆÈ¢ò„ÄÅÊ≠¢Ê≠•ÈóÆÈ¢ò„ÄÅËßÅÂ•ΩÂ∞±Êî∂ÈóÆÈ¢ò„ÄÅËãè‰∏πÁöÑÂ´ÅÂ¶ÜÈóÆÈ¢ò„ÄÅÊåëÂâîÁöÑÊ±ÇÂ©öËÄÖÈóÆÈ¢òÁ≠â) ÂÜÖÂÆπÊòØËøôÊ†∑ÁöÑÔºö Ë¶ÅËÅòËØ∑‰∏ÄÂêçÁßò‰π¶ÔºåÊúâ n ‰∫∫Êù•Èù¢ËØï„ÄÇÊØèÊ¨°Èù¢ËØï‰∏Ä‰∫∫ÔºåÈù¢ËØïËøáÂêé‰æøË¶ÅÂç≥Êó∂ÂÜ≥ÂÆöËÅò‰∏çËÅò‰ªñÔºåÂ¶ÇÊûúÂΩìÊó∂ÂÜ≥ÂÆö‰∏çËÅò‰ªñÔºå‰ªñ‰æø‰∏ç‰ºöÂõûÊù•„ÄÇÈù¢ËØïÊó∂ÊÄªËÉΩÊ∏ÖÊ•ö‰∫ÜËß£Ê±ÇËÅåËÄÖÁöÑÈÄÇÂêàÁ®ãÂ∫¶ÔºåÂπ∂ËÉΩÂíå‰πãÂâçÁöÑÊØè‰∏™‰∫∫‰ΩúÊØîËæÉ„ÄÇÈóÆÂá≠‰ªÄ‰πàÁ≠ñÁï•ÔºåÊâç‰ΩøÈÄâÂæóÂà∞ÊúÄÈÄÇÂêàÊãÖ‰ªªÁßò‰π¶ÁöÑ‰∫∫ÁöÑÊú∫ÁéáÊúÄÂ§ßÔºü References È∫¶Á©óÁêÜËÆ∫ÔºåÂèàÂêç‚ÄúÁßò‰π¶ÈóÆÈ¢ò‚Äù (1/e Â§Ñ‰∏∫ÊúÄ‰ºòÂàÜÂâ≤ÁÇπ), http://geek.csdn.net/news/detail/231497","tags":[]},{"title":"Why Functional Programming?","date":"2017-08-17T13:15:35.000Z","path":"2017/08/17/Why-functional-programming/","text":"Why Static Type? ÊÄßËÉΩ - ÊñπÊ≥ïË∞ÉÁî®ÈÄüÂ∫¶Êõ¥Âø´ÔºåÂõ†‰∏∫‰∏çÈúÄË¶ÅÂú®ËøêË°åÊó∂ÊâçÊù•Âà§Êñ≠Ë∞ÉÁî®ÁöÑÊòØÂì™‰∏™ÊñπÊ≥ï„ÄÇ ÂèØÈù†ÊÄß - ÁºñËØëÂô®È™åËØÅ‰∫ÜÁ®ãÂ∫èÁöÑÊ≠£Á°ÆÊÄßÔºåÂõ†ËÄåËøêË°åÊó∂Â¥©Ê∫ÉÁöÑÊ¶ÇÁéáÊõ¥‰Ωé„ÄÇ ÂèØÁª¥Êä§ÊÄß - ÈôåÁîü‰ª£Á†ÅÊõ¥ÂÆπÊòìÁª¥Êä§ÔºåÂõ†‰∏∫‰Ω†ÂèØ‰ª•ÁúãÂà∞‰ª£Á†Å‰∏≠Áî®Âà∞ÁöÑÂØπË±°ÁöÑÁ±ªÂûã„ÄÇ Â∑•ÂÖ∑ÊîØÊåÅ - ÈùôÊÄÅÁ±ªÂûã‰Ωø IDE ËÉΩÊèê‰æõÂèØÈù†ÁöÑÈáçÊûÑ„ÄÅÁ≤æÁ°ÆÁöÑ‰ª£Á†ÅË°•ÂÖ®‰ª•ÂèäÂÖ∂‰ªñÁâπÊÄß„ÄÇ Benefit of Functional Programming Â§¥Á≠âÂáΩÊï∞ - ÊääÂáΩÊï∞Ôºà‰∏ÄÂ∞èÊÆµË°å‰∏∫ÔºâÂΩì‰ΩúÂÄº‰ΩøÁî®ÔºåÂèØ‰ª•Áî®ÂèòÈáè‰øùÂ≠òÂÆÉÔºåÊääÂÆÉÂΩì‰ΩúÂèÇÊï∞‰º†ÈÄíÔºåÊàñËÄÖÂΩì‰ΩúÂÖ∂‰ªñÂáΩÊï∞ÁöÑËøîÂõûÂÄº„ÄÇ ‰∏çÂèØÂèòÊÄß - ‰ΩøÁî®‰∏çÂèØÂèòÂØπË±°ÔºåËøô‰øùËØÅ‰∫ÜÂÆÉ‰ª¨ÁöÑÁä∂ÊÄÅÂú®ÂÖ∂ÂàõÂª∫‰πãÂêé‰∏çËÉΩÂÜçÂèòÂåñ„ÄÇ Êó†ÂâØ‰ΩúÁî® - ‰ΩøÁî®ÁöÑÊòØÁ∫ØÂáΩÊï∞„ÄÇÊ≠§Á±ªÂáΩÊï∞Âú®ËæìÂÖ•Áõ∏ÂêåÊó∂‰ºö‰∫ßÁîüÂêåÊ†∑ÁöÑÁªìÊûúÔºåÂπ∂‰∏î‰∏ç‰ºö‰øÆÊîπÂÖ∂‰ªñÂØπË±°ÁöÑÁä∂ÊÄÅÔºå‰πü‰∏ç‰ºöÂíåÂ§ñÈù¢ÁöÑ‰∏ñÁïå‰∫§‰∫í„ÄÇ ÁÆÄÊ¥Å ÂáΩÊï∞ÂºèÈ£éÊ†ºÁöÑ‰ª£Á†Å ÊØîÁõ∏Â∫îÁöÑÂëΩ‰ª§ÂºèÈ£éÊ†ºÁöÑ‰ª£Á†ÅÊõ¥‰ºòÈõÖ„ÄÅÊõ¥ÁÆÄÁªÉÔºåÂõ†‰∏∫ÊääÂáΩÊï∞ÂΩì‰ΩúÂÄºÂèØ‰ª•ËÆ©‰Ω†Ëé∑ÂæóÊõ¥Âº∫Â§ßÁöÑÊäΩË±°ËÉΩÂäõÔºå‰ªéËÄåÈÅøÂÖçÈáçÂ§ç‰ª£Á†Å„ÄÇ ÂÅáËÆæ‰Ω†Êúâ‰∏§ÊÆµÁ±ª‰ººÁöÑ‰ª£Á†ÅÔºåÂÆûÁé∞Áõ∏‰ººÁöÑ‰ªªÂä°‰ΩÜÂÖ∑‰ΩìÁªÜËäÇÁï•Êúâ‰∏çÂêåÔºåÂèØ‰ª•ËΩªÊòìÂú∞Â∞ÜËøôÊÆµÈÄªËæë‰∏≠ÂÖ¨ÂÖ±ÁöÑÈÉ®ÂàÜÊèêÂèñÂà∞‰∏Ä‰∏™ÂáΩÊï∞‰∏≠ÔºåÂπ∂Â∞ÜÂÖ∂‰ªñ‰∏çÂêåÁöÑÈÉ®ÂàÜ‰Ωú‰∏∫ÂèÇÊï∞‰º†ÈÄíÁªôÂÆÉ„ÄÇËøô‰∫õÂèÇÊï∞Êú¨Ë∫´‰πüÊòØÂáΩÊï∞Ôºå‰ΩÜ‰Ω†ÂèØ‰ª•‰ΩøÁî®‰∏ÄÁßçÁÆÄÊ¥ÅÁöÑËØ≠Ê≥ïÊù•Ë°®Á§∫Ëøô‰∫õÂåøÂêçÂáΩÊï∞ÔºåË¢´Áß∞‰Ωú lambda Ë°®ËææÂºè„ÄÇ Â§öÁ∫øÁ®ãÂÆâÂÖ® Â§öÁ∫øÁ®ãÁ®ãÂ∫è‰∏≠ÊúÄÂ§ßÁöÑÈîôËØØÊù•Ê∫ê‰πã‰∏ÄÂ∞±ÊòØÔºåÂú®Ê≤°ÊúâÈááÁî®ÈÄÇÂΩìÂêåÊ≠•Êú∫Âà∂ÁöÑÊÉÖÂÜµ‰∏ãÔºåÂú®‰∏çÂêåÁöÑÁ∫øÁ®ã‰∏ä‰øÆÊîπÂêå‰∏Ä‰ªΩÊï∞ÊçÆ„ÄÇÂ¶ÇÊûú‰Ω†‰ΩøÁî®ÁöÑÊòØ‰∏çÂèØÂèòÊï∞ÊçÆÁªìÊûÑÂíåÁ∫ØÂáΩÊï∞ÔºåÂ∞±ËÉΩ‰øùËØÅËøôÊ†∑‰∏çÂÆâÂÖ®ÁöÑ‰øÆÊîπÊ†πÊú¨‰∏ç‰ºöÂèëÁîüÔºå‰πüÂ∞±‰∏çÈúÄË¶ÅËÄÉËôë‰∏∫ÂÖ∂ËÆæËÆ°Â§çÊùÇÁöÑÂêåÊ≠•ÊñπÊ°à„ÄÇ ÊµãËØïÊõ¥Âä†ÂÆπÊòì Ê≤°ÊúâÂâØ‰ΩúÁî®ÁöÑÂáΩÊï∞ÂèØ‰ª•Áã¨Á´ãÂú∞ËøõË°åÊµãËØïÔºåÂõ†‰∏∫‰∏çÈúÄË¶ÅÂÜôÂ§ßÈáèÁöÑËÆæÁΩÆ‰ª£Á†ÅÊù•ÊûÑÈÄ†ÂÆÉ‰ª¨ÊâÄ‰æùËµñÁöÑÊï¥‰∏™ÁéØÂ¢É„ÄÇ Functional programming, views a program as a mathematical function which is evaluated to produce a result value. That function may call upon nested functions, which in turn may call upon more nested functions. A nested function evaluates to produce a result. From there, that result is passed on to the enclosing function, which uses the nested function values to calculate its own return value. To enable functions to easily pass data to and from other functions, functional programming languages typically define data structures in the most generic possible way, as a collection of (any) things. They also allow functions to be passed to other functions as if they were data parameters. A function in this paradigm is not allowed to produce any side effects such as modifying a global variable that maintains state information. Instead, it is only allowed to receive parameters and perform some operations on them in order to produce its return value. Executing a functional program involves evaluating the outermost function, which in turn causes evaluation of all the nested functions, recursively down to the most basic functions that have no nested functions. Why is functional programming a big deal? Clarity Programming without side effects creates code that is easier to follow - a function is completely described by what goes in and what comes out. A function that produces the right answer today will produce the right answer tomorrow. This creates code that is easier to debug, easier to test, and easier to re-use. Brevity In functional languages, data is implicitly passed from a nested function to its parent function, via a general-purpose collection data type. This makes functional programs much more compact than those of other paradigms, which require substantial ‚Äúhousekeeping‚Äù code to pass data from one function to the next. Efficiency Because functions do not have side effects, operations can be re-ordered or performed in parallel in order to optimize performance, or can be skipped entirely if their result is not used by any other function. References Kotlin Âàù‰ΩìÈ™åÔºö‰∏ªË¶ÅÁâπÂæÅ‰∏éÂ∫îÁî®, http://geek.csdn.net/news/detail/231497 The Rise and Fall of Scala, https://dzone.com/articles/the-rise-and-fall-of-scala","tags":[]},{"title":"ËÇ°Â∏ÇÊäïËµÑ‰∏âË¶ÅÁ¥†","date":"2017-08-04T12:16:44.000Z","path":"2017/08/04/ËÇ°Â∏ÇÊäïËµÑ‰∏âË¶ÅÁ¥†/","text":"‰∏çË¶ÅÂÄüÈí±ÊäïËµÑ Âè™‰π∞ÊúâÈïøÊúüÊäïËµÑ‰ª∑ÂÄºÁöÑÂÖ¨Âè∏ ‰∏çË¶ÅÁî®Áü≠ÊúüÁöÑÈí±Âéª‰π∞ÈïøÁ∫øÁöÑËÇ°Á•®","tags":[]},{"title":"Customisation of Filco Majestouch 2 Mechanical Keyboard","date":"2017-08-01T16:29:45.000Z","path":"2017/08/02/Customisation-of-Filco-Majestouch-2-Mechanical-Keyboard/","text":"A Filco Majestouch 2 Tenkeyless Mechanical Keyboard, with Cherry Brown switches. It has been replaced with GMK Honeywell keycaps from Originative Co. (https://originative.co/products/honeywell) soon after it bought. Replace Filco Majestouch 2‚Äôs with GMK Honeywell keycaps. After joined Massdrop Lambo 80% Anodized Aluminum Case for Filco 87 TKL campaign (https://www.massdrop.com/buy/lambo-80-anodized-aluminum-case-for-filco-87-tkl) After a few months waiting, case delivered in, shipped from USA. Get hands warmed up and dirty. Now, show time.","tags":[]},{"title":"ÊûÅÁÆÄ‰πãÈÅì - The interface ‰∫∫‰∏éÊú∫Âô®ÁöÑÊÄùÊÉ≥‰∫§ÊµÅ","date":"2017-07-16T07:50:43.000Z","path":"2017/07/16/ÊûÅÁÆÄ‰πãÈÅì-The-interface-‰∫∫‰∏éÊú∫Âô®ÁöÑÊÄùÊÉ≥‰∫§ÊµÅ/","text":"Why 60%? GH60 GH60 ÂèØÁºñÁ®ãÈîÆÁõò (http://blog.komar.be/projects/gh60-programmable-keyboard/), it‚Äôs Poker 2 ÈîÆÁõòÁöÑ rip-off„ÄÇÂºÄÊîæÂºèÂÖ¨ÊùøËÆæËÆ°„ÄÇÁîµË∑ØÊùø‰∏≠ÂõΩÂà∂ÈÄ†„ÄÇ‰∏âÂë®ÂâçÔºåÂú® AliExpress (https://www.aliexpress.com/item/Customized-DIY-GH60-Case-Shell-PCB-Plate-Switches-LED-Kit-60-Mechanical-Keyboard-Satan-Poker2-GH/32651474350.html) ‰∏ãÁöÑËÆ¢Âçï„ÄÇ Cherry MX Switch Âæ∑ÂõΩ Cherry Â∑•ÂéÇÁöÑËå∂ËΩ¥„ÄÇÊï≤Ëµ∑ÈîÆÁõòÊù•ÊûÅÊúâÊÆµËêΩÔºåÂ±ÇÊ¨°ÊÑü„ÄÇ iQunix Lambo ÊãÜÊéâÂéüË£ÖÁöÑÂ°ëÊñôÈîÆÁõòÂ£≥„ÄÇÊç¢Ë£Ö iQunix Lambo (https://www.aliexpress.com/item/Iqunix-lambo-60-mechanical-keyboard-anode-alumina-shell-base-gh60-poker2/32677061753.html) ÈìùÂà∂Â§ñÂ£≥„ÄÇ GMK 3Run Keycap Set ÊúÄÂêéÂÜçË£Ö‰∏äÂæ∑ÂõΩ GMK Â∑•ÂéÇÈÄ†ÁöÑ 3Run ABS keycaps Âêé (https://www.massdrop.com/buy/gmk-3run-keycap-set) Ôºå‰∏Ä‰∏™Êã•ÊúâËá™Â∑± signatureÔºå‰ΩìÁé∞‰∏™ÊÄßÔºåÂìÅÂë≥ÁöÑÊú∫Ê¢∞ÈîÆÁõòËØûÁîü‰∫Ü„ÄÇ ÊûÅÁÆÄ‰πãÈÅì / Simplicity","tags":[]},{"title":"IT ÁöÑÁªàÁÇπÊòØËâ∫ÊúØ - The end of IT is Art","date":"2017-07-02T08:26:23.000Z","path":"2017/07/02/The-end-of-IT-is-Art/","text":"Modern, postmodern, and contemporary IT and its history.","tags":[]},{"title":"Ant Colony Optimization (ACO)","date":"2017-06-30T12:46:52.000Z","path":"2017/06/30/Ant-Colony-Optimization-ACO/","text":"Ant Colony Optimization (ACO) for the the Traveling Salesman Problem (TSP). In computer science and operations research, the ant colony optimization algorithm (ACO) is a probabilistic technique for solving computational problems which can be reduced to finding good paths through graphs. ËöÅÁæ§ÁÆóÊ≥ïÊòØ‰∏ÄÁßçÁî®Êù•ÂØªÊâæ‰ºòÂåñË∑ØÂæÑÁöÑÊ¶ÇÁéáÂûãÁÆóÊ≥ï„ÄÇÂÆÉÁî± Marco Dorigo ‰∫é 1992 Âπ¥Âú®‰ªñÁöÑÂçöÂ£´ËÆ∫Êñá‰∏≠ÊèêÂá∫ÔºåÂÖ∂ÁÅµÊÑüÊù•Ê∫ê‰∫éËöÇËöÅÂú®ÂØªÊâæÈ£üÁâ©ËøáÁ®ã‰∏≠ÂèëÁé∞Ë∑ØÂæÑÁöÑË°å‰∏∫„ÄÇËøôÁßçÁÆóÊ≥ïÂÖ∑ÊúâÂàÜÂ∏ÉËÆ°ÁÆó„ÄÅ‰ø°ÊÅØÊ≠£ÂèçÈ¶àÂíåÂêØÂèëÂºèÊêúÁ¥¢ÁöÑÁâπÂæÅÔºåÊú¨Ë¥®‰∏äÊòØËøõÂåñÁÆóÊ≥ï‰∏≠ÁöÑ‰∏ÄÁßçÂêØÂèëÂºèÂÖ®Â±Ä‰ºòÂåñÁÆóÊ≥ï„ÄÇ ËöÅÁæ§Á≥ªÁªü (Ant System Êàñ Ant Colony System) ÊòØÁî±ÊÑèÂ§ßÂà©Â≠¶ËÄÖ Dorigo„ÄÅManiezzo Á≠â‰∫∫‰∫é 20 ‰∏ñÁ∫™ 90 Âπ¥‰ª£È¶ñÂÖàÊèêÂá∫Êù•ÁöÑ„ÄÇ‰ªñ‰ª¨Âú®Á†îÁ©∂ËöÇËöÅËßÖÈ£üÁöÑËøáÁ®ã‰∏≠ÔºåÂèëÁé∞Âçï‰∏™ËöÇËöÅÁöÑË°å‰∏∫ÊØîËæÉÁÆÄÂçïÔºå‰ΩÜÊòØËöÅÁæ§Êï¥‰ΩìÂç¥ÂèØ‰ª•‰ΩìÁé∞‰∏Ä‰∫õÊô∫ËÉΩÁöÑË°å‰∏∫„ÄÇ‰æãÂ¶ÇËöÅÁæ§ÂèØ‰ª•Âú®‰∏çÂêåÁöÑÁéØÂ¢É‰∏ãÔºåÂØªÊâæÊúÄÁü≠Âà∞ËææÈ£üÁâ©Ê∫êÁöÑË∑ØÂæÑ„ÄÇËøôÊòØÂõ†‰∏∫ËöÅÁæ§ÂÜÖÁöÑËöÇËöÅÂèØ‰ª•ÈÄöËøáÊüêÁßç‰ø°ÊÅØÊú∫Âà∂ÂÆûÁé∞‰ø°ÊÅØÁöÑ‰º†ÈÄí„ÄÇÂêéÂèàÁªèËøõ‰∏ÄÊ≠•Á†îÁ©∂ÂèëÁé∞ÔºåËöÇËöÅ‰ºöÂú®ÂÖ∂ÁªèËøáÁöÑË∑ØÂæÑ‰∏äÈáäÊîæ‰∏ÄÁßçÂèØ‰ª•Áß∞‰πã‰∏∫‚Äú‰ø°ÊÅØÁ¥†‚ÄùÁöÑÁâ©Ë¥®ÔºåËöÅÁæ§ÂÜÖÁöÑËöÇËöÅÂØπ‚Äú‰ø°ÊÅØÁ¥†‚ÄùÂÖ∑ÊúâÊÑüÁü•ËÉΩÂäõÔºåÂÆÉ‰ª¨‰ºöÊ≤øÁùÄ‚Äú‰ø°ÊÅØÁ¥†‚ÄùÊµìÂ∫¶ËæÉÈ´òË∑ØÂæÑË°åËµ∞ÔºåËÄåÊØèÂè™Ë∑ØËøáÁöÑËöÇËöÅÈÉΩ‰ºöÂú®Ë∑Ø‰∏äÁïô‰∏ã‚Äú‰ø°ÊÅØÁ¥†‚ÄùÔºåËøôÂ∞±ÂΩ¢Êàê‰∏ÄÁßçÁ±ª‰ººÊ≠£ÂèçÈ¶àÁöÑÊú∫Âà∂ÔºåËøôÊ†∑ÁªèËøá‰∏ÄÊÆµÊó∂Èó¥ÂêéÔºåÊï¥‰∏™ËöÅÁæ§Â∞±‰ºöÊ≤øÁùÄÊúÄÁü≠Ë∑ØÂæÑÂà∞ËææÈ£üÁâ©Ê∫ê‰∫Ü„ÄÇ Â∞ÜËöÅÁæ§ÁÆóÊ≥ïÂ∫îÁî®‰∫éËß£ÂÜ≥‰ºòÂåñÈóÆÈ¢òÁöÑÂü∫Êú¨ÊÄùË∑Ø‰∏∫ÔºöÁî®ËöÇËöÅÁöÑË°åËµ∞Ë∑ØÂæÑË°®Á§∫ÂæÖ‰ºòÂåñÈóÆÈ¢òÁöÑÂèØË°åËß£ÔºåÊï¥‰∏™ËöÇËöÅÁæ§‰ΩìÁöÑÊâÄÊúâË∑ØÂæÑÊûÑÊàêÂæÖ‰ºòÂåñÈóÆÈ¢òÁöÑËß£Á©∫Èó¥„ÄÇË∑ØÂæÑËæÉÁü≠ÁöÑËöÇËöÅÈáäÊîæÁöÑ‰ø°ÊÅØÁ¥†ÈáèËæÉÂ§öÔºåÈöèÁùÄÊó∂Èó¥ÁöÑÊé®ËøõÔºåËæÉÁü≠ÁöÑË∑ØÂæÑ‰∏äÁ¥ØÁßØÁöÑ‰ø°ÊÅØÁ¥†ÊµìÂ∫¶ÈÄêÊ∏êÂ¢ûÈ´òÔºåÈÄâÊã©ËØ•Ë∑ØÂæÑÁöÑËöÇËöÅ‰∏™Êï∞‰πüÊÑàÊù•ÊÑàÂ§ö„ÄÇÊúÄÁªàÔºåÊï¥‰∏™ËöÇËöÅ‰ºöÂú®Ê≠£ÂèçÈ¶àÁöÑ‰ΩúÁî®‰∏ãÈõÜ‰∏≠Âà∞ÊúÄ‰Ω≥ÁöÑË∑ØÂæÑ‰∏äÔºåÊ≠§Êó∂ÂØπÂ∫îÁöÑ‰æøÊòØÂæÖ‰ºòÂåñÈóÆÈ¢òÁöÑÊúÄ‰ºòËß£„ÄÇ ËöÇËöÅÊâæÂà∞ÊúÄÁü≠Ë∑ØÂæÑË¶ÅÂΩíÂäü‰∫é‰ø°ÊÅØÁ¥†ÂíåÁéØÂ¢ÉÔºåÂÅáËÆæÊúâ‰∏§Êù°Ë∑ØÂèØ‰ªéËöÅÁ™ùÈÄöÂêëÈ£üÁâ©ÔºåÂºÄÂßãÊó∂‰∏§Êù°Ë∑Ø‰∏äÁöÑËöÇËöÅÊï∞ÈáèÂ∑Æ‰∏çÂ§öÔºöÂΩìËöÇËöÅÂà∞ËææÁªàÁÇπ‰πãÂêé‰ºöÁ´ãÂç≥ËøîÂõûÔºåË∑ùÁ¶ªÁü≠ÁöÑË∑Ø‰∏äÁöÑËöÇËöÅÂæÄËøî‰∏ÄÊ¨°Êó∂Èó¥Áü≠ÔºåÈáçÂ§çÈ¢ëÁéáÂø´ÔºåÂú®Âçï‰ΩçÊó∂Èó¥ÈáåÂæÄËøîËöÇËöÅÁöÑÊï∞ÁõÆÂ∞±Â§öÔºåÁïô‰∏ãÁöÑ‰ø°ÊÅØÁ¥†‰πüÂ§öÔºå‰ºöÂê∏ÂºïÊõ¥Â§öËöÇËöÅËøáÊù•Ôºå‰ºöÁïô‰∏ãÊõ¥Â§ö‰ø°ÊÅØÁ¥†„ÄÇËÄåË∑ùÁ¶ªÈïøÁöÑË∑ØÊ≠£Áõ∏ÂèçÔºåÂõ†Ê≠§Ë∂äÊù•Ë∂äÂ§öÁöÑËöÇËöÅËÅöÈõÜÂà∞ÊúÄÁü≠Ë∑ØÂæÑ‰∏äÊù•„ÄÇ ËöÇËöÅÂÖ∑ÊúâÁöÑÊô∫ËÉΩË°å‰∏∫ÂæóÁõä‰∫éÂÖ∂ÁÆÄÂçïË°å‰∏∫ËßÑÂàôÔºåËØ•ËßÑÂàôËÆ©ÂÖ∂ÂÖ∑ÊúâÂ§öÊ†∑ÊÄßÂíåÊ≠£ÂèçÈ¶à„ÄÇÂú®ËßÖÈ£üÊó∂ÔºåÂ§öÊ†∑ÊÄß‰ΩøËöÇËöÅ‰∏ç‰ºöËµ∞ËøõÊ≠ªËÉ°ÂêåËÄåÊó†ÈôêÂæ™ÁéØÔºåÊòØ‰∏ÄÁßçÂàõÊñ∞ËÉΩÂäõÔºõÊ≠£ÂèçÈ¶à‰Ωø‰ºòËâØ‰ø°ÊÅØ‰øùÂ≠ò‰∏ãÊù•ÔºåÊòØ‰∏ÄÁßçÂ≠¶‰π†Âº∫ÂåñËÉΩÂäõ„ÄÇ‰∏§ËÄÖÁöÑÂ∑ßÂ¶ôÁªìÂêà‰ΩøÊô∫ËÉΩË°å‰∏∫Ê∂åÁé∞ÔºåÂ¶ÇÊûúÂ§öÊ†∑ÊÄßËøáÂâ©ÔºåÁ≥ªÁªüËøá‰∫éÊ¥ªË∑ÉÔºå‰ºöÂØºËá¥ËøáÂ§öÁöÑÈöèÊú∫ËøêÂä®ÔºåÈô∑ÂÖ•Ê∑∑Ê≤åÁä∂ÊÄÅÔºõÂ¶ÇÊûúÂ§öÊ†∑ÊÄß‰∏çÂ§üÔºåÊ≠£ÂèçÈ¶àËøáÂº∫Ôºå‰ºöÂØºËá¥ÂÉµÂåñÔºåÂΩìÁéØÂ¢ÉÂèòÂåñÊó∂ËöÅÁæ§‰∏çËÉΩÁõ∏Â∫îË∞ÉÊï¥„ÄÇ ‰∏éÂÖ∂‰ªñ‰ºòÂåñÁÆóÊ≥ïÁõ∏ÊØîÔºåËöÅÁæ§ÁÆóÊ≥ïÂÖ∑Êúâ‰ª•‰∏ãÂá†‰∏™ÁâπÁÇπÔºö (1) ÈááÁî®Ê≠£ÂèçÈ¶àÊú∫Âà∂Ôºå‰ΩøÂæóÊêúÁ¥¢ËøáÁ®ã‰∏çÊñ≠Êî∂ÊïõÔºåÊúÄÁªàÈÄºËøëÊúÄ‰ºòËß£„ÄÇ(2) ÊØè‰∏™‰∏™‰ΩìÂèØ‰ª•ÈÄöËøáÈáäÊîæ‰ø°ÊÅØÁ¥†Êù•ÊîπÂèòÂë®Âõ¥ÁöÑÁéØÂ¢ÉÔºå‰∏îÊØè‰∏™‰∏™‰ΩìËÉΩÂ§üÊÑüÁü•Âë®Âõ¥ÁéØÂ¢ÉÁöÑÂÆûÊó∂ÂèòÂåñÔºå‰∏™‰ΩìÈó¥ÈÄöËøáÁéØÂ¢ÉËøõË°åÈó¥Êé•Âú∞ÈÄöËÆØ„ÄÇ(3) ÊêúÁ¥¢ËøáÁ®ãÈááÁî®ÂàÜÂ∏ÉÂºèËÆ°ÁÆóÊñπÂºèÔºåÂ§ö‰∏™‰∏™‰ΩìÂêåÊó∂ËøõË°åÂπ∂Ë°åËÆ°ÁÆóÔºåÂ§ßÂ§ßÊèêÈ´ò‰∫ÜÁÆóÊ≥ïÁöÑËÆ°ÁÆóËÉΩÂäõÂíåËøêË°åÊïàÁéá„ÄÇ(4) ÂêØÂèëÂºèÁöÑÊ¶ÇÁéáÊêúÁ¥¢ÊñπÂºè‰∏çÂÆπÊòìÈô∑ÂÖ•Â±ÄÈÉ®ÊúÄ‰ºòÔºåÊòì‰∫éÂØªÊâæÂà∞ÂÖ®Â±ÄÊúÄ‰ºòËß£„ÄÇ ËØ•ÁÆóÊ≥ïÂ∫îÁî®‰∫éÂÖ∂‰ªñÁªÑÂêà‰ºòÂåñÈóÆÈ¢òÔºåÂ¶ÇÊóÖË°åÂïÜÈóÆÈ¢ò„ÄÅÊåáÊ¥æÈóÆÈ¢ò„ÄÅJob Shop Ë∞ÉÂ∫¶ÈóÆÈ¢ò„ÄÅËΩ¶ËæÜË∑ØÁî±ÈóÆÈ¢ò„ÄÅÂõæÁùÄËâ≤ÈóÆÈ¢òÂíåÁΩëÁªúË∑ØÁî±ÈóÆÈ¢òÁ≠â„ÄÇÊúÄËøëÂá†Âπ¥ÔºåËØ•ÁÆóÊ≥ïÂú®ÁΩëÁªúË∑ØÁî±‰∏≠ÁöÑÂ∫îÁî®ÂèóÂà∞Ë∂äÊù•Ë∂äÂ§öÂ≠¶ËÄÖÁöÑÂÖ≥Ê≥®ÔºåÂπ∂ÊèêÂá∫‰∫Ü‰∏Ä‰∫õÊñ∞ÁöÑÂü∫‰∫éËöÇËöÅÁÆóÊ≥ïÁöÑË∑ØÁî±ÁÆóÊ≥ï„ÄÇÂêå‰º†ÁªüÁöÑË∑ØÁî±ÁÆóÊ≥ïÁõ∏ÊØîËæÉÔºåËØ•ÁÆóÊ≥ïÂú®ÁΩëÁªúË∑ØÁî±‰∏≠ÂÖ∑Êúâ‰ø°ÊÅØÂàÜÂ∏ÉÂºèÊÄß„ÄÅÂä®ÊÄÅÊÄß„ÄÅÈöèÊú∫ÊÄßÂíåÂºÇÊ≠•ÊÄßÁ≠âÁâπÁÇπÔºåËÄåËøô‰∫õÁâπÁÇπÊ≠£Â•ΩËÉΩÊª°Ë∂≥ÁΩëÁªúË∑ØÁî±ÁöÑÈúÄË¶Å„ÄÇ VisualizationA visual demo of Ant Colony Optimisation written in Javascript (ES6): Another visual demo of Ant Colony Optimisation: References Ant colony optimization algorithms, https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms Visualisation of Ant Colony Optimisation, http://poolik.github.io/visual-aco/#/visualisation A visual demo of Ant Colony Optimisation applied to TSP written in Javascript, http://gordyd.github.io/js-aco/ ÁôæÂ∫¶ÁôæÁßë - ËöÅÁæ§ÁÆóÊ≥ï, https://wapbaike.baidu.com/item/%E8%9A%81%E7%BE%A4%E7%AE%97%E6%B3%95","tags":[]},{"title":"Influence Without Authority","date":"2017-03-12T11:31:23.000Z","path":"2017/03/12/Influence-Without-Authority/","text":"The Psychology of Persuasion.","tags":[]},{"title":"Spring Data - powerful and succinct abstraction","date":"2017-03-03T23:05:30.000Z","path":"2017/03/04/Spring-Data-powerful-and-succinct-abstraction/","text":"Database tier definition Database tables, indexes and foreign keys defined in Liquibase configuration: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122databaseChangeLog: - changeSet: id: 1 author: Terrence Miao changes: - createTable: tableName: draft_order columns: - column: name: id type: int autoIncrement: true constraints: primaryKey: true nullable: false - column: name: c_number type: varchar(32) constraints: nullable: false - column: name: source_time_in_ms type: bigint constraints: nullable: false - column: name: source_item_id type: varchar(255) constraints: nullable: false - column: name: shipment type: json constraints: nullable: false - column: name: shipment_id type: varchar(255) constraints: nullable: true - column: name: quantity type: int constraints: nullable: false - column: name: source_system type: varchar(255) constraints: nullable: false - column: name: status type: varchar(32) constraints: nullable: false - createIndex: columns: - column: name: source_item_id indexName: idx_source_item_id tableName: draft_order unique: false - createIndex: columns: - column: name: c_number - column: name: source_item_id indexName: idx_c_number_source_item_id tableName: draft_order unique: true - createTable: tableName: draft_order_combined columns: - column: name: id type: int autoIncrement: true constraints: primaryKey: true nullable: false - column: name: combined_id type: varchar(64) constraints: nullable: false - column: name: draft_order_id type: int constraints: nullable: false - addForeignKeyConstraint: baseColumnNames: draft_order_id baseTableName: draft_order_combined constraintName: fk_draft_order_combined_draft_order onDelete: CASCADE onUpdate: RESTRICT referencedColumnNames: id referencedTableName: draft_order - changeSet: id: 2 author: Terrence Miao changes: - addColumn: columns: - column: # For MySQL 5.7.x above, the first TIMESTAMP column in the table gets current timestamp as the default value, likely. So # if an INSERT or UPDATE without supplying a value, the column will get the current timestamp. Any subsequent TIMESTAMP # columns should have a default value explicitly defined. If you have two TIMESTAMP columns and if you don't specify a # default value for the second column, you will get this error while trying to create the table: # ERROR 1067 (42000): Invalid default value for 'COLUMN_NAME' name: date_created type: timestamp(3) constraints: nullable: false - column: name: date_updated type: timestamp(3) defaultValueComputed: LOCALTIMESTAMP(3) constraints: nullable: false tableName: draft_order DAO definition Draft Order 1234567891011121314151617181920212223242526272829303132@Entity@Table(name = \"draft_order\")public class DraftOrder implements Serializable &#123; @Id @GeneratedValue(strategy = GenerationType.AUTO) private Integer id; @Column(name = \"c_number\") private String cNumber; @Column(name = \"source_time_in_ms\") private Long sourceTimeInMs; @Column(name = \"source_item_id\") private String sourceItemId; @Column(name = \"shipment\", columnDefinition = \"json\") private String shipment; @Column(name = \"shipment_id\") private String shipmentId; @Column(name = \"quantity\") private Integer quantity; @Column(name = \"source_system\") private String sourceSystem; @Column(name = \"status\") private String status;&#125; Draft Order Combined 123456789101112131415@Entity@Table(name = \"draft_order_combined\")public class DraftOrderCombined implements Serializable &#123; @Id @GeneratedValue(strategy = GenerationType.AUTO) private Integer id; @Column(name = \"combined_id\") private String combinedId; @OneToOne(cascade = CascadeType.ALL) @JoinColumn(name = \"draft_order_id\") private DraftOrder draftOrder;&#125; An middle Aggregation Object 123456789101112public class CombinedIdSourceTimeInMs &#123; private Long counter; private String combinedId; private Long sourceTimeInMs; public CombinedIdSourceTimeInMs(Long counter, String combinedId, Long sourceTimeInMs) &#123; this.counter = counter; this.combinedId = combinedId; this.sourceTimeInMs = sourceTimeInMs; &#125;&#125; CRUD Repository definition DraftOrderRepository 1234567891011121314public interface DraftOrderRepository extends CrudRepository&lt;DraftOrder, Integer&gt; &#123; List&lt;DraftOrder&gt; findByCNumberAndStatusOrderBySourceTimeInMsDesc(String cNumber, String status, Pageable pageable); List&lt;DraftOrder&gt; findByCNumberAndSourceItemIdIn(String cNumber, List&lt;String&gt; sourceItemIds); DraftOrder findByCNumberAndSourceItemId(String cNumber, String sourceItemId); List&lt;DraftOrder&gt; findByShipmentIdInAndStatusAndSourceSystem(List&lt;String&gt; shipmentIds, String status, String sourceSystem); List&lt;DraftOrder&gt; findByCNumberAndId(String cNumber, Integer id); Long countByCNumberAndStatus(String cNumber, String status);&#125; DraftOrderCombinedRepository 12345678910111213141516171819public interface DraftOrderCombinedRepository extends CrudRepository&lt;DraftOrderCombined, Integer&gt; &#123; String FIND_QUERY = \"SELECT new org.paradise.data.dao.CombinedIdSourceTimeInMs\" + \"(count(doc) as counter, doc.combinedId as combinedId, min(doc.draftOrder.sourceTimeInMs) as sourceTimeInMs) \" + \" FROM DraftOrderCombined doc WHERE doc.draftOrder.cNumber = :cNumber AND doc.draftOrder.status = :status \" + \" GROUP BY combinedId \" + \" ORDER BY sourceTimeInMs DESC\"; String COUNT_QUERY = \"SELECT count(1) FROM \" + \"(SELECT count(1) FROM DraftOrderCombined doc WHERE doc.draftOrder.cNumber = :cNumber AND doc.draftOrder.status = :status\" + \" GROUP BY doc.combinedId)\"; @Query(value = FIND_QUERY, countQuery = COUNT_QUERY) List&lt;CombinedIdSourceTimeInMs&gt; countPerCombinedIdAndSourceTimeInMs(@Param(\"cNumber\") String cNumber, @Param(\"status\") String status, Pageable pageable); List&lt;DraftOrderCombined&gt; findByCombinedIdOrderByDraftOrderDaoSourceTimeInMsDesc(String combinedId);&#125; References Spring Data JPA Reference Documentation, https://docs.spring.io/spring-data/jpa/docs/current/reference/html/","tags":[]},{"title":"SQL script generates random data and insert into MySQL database","date":"2017-03-03T12:02:17.000Z","path":"2017/03/03/SQL-script-generates-random-data-and-insert-into-MySQL-database/","text":"1DROP PROCEDURE InsertRandomRecords; 12345678910111213141516DELIMITER $$CREATE PROCEDURE InsertRandomRecords(IN NumRows INT) BEGIN DECLARE i INT; SET i = 1; START TRANSACTION; WHILE i &lt;= NumRows DO INSERT INTO draftorders.draft_order (c_number, source_time_in_ms, source_item_id, shipment, shipment_id, quantity, source_system, status) VALUES ('C01234567890', RAND()*1000000000, CONCAT('randomSourceRef-', UUID_SHORT()), '&#123;\"to\": &#123;\"name\": \"T T\", \"lines\": [\"Lvl 100\", \"123 smith st\"], \"phone\": \"0356567567\", \"state\": \"VIC\", \"suburb\": \"Greensborough\", \"postcode\": \"3088\", \"business_name\": \"In debt\"&#125;, \"from\": &#123;\"name\": \"Carl Block\", \"lines\": [\"1341 Dandenong Road\"], \"state\": \"VIC\", \"suburb\": \"Geelong\", \"postcode\": \"3220\"&#125;, \"items\": [&#123;\"width\": \"10\", \"height\": \"10\", \"length\": \"10\", \"weight\": \"10\", \"product_id\": \"3D85\", \"item_reference\": \"blocked\", \"authority_to_leave\": true, \"allow_partial_delivery\": true, \"contains_dangerous_goods\": true&#125;], \"shipment_reference\": \"My second shipment ref\", \"customer_reference_1\": \"cr1234\", \"customer_reference_2\": \"cr5678\"&#125;', UUID(), 1, 'EBAY', ELT(1 + FLOOR(RAND()*3), 'DRAFT', 'READY_TO_SHIP', 'SHIPPED')); SET i = i + 1; END WHILE; COMMIT; END$$DELIMITER ; To generate 1,000,000 draft orders: 1CALL InsertRandomRecords(1000000);","tags":[]},{"title":"Set up and run AWS Lambda 'hello' function with serverless","date":"2017-02-26T08:00:26.000Z","path":"2017/02/26/Set-up-and-run-AWS-Lambda-hello-function-with-serverless/","text":"serverlessWith latest Node.js 6.x.x installed, then install serverless globally: 1$ npm install serverless -g AWS LambdaCreate a AWS Lambda skeleton project with serverless: 1234567891011121314$ mkdir serverless-example &amp;&amp; cd $_$ sls create -t aws-nodejsServerless: Generating boilerplate... _______ __| _ .-----.----.--.--.-----.----| .-----.-----.-----.| |___| -__| _| | | -__| _| | -__|__ --|__ --||____ |_____|__| \\___/|_____|__| |__|_____|_____|_____|| | | The Serverless Application Framework| | serverless.com, v1.7.0 -------'Serverless: Successfully generated boilerplate for template: \"aws-nodejs\"Serverless: NOTE: Please update the \"service\" property in serverless.yml with your service name Policies set up for Lambda function For AWS user ‚Äúec2-user‚Äù, now need to have some policies with permissions to let ‚Äúserverless‚Äù create role, Lambda function and deployment it ‚Ä¶ Roles for Lambda function Lambda function role created after Lambda function added and deployed into AWS. DeploymentMake sure AWS environment has been set up, including access key, user, group, policies ‚Ä¶ Pack and deploy Lambda example into AWS: 123456789101112131415161718$ sls deploy -r ap-southeast-2 -s devServerless: Packaging service...Serverless: Uploading CloudFormation file to S3...Serverless: Uploading service .zip file to S3 (583 B)...Serverless: Updating Stack...Serverless: Checking Stack update progress.....................Serverless: Stack update finished...Service Informationsservice: serverless-examplestage: devregion: ap-southeast-2api keys: Noneendpoints: Nonefunctions: serverless-example-dev-hello Lambda ‚Äúhello‚Äù function A ‚Äúhello‚Äù Lambda function has been created in Lambda after it‚Äôs deployed into AWS by ‚Äúserverless‚Äù. Events generated during Lambda function deployment Deployment events generated during Lambda ‚Äúhello‚Äù function deployed into AWS. Add Lambda Trigger on AWS API Gateway Manually create a Lambda Trigger. This time we use AWS API Gateway to trigger / invoke Lambda ‚Äúhello‚Äù function. Exposed Lambda API Gateway After Lambda Trigger created, an exposed RESTful interface for Lambda ‚Äúhello‚Äù function. Say ‚Äúhello‚ÄùSet up AWS API Gateway trigger for Lambda ‚Äúhello‚Äù function. Go to url, e.g.: Function ‚Äúhello‚Äù log: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&#123; \"message\": \"Go Serverless v1.0! Your function executed successfully!\", \"input\": &#123; \"resource\": \"/serverless-example-dev-hello\", \"path\": \"/serverless-example-dev-hello\", \"httpMethod\": \"GET\", \"headers\": &#123; \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch, br\", \"Accept-Language\": \"en-AU,en-GB;q=0.8,en-US;q=0.6,en;q=0.4\", \"CloudFront-Forwarded-Proto\": \"https\", \"CloudFront-Is-Desktop-Viewer\": \"true\", \"CloudFront-Is-Mobile-Viewer\": \"false\", \"CloudFront-Is-SmartTV-Viewer\": \"false\", \"CloudFront-Is-Tablet-Viewer\": \"false\", \"CloudFront-Viewer-Country\": \"AU\", \"Host\": \"b5dyhej16l.execute-api.ap-southeast-2.amazonaws.com\", \"Referer\": \"https://ap-southeast-2.console.aws.amazon.com/lambda/home?region=ap-southeast-2\", \"upgrade-insecure-requests\": \"1\", \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36\", \"Via\": \"2.0 6884828476070d32978b45d03c1cc437.cloudfront.net (CloudFront)\", \"X-Amz-Cf-Id\": \"mvToMffe1AsUJNcMJKUh-Rx26oBJsRBe2n9I1df3xqIAIENPR_ku3A==\", \"X-Amzn-Trace-Id\": \"Root=1-58aae2ff-0b0c5e4059cc97576211ba4a\", \"X-Forwarded-For\": \"101.181.175.227, 54.239.202.65\", \"X-Forwarded-Port\": \"443\", \"X-Forwarded-Proto\": \"https\" &#125;, \"queryStringParameters\": null, \"pathParameters\": null, \"stageVariables\": null, \"requestContext\": &#123; \"accountId\": \"624388274630\", \"resourceId\": \"5jbqsp\", \"stage\": \"prod\", \"requestId\": \"51ba2876-f769-11e6-b507-4b10c8a6886a\", \"identity\": &#123; \"cognitoIdentityPoolId\": null, \"accountId\": null, \"cognitoIdentityId\": null, \"caller\": null, \"apiKey\": null, \"sourceIp\": \"101.181.175.227\", \"accessKey\": null, \"cognitoAuthenticationType\": null, \"cognitoAuthenticationProvider\": null, \"userArn\": null, \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36\", \"user\": null &#125;, \"resourcePath\": \"/serverless-example-dev-hello\", \"httpMethod\": \"GET\", \"apiId\": \"b5dyhej16l\" &#125;, \"body\": null, \"isBase64Encoded\": false &#125;&#125; References serverless framework, https://serverless.com/ Example source code and artefact, https://github.com/TerrenceMiao/AWS/tree/master/serverless-example","tags":[]},{"title":"The State Quadrants - Functional vs. Object Oriented","date":"2017-02-18T12:19:56.000Z","path":"2017/02/18/The-State-Quadrants-Functional-vs-Object-Oriented/","text":"","tags":[]},{"title":"Factorial function implementation in Java 8","date":"2017-02-18T11:15:33.000Z","path":"2017/02/18/Factorial-function-implementation-in-Java-8/","text":"Implementation1234567891011121314151617181920212223242526package org.paradise.function;import java.util.HashMap;import java.util.Map;import java.util.function.Function;/** * Created by terrence on 12/12/2016. */public final class FactorialFunction &#123; public static final Map&lt;Integer, Long&gt; FACTORIAL_MAP = new HashMap&lt;&gt;(); public static final Function&lt;Integer, Long&gt; FACTORIAL = (x) -&gt; FACTORIAL_MAP.computeIfAbsent(x, n -&gt; n * FactorialFunction.FACTORIAL.apply(n - 1)); static &#123; FACTORIAL_MAP.put(1, 1L); // FACTORIAL(1) &#125; private FactorialFunction() &#123; &#125;&#125; Unit test123456789101112131415161718192021package org.paradise.function;import org.junit.Test;import static org.junit.Assert.assertEquals;/** * Created by terrence on 12/12/2016. */public class FactorialFunctionTest &#123; @Test public void testFactorialFunction() throws Exception &#123; assertEquals(\"Incorrect result\", Long.valueOf(1), FactorialFunction.FACTORIAL.apply(1)); assertEquals(\"Incorrect result\", Long.valueOf(2), FactorialFunction.FACTORIAL.apply(2)); assertEquals(\"Incorrect result\", Long.valueOf(3628800), FactorialFunction.FACTORIAL.apply(10)); &#125;&#125;","tags":[]},{"title":"Fibonacci function implementation in Java 8","date":"2017-02-18T11:09:56.000Z","path":"2017/02/18/Fibonacci-function-implementation-in-Java-8/","text":"Implementation123456789101112131415161718192021222324252627package org.paradise.function;import java.util.HashMap;import java.util.Map;import java.util.function.Function;/** * Created by terrence on 12/12/2016. */public final class FibonacciFunction &#123; public static final Map&lt;Integer, Long&gt; FIBONACCI_MAP = new HashMap&lt;&gt;(); public static final Function&lt;Integer, Long&gt; FIBONACCI = (x) -&gt; FIBONACCI_MAP.computeIfAbsent(x, n -&gt; FibonacciFunction.FIBONACCI.apply(n - 2) + FibonacciFunction.FIBONACCI.apply(n - 1)); static &#123; FIBONACCI_MAP.put(0, 0L); // FIBONACCI(0) FIBONACCI_MAP.put(1, 1L); // FIBONACCI(1) &#125; private FibonacciFunction() &#123; &#125;&#125; Unit test12345678910111213141516171819202122232425262728293031package org.paradise.function;import org.junit.Test;import static org.junit.Assert.assertEquals;/** * Created by terrence on 12/12/2016. */public class FibonacciFunctionTest &#123; @Test public void testFibonacciFunction() throws Exception &#123; assertEquals(\"Incorrect result\", Long.valueOf(0), FibonacciFunction.FIBONACCI.apply(0)); assertEquals(\"Incorrect result\", Long.valueOf(1), FibonacciFunction.FIBONACCI.apply(1)); assertEquals(\"Incorrect result\", Long.valueOf(1), FibonacciFunction.FIBONACCI.apply(2)); assertEquals(\"Incorrect result\", Long.valueOf(2), FibonacciFunction.FIBONACCI.apply(3)); assertEquals(\"Incorrect result\", Long.valueOf(3), FibonacciFunction.FIBONACCI.apply(4)); assertEquals(\"Incorrect result\", Long.valueOf(5), FibonacciFunction.FIBONACCI.apply(5)); assertEquals(\"Incorrect result\", Long.valueOf(8), FibonacciFunction.FIBONACCI.apply(6)); assertEquals(\"Incorrect result\", Long.valueOf(13), FibonacciFunction.FIBONACCI.apply(7)); assertEquals(\"Incorrect result\", Long.valueOf(21), FibonacciFunction.FIBONACCI.apply(8)); assertEquals(\"Incorrect result\", Long.valueOf(34), FibonacciFunction.FIBONACCI.apply(9)); assertEquals(\"Incorrect result\", Long.valueOf(55), FibonacciFunction.FIBONACCI.apply(10)); assertEquals(\"Incorrect result\", Long.valueOf(12586269025L), FibonacciFunction.FIBONACCI.apply(50)); &#125;&#125;","tags":[]},{"title":"Remote debugging Java applications run on Tomcat","date":"2017-02-11T02:52:26.000Z","path":"2017/02/11/Remote-debugging-Java-applications-run-on-Tomcat/","text":"Enable JVM option to attach a remote debugger: 1$ export JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 ‚Äúsuspend‚Äù set to ‚Äúy‚Äù is to let remote debugger start loading the application. Now, start running Tomcat. JVM debugging port is bound on port 5005i on the machine runs on Tomcat. Next, set up SSH tunnel mirror remotei host (ip-10-213-79-77.ap-southeast-2.compute.internal) 5005 port to localhost on port 5005. For example: 1$ ssh -L 5005:ip-10-213-79-77.ap-southeast-2.compute.internal:5005 -l ec2-user ip-10-213-79-77.ap-southeast-2.compute.internal You can start remote debugging in IDE like IntelliJ and debug the code since.","tags":[]},{"title":"Web Components are coming","date":"2017-02-01T12:56:19.000Z","path":"2017/02/01/Web-Components-are-coming/","text":"AngularJS is going to continue to succeed for some time. But change is inevitable. Web Components are coming. WebComponents create the ability to do all the sorts of markup-driven programming like AngularJS, ReactJS, but less ecosystem dependent. Because DOM is integration point for all the kinds of JavaScript frameworks. Web Components make it MUCH easier to interoperate between components. The future isn‚Äôt here yet, but it will change fundamental assumptions about how a JavaScript framework should act and what it should be responsible for. Those shifts in assumptions frequently cause frameworks will drop out of the ecosystem quickly than expected. URL: https://www.webcomponents.org/","tags":[]},{"title":"Perfection","date":"2017-02-01T12:35:24.000Z","path":"2017/02/01/Perfection/","text":"Il semble que la perfection soit atteinte non quand il n‚Äôy a plus rien √† ajouter, mais quand il n‚Äôy a plus rien √† retrancher. 1- Antoine de saint Exupery It seems that perfection is attained not when there is nothing more to add, but when there is nothing more to remove.","tags":[]},{"title":"Setup Docker Private Registry in Nexus Repository OSS 3.x.x","date":"2017-01-28T03:37:50.000Z","path":"2017/01/28/Setup-Docker-Private-Registry-in-Nexus-Repository-OSS-3-x-x/","text":"Make sure Nexus Repository has been setup with Self Signed certificate, certificate for host/server e.g. ‚Äúsilencer.bigpond‚Äù. The following instructions have been successfully tested in Nexus version 3.2.0-01. Create Docker Hub repository in Nexus Create Docker Internal repository in Nexus Create Docker Group repository in Nexus Run Docker with Docker NativeAdd Docker Private Registry in Insecure Registries Now this approach supports docker pull and docker push. Work around with ‚Äúx509: certificate signed by unknown authority‚Äú error by adding ‚Äú‚Äìdisable-content-trust‚Äù option on docker push command line if Docker doesn‚Äôt accept Self-Signed certificate. Add Docker Private Registry server‚Äôs certificate into Docker Virtual Machine CA list1234567891011121314151617181920ùúÜ keytool -printcert -rfc -sslserver silencer.bigpond:8444 &gt; silencer.bigpond.pem-----BEGIN CERTIFICATE-----MIIDkDCCAnigAwIBAgIEAqo9kTANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJBVTEUMBIGA1UECBMLVW5zcGVjaWZpZWQxFDASBgNVBAcTC1Vuc3BlY2lmaWVkMREwDwYDVQQKEwhTb25hdHlwZTESMBAGA1UEAwwJKi5iaWdwb25kMB4XDTE2MDYxMjExMzY1M1oXDTMwMDIxOTExMzY1M1owYDELMAkGA1UEBhMCQVUxFDASBgNVBAgTC1Vuc3BlY2lmaWVkMRQwEgYDVQQHEwtVbnNwZWNpZmllZDERMA8GA1UEChMIU29uYXR5cGUxEjAQBgNVBAMMCSouYmlncG9uZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJNO5mDpBDQQ8n4t0P2z8ChWzIFQ3Pf+5U8x6P17O3WtKTfsbuRYobHYmas5tVdVdnLIqpb4JV9DWIoS+CNG6cRLy3GIWWT7CbjsrpDlOTArslvk3KuzQ0dsZNflRfdd+ughI2LczehEfhzPJzA+ZU8Am1CadM+VUa+T6MilFQMXpWfjND6BNnV+qr/MX1QQfSjiWt7oWBex0BB0VPv9ooBZUqO+8jk5fUY8wEIa/kqLUqIKGxIUx9BMQBwBJwDKZmK93DXSPvAFYbKQjj6/nbV9R1VWmR7fhkLG+Ixlx5ld2dxv4+xvXmS8s4NanBtKZWUfEYVPp7gUF9HZoW9A1jcCAwEAAaNSMFAwDAYDVR0TBAUwAwEB/zAhBgNVHREEGjAYghBzaWxlbmNlci5iaWdwb25khwQKAAAJMB0GA1UdDgQWBBQV3WTuC+GI8lHtH0uL+kYqTG+vczANBgkqhkiG9w0BAQsFAAOCAQEAUwL+qnKVT0ENZEZnDjB+cjPfvkeWOD05PrGUOn4YB4vllq2S6Cgfm0OaZ+vMt3KMXPf9pIgZ797jdPhOP/s5IVJItldky+u/Hk9gNtUwEjpgl0MjhSm/PqxR5XoJdkYlvUdtq+PTrU5RU3v3GImeOmlI4mM5PaZ6OT8HC5VMX5s9RawBr/5EbJHRM7EN8r3g4Y/2109YoHoiWAhnN6TC3RhmCoQqGOiPsS732KHUz3KqXVbq9VTRdA3dXqFj1cUSet1TXTPisaiehffvbqYm2vrJ5WYgqCwb8TadDg66TToj080qvA8cXAF7qlA8pOImrbVOs7tdANSAs+AOcqCkiA==-----END CERTIFICATE----- 1ùúÜ screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty Inside Docker Virtual Machine, follow these steps: 123$ sudo cat silencer.bigpond.pem &gt;&gt; /etc/ssl/certs/ca-certificates.crt$ sudo /etc/init.d/docker restart$ tail -f /var/lib/boot2docker/docker.log With Docker ToolboxAdd Docker Private Registry server‚Äôs certificate into Docker Virtual Machine CA list12ùúÜ keytool -printcert -rfc -sslserver silencer.bigpond:8444 &gt; silencer.bigpond.pemùúÜ docker-machine ssh default Inside Docker Virtual Machine, follow these steps:123$ sudo cat silencer.bigpond.pem &gt;&gt; /etc/ssl/certs/ca-certificates.crt$ sudo /etc/init.d/docker restart$ tail -f /var/lib/boot2docker/docker.log Press Ctrl + D and Ctrl + D to exist SCREEN program. Type ‚Äúscreen -r‚Äù to re-entry SCREEN program. Additional CertificatesDownload 3rd party Repository server‚Äôs certificate. Use tool like KeyStore Explorer to add 3rd party server certificates into existing keystore.jks. Due to a certificate chain that does not exist within the existing Java truststore, Java does not trust the certificate and fails to connect to the application. Test1234ùúÜ docker login silencer.bigpond:18443Username: adminPassword: admin123Login Succeeded 12ùúÜ docker search silencer.bigpond:18443/tomcatùúÜ docker pull silencer.bigpond:18443/jtech/tomcat:latest 1234ùúÜ docker login silencer.bigpond:18444Username: adminPassword: admin123Login Succeeded 123ùúÜ docker build -t jtech/camel-spring:latest .ùúÜ docker tag jtech/camel-spring silencer.bigpond:18444/jtech/camel-spring:latestùúÜ docker push silencer.bigpond:18444/jtech/camel-spring:latest 1ùúÜ docker push --disable-content-trust silencer.bigpond:18444/jtech/camel-spring:latest Note Due to Docker Virtual Machine is immutable, the CA certificate added change made inside VM is ephemeral, and lost after VM is restarted Docker Private Registry ONLY supports HTTPS, NOT HTTP Nexus repository MUST register and use server certificate for host e.g. ‚Äúsilencer.bigpond‚Äù, NOT ‚Äúlocalhost.bigpond‚Äù to run Docker Private Registry Try with ‚Äú‚Äìdisable-content-trust‚Äù if error like ‚ÄúGet https://silencer.gateway:18444/v1/_ping: x509: certificate signed by unknown authority‚Äù Reference Private Registry for Docker, https://books.sonatype.com/nexus-book/3.0/reference/docker.html Using Self-Signed Certificates with Nexus Repository Manager and Docker Daemon, https://support.sonatype.com/hc/en-us/articles/217542177 SSL Certificate Guide, https://support.sonatype.com/hc/en-us/articles/213465768 Setup HTTPS access Nexus Repository, https://github.com/TerrenceMiao/nexus/wiki/Setup-HTTPS-access-Nexus-Repository-Manager-OSS-3.xx Add Self Signed CA certificate into Docker‚Äôs CA list, https://github.com/klippx/inject-docker-certs Adding Self Signed certificate in Docker Native for Mac, https://forums.docker.com/t/adding-self-signed-certificates/9761","tags":[]},{"title":"Setup HTTPS access in Nexus Repository Manager OSS 3.x.x","date":"2017-01-28T02:20:47.000Z","path":"2017/01/28/Setup-HTTPS-access-in-Nexus-Repository-Manager-OSS-3-x-x/","text":"Generate Self Signed certificateOn a Mac at home, with Bigpond internet access. Full host name is silencer.bigpond and IP Address is 10.0.0.9. 12terrence@Silencer /Applications/nexus-3.0.0-03/etc/ssl00:13:05 ùúÜ keytool -genkeypair -keystore keystore.jks -storepass changeit -keypass changeit -alias jetty -keyalg RSA -keysize 2048 -validity 5000 -dname \"CN=*.bigpond, O=Sonatype, L=Unspecified, ST=Unspecified, C=AU\" -ext \"SAN=DNS:silencer.bigpond,IP:10.0.0.9\" -ext \"BC=ca:true\" OR run ‚Äúnslookup 127.0.0.1‚Äù return full domain hostname e.g. ‚Äúlocalhost.bigpond‚Äù. 12terrence@Silencer /Applications/nexus-3.0.0-03/etc/ssl00:13:05 ùúÜ keytool -genkeypair -keystore keystore.jks -storepass changeit -keypass changeit -alias jetty -keyalg RSA -keysize 2048 -validity 5000 -dname \"CN=*.bigpond, O=Sonatype, L=Unspecified, ST=Unspecified, C=AU\" -ext \"SAN=DNS:localhost.bigpond,IP:127.0.0.1\" -ext \"BC=ca:true\" Now, with latest Nexus (version 3.2.0-01) you can use self-signed server certificate without specifying IP address. 12terrence@Silencer /usr/local/nexus-3.2.0-01/etc/ssl00:13:05 ùúÜ keytool -genkeypair -keystore keystore.jks -storepass changeit -keypass changeit -alias jetty -keyalg RSA -keysize 2048 -validity 5000 -dname \"CN=*.gateway, O=Sonatype, L=Unspecified, ST=Unspecified, C=AU\" -ext \"SAN=DNS:silencer.gateway\" -ext \"BC=ca:true\" Enable HTTPS accessChange jetty-https.xml file: 123456789101112terrence@Silencer /Applications/nexus-3.0.0-03/etc00:18:59 ùúÜ diff jetty-https.xml jetty-https.xml.orig25,26c25,26&lt; &lt;Set name=\"KeyStorePassword\"&gt;changeit&lt;/Set&gt;&lt; &lt;Set name=\"KeyManagerPassword\"&gt;changeit&lt;/Set&gt;---&gt; &lt;Set name=\"KeyStorePassword\"&gt;OBF:1v2j1uum1xtv1zej1zer1xtn1uvk1v1v&lt;/Set&gt;&gt; &lt;Set name=\"KeyManagerPassword\"&gt;OBF:1v2j1uum1xtv1zej1zer1xtn1uvk1v1v&lt;/Set&gt;28c28&lt; &lt;Set name=\"TrustStorePassword\"&gt;changeit&lt;/Set&gt;---&gt; &lt;Set name=\"TrustStorePassword\"&gt;OBF:1v2j1uum1xtv1zej1zer1xtn1uvk1v1v&lt;/Set&gt; Add SSL port and include jetty-https.xml in file: 12345678terrence@Silencer /Applications/nexus-3.0.0-03/etc00:19:06 ùúÜ diff org.sonatype.nexus.cfg org.sonatype.nexus.cfg.orig3d2&lt; application-port-ssl=84445c4&lt; nexus-args=$&#123;karaf.etc&#125;/jetty.xml,$&#123;karaf.etc&#125;/jetty-http.xml,$&#123;karaf.etc&#125;/jetty-https.xml,$&#123;karaf.etc&#125;/jetty-http-redirect-to-https.xml,$&#123;karaf.etc&#125;/jetty-requestlog.xml---&gt; nexus-args=$&#123;karaf.etc&#125;/jetty.xml,$&#123;karaf.etc&#125;/jetty-http.xml,$&#123;karaf.etc&#125;/jetty-requestlog.xml Retrieve server‚Äôs certificate 1234567891011121314151617181920ùúÜ keytool -printcert -rfc -sslserver silencer.bigpond:8444 &gt; silencer.bigpond.pem-----BEGIN CERTIFICATE-----MIIDkDCCAnigAwIBAgIEAqo9kTANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJBVTEUMBIGA1UECBMLVW5zcGVjaWZpZWQxFDASBgNVBAcTC1Vuc3BlY2lmaWVkMREwDwYDVQQKEwhTb25hdHlwZTESMBAGA1UEAwwJKi5iaWdwb25kMB4XDTE2MDYxMjExMzY1M1oXDTMwMDIxOTExMzY1M1owYDELMAkGA1UEBhMCQVUxFDASBgNVBAgTC1Vuc3BlY2lmaWVkMRQwEgYDVQQHEwtVbnNwZWNpZmllZDERMA8GA1UEChMIU29uYXR5cGUxEjAQBgNVBAMMCSouYmlncG9uZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJNO5mDpBDQQ8n4t0P2z8ChWzIFQ3Pf+5U8x6P17O3WtKTfsbuRYobHYmas5tVdVdnLIqpb4JV9DWIoS+CNG6cRLy3GIWWT7CbjsrpDlOTArslvk3KuzQ0dsZNflRfdd+ughI2LczehEfhzPJzA+ZU8Am1CadM+VUa+T6MilFQMXpWfjND6BNnV+qr/MX1QQfSjiWt7oWBex0BB0VPv9ooBZUqO+8jk5fUY8wEIa/kqLUqIKGxIUx9BMQBwBJwDKZmK93DXSPvAFYbKQjj6/nbV9R1VWmR7fhkLG+Ixlx5ld2dxv4+xvXmS8s4NanBtKZWUfEYVPp7gUF9HZoW9A1jcCAwEAAaNSMFAwDAYDVR0TBAUwAwEB/zAhBgNVHREEGjAYghBzaWxlbmNlci5iaWdwb25khwQKAAAJMB0GA1UdDgQWBBQV3WTuC+GI8lHtH0uL+kYqTG+vczANBgkqhkiG9w0BAQsFAAOCAQEAUwL+qnKVT0ENZEZnDjB+cjPfvkeWOD05PrGUOn4YB4vllq2S6Cgfm0OaZ+vMt3KMXPf9pIgZ797jdPhOP/s5IVJItldky+u/Hk9gNtUwEjpgl0MjhSm/PqxR5XoJdkYlvUdtq+PTrU5RU3v3GImeOmlI4mM5PaZ6OT8HC5VMX5s9RawBr/5EbJHRM7EN8r3g4Y/2109YoHoiWAhnN6TC3RhmCoQqGOiPsS732KHUz3KqXVbq9VTRdA3dXqFj1cUSet1TXTPisaiehffvbqYm2vrJ5WYgqCwb8TadDg66TToj080qvA8cXAF7qlA8pOImrbVOs7tdANSAs+AOcqCkiA==-----END CERTIFICATE----- To get another Source Code Repository server‚Äôs certificate 1ùúÜ keytool -printcert -rfc -sslserver bitbucket.cd.paradise.org:443 &gt; bitbucket.cd.paradise.org.pem TestRestart Nexus and access: https://localhost:8444 Note Use utility tool ‚ÄúKeyStore Explorer‚Äù add additional CA certificates into keystore.jks file, especially when Gradle / Maven output error like: 1&gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target","tags":[]}]}